--[[


─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
─████████████───████████──████████─██████──────────██████─██████████████─██████──────────██████─██████████─██████████████──────────────────────██████──██████─████████───
─██░░░░░░░░████─██░░░░██──██░░░░██─██░░██████████──██░░██─██░░░░░░░░░░██─██░░██████████████░░██─██░░░░░░██─██░░░░░░░░░░██──────────────────────██░░██──██░░██─██░░░░██───
─██░░████░░░░██─████░░██──██░░████─██░░░░░░░░░░██──██░░██─██░░██████░░██─██░░░░░░░░░░░░░░░░░░██─████░░████─██░░██████████──────────────────────██░░██──██░░██─████░░██───
─██░░██──██░░██───██░░░░██░░░░██───██░░██████░░██──██░░██─██░░██──██░░██─██░░██████░░██████░░██───██░░██───██░░██──────────────────────────────██░░██──██░░██───██░░██───
─██░░██──██░░██───████░░░░░░████───██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██─────████░░████─────██░░██──██░░██──██░░██─██░░░░░░░░░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██░░░░░░░░░░██────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██████──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██████░░██─██░░██──██░░██─██░░██──────────██░░██───██░░██───██░░██──────────────────────────────██░░░░██░░░░██───██░░██───
─██░░████░░░░██───────██░░██───────██░░██──██░░░░░░░░░░██─██░░██──██░░██─██░░██──────────██░░██─████░░████─██░░██████████──────────────────────████░░░░░░████─████░░████─
─██░░░░░░░░████───────██░░██───────██░░██──██████████░░██─██░░██──██░░██─██░░██──────────██░░██─██░░░░░░██─██░░░░░░░░░░██────────────────────────████░░████───██░░░░░░██─
─████████████─────────██████───────██████──────────██████─██████──██████─██████──────────██████─██████████─██████████████──────────────────────────██████─────██████████─
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

]]--

loadstring(game:HttpGet("https://raw.githubusercontent.com/VxleLUA/Dynamic-Offical/main/System/Notifications/GameSupported.lua"))()
do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (5==v0) then v16=nil;function v16(v25,v26,...)local v27=1;local v28;v25=v5(v4(v25,5),"..",function(v39)if (v2(v39,2)==79) then v28=v1(v4(v39,1,1));return "";else local v79=v3(v1(v39,16));if v28 then local v88=0;local v89;while true do if (v88==0) then v89=v6(v79,v28);v28=nil;v88=1;end if (v88==1) then return v89;end end else return v79;end end end);local function v29(v40,v41,v42)if v42 then local v80=0 + 0 ;local v81;while true do if ((0 -0)==v80) then v81=(v40/((1572 -(1003 + 567))^(v41-(4 -3))))%((597 -(483 + 112))^(((v42-(1 + 0 + 0)) -(v41-(2 -1))) + (2 -1))) ;return v81-(v81%(1 + (0 -0))) ;end end else local v82=0;local v83;while true do if ((0 -0)==v82) then v83=(1431 -(680 + 749))^(v41-((1538 -(842 + 695)) + 0)) ;return (((v40%(v83 + v83))>=v83) and (1 + 0)) or (0 -0) ;end end end end local function v30()local v47=(1394 -(115 + 473)) -(59 + 747) ;local v48;while true do if (v47==(364 -(150 + 213))) then return v48;end if (v47==(1059 -((2553 -(619 + 889)) + 14))) then v48=v2(v25,v27,v27);v27=v27 + (1 -0) ;v47=(1039 -(744 + 293)) -1 ;end end end local function v31()local v49=0 + 0 ;local v50;local v51;while true do if (v49==0) then v50,v51=v2(v25,v27,v27 + (1677 -(1208 + 467)) );v27=v27 + 2 + 0 ;v49=1;end if (v49==1) then return (v51 * (845 -(1092 -(387 + 116)))) + v50 ;end end end local function v32()local v52,v53,v54,v55=v2(v25,v27,v27 + 3 );v27=v27 + 4 ;return (v55 * (26241337 -9464121)) + (v54 * (60077 + 5459)) + (v53 * (1601 -(957 + 388))) + v52 ;end local function v33()local v56=0;local v57;local v58;local v59;local v60;local v61;local v62;while true do if (v56==1) then v59=3 -2 ;v60=(v29(v58,1 -(0 + 0) ,1739 -(547 + 1172) ) * ((1 + 1)^32)) + v57 ;v56=2;end if (v56==(2 + (1943 -(1162 + 780)))) then if (v61==(0 + (280 -(168 + 112)))) then if (v60==(0 -0)) then return v62 * 0 ;else local v98=(1353 -(1023 + 330)) + 0 ;while true do if (v98==(251 -(216 + 16 + 19))) then v61=2 -(1 + 0) ;v59=366 -(228 + 138) ;break;end end end elseif (v61==(2364 -(314 + 3))) then return ((v60==(1619 -((2775 -2172) + 1016))) and (v62 * (1/(1300 -(588 + 712))))) or (v62 * NaN) ;end return v9(v62,v61-(2473 -(478 + 972)) ) * (v59 + (v60/((2 -0)^(131 -79)))) ;end if (v56==(3 -1)) then v61=v29(v58,1652 -(100 + 1531) ,11 + 20 );v62=((v29(v58,4 + 28 )==(1 + 0)) and  -1) or (1 + 0) ;v56=1732 -(707 + 1022) ;end if (v56==(1187 -(624 + 563))) then v57=v32();v58=v32();v56=1 -0 ;end end end local function v34(v43)local v63;if  not v43 then v43=v32();if (v43==(0 + 0)) then return "";end end v63=v4(v25,v27,(v27 + v43) -(3 -2) );v27=v27 + v43 ;local v64={};for v77=1 + 0 , #v63 do v64[v77]=v3(v2(v4(v63,v77,v77)));end return v7(v64);end local v35=v32;local function v36(...)return {...},v13("#",...);end local function v37()local v65=0 + 0 ;local v66;local v67;local v68;local v69;local v70;local v71;local v72;while true do if (v65==(2 + 0)) then v70=nil;v71=nil;v65=227 -(194 + 30) ;end if (v65==(1610 -(81 + 1528))) then v68=nil;v69=nil;v65=4 -2 ;end if (v65~=(1734 -(524 + 1207))) then else v72=nil;while true do local v90=0;local v91;while true do if (v90==0) then v91=0;while true do if ((1 -0)==v91) then if (0==v66) then local v113=1944 -(1187 + 757) ;while true do if (v113==(1 + 0)) then v69={};v66=1479 -(1337 + 141) ;break;end if (v113~=0) then else v67={};v68={};v113=1 -0 ;end end end if (v66==(3 + 0)) then for v116=1740 -(417 + 1322) ,v32() do v68[v116-(1 + 0) ]=v37();end for v118=3 -2 ,v32() do v69[v118]=v32();end return v70;end break;end if ((0 + 0)==v91) then if (v66~=(47 -(44 + 1))) then else local v114=0 -0 ;while true do if (v114==(50 -(48 + 2))) then local v124=0 -0 ;while true do if (v124==(144 -(51 + 93))) then for v132=788 -(164 + 623) ,v71 do local v133=0;local v134;local v135;local v136;while true do if ((1 + 0)==v133) then v136=nil;while true do if ((1184 -(309 + 874))==v134) then if (v135==(3 -2)) then v136=v30()~=(1444 -(129 + 1315)) ;elseif (v135==(2 + 0)) then v136=v33();elseif (v135~=(2 + 1)) then else v136=v34();end v72[v132]=v136;break;end if (v134==(1982 -(484 + 1498))) then local v142=0 + 0 ;local v143;while true do if (v142==(0 -0)) then v143=1266 -(1126 + 140) ;while true do if (v143==(0 -0)) then local v273=0 -0 ;local v274;while true do if (v273~=(0 + 0)) then else v274=0;while true do if (v274==(625 -(238 + 387))) then local v353=0;while true do if (v353==(1 + 0)) then v274=1 + 0 ;break;end if (v353==(0 + 0)) then v135=v30();v136=nil;v353=1 + 0 ;end end end if (v274~=(3 -2)) then else v143=1;break;end end break;end end end if (v143==(1 + 0)) then v134=1;break;end end break;end end end end break;end if (v133==(0 -0)) then local v139=0;while true do if (v139==(0 -0)) then v134=0 -0 ;v135=nil;v139=2 -1 ;end if (v139==(430 -(360 + 69))) then v133=26 -(9 + 16) ;break;end end end end end v70[3]=v30();v124=3 -2 ;end if (v124~=1) then else v114=1 -0 ;break;end end end if (v114~=(1 + 0)) then else for v125=1,v32() do local v126=0;local v127;local v128;local v129;while true do if (v126~=(1 + 0)) then else v129=nil;while true do if (v127==0) then local v140=0;while true do if ((2 -1)==v140) then v127=898 -(601 + 296) ;break;end if (v140==(0 -0)) then v128=1362 -(900 + 462) ;v129=nil;v140=1 + 0 ;end end end if (v127==(839 -(589 + 249))) then while true do if (0~=v128) then else v129=v30();if (v29(v129,731 -(426 + 304) ,2 -1 )~=0) then else local v144=1627 -(272 + 1355) ;local v145;local v146;local v147;local v148;local v149;while true do if (v144==(116 -(74 + 40))) then v149=nil;while true do if (v145==2) then while true do if (v146==(700 -(464 + 234))) then local v335=0 + 0 ;while true do if (v335==(439 -(243 + 196))) then local v368=0 + 0 ;while true do if ((1 + 0)==v368) then v335=1 + 0 ;break;end if (v368==(760 -(405 + 355))) then if (v29(v148,913 -(440 + 472) ,1)~=1) then else v149[3 -1 ]=v72[v149[7 -5 ]];end if (v29(v148,2 + 0 ,2)~=(1 + 0)) then else v149[3]=v72[v149[1243 -(1071 + 169) ]];end v368=1;end end end if (v335~=1) then else v146=5 -2 ;break;end end end if (v146~=(1652 -(920 + 732))) then else local v336=0 -0 ;while true do if (v336==(1972 -(581 + 1390))) then v146=733 -(618 + 114) ;break;end if (v336==0) then local v369=0 + 0 ;while true do if (v369~=(2 -1)) then else v336=1 + 0 ;break;end if (v369==(0 -0)) then v147=v29(v129,2 + 0 ,3 -0 );v148=v29(v129,8 -4 ,17 -11 );v369=1 -0 ;end end end end end if (v146==(1 + 0)) then local v337=0;local v338;while true do if (v337==(0 -0)) then v338=0 + 0 ;while true do if (v338==(0 + 0)) then local v394=0 + 0 ;while true do if (v394==(1067 -(700 + 367))) then v149={v31(),v31(),nil,nil};if (v147==(0 + 0)) then local v432=0 -0 ;local v433;while true do if (v432~=(0 + 0)) then else v433=0;while true do if (v433~=(0 + 0)) then else v149[1 + 2 ]=v31();v149[77 -(43 + 30) ]=v31();break;end end break;end end elseif (v147==(251 -(107 + 143))) then v149[3]=v32();elseif (v147==(4 -2)) then v149[4 -1 ]=v32() -((2 + 0)^16) ;elseif (v147~=(2 + 1)) then else local v450=0;local v451;while true do if (v450~=0) then else v451=0 -0 ;while true do if (v451==(1415 -(178 + 1237))) then v149[521 -(334 + 184) ]=v32() -(2^(1890 -(639 + 1235))) ;v149[1556 -(499 + 1053) ]=v31();break;end end break;end end end v394=1 + 0 ;end if (v394==(2 -1)) then v338=19 -(14 + 4) ;break;end end end if (v338==(1 + 0)) then v146=2 + 0 ;break;end end break;end end end if (v146==3) then if (v29(v148,2 + 1 ,822 -(200 + 619) )==(954 -(220 + 733))) then v149[4 + 0 ]=v72[v149[9 -5 ]];end v67[v125]=v149;break;end end break;end if (v145==(1 -0)) then local v292=0 -0 ;while true do if (v292==(1528 -(1324 + 203))) then v145=2;break;end if (v292~=0) then else v148=nil;v149=nil;v292=1 + 0 ;end end end if (v145~=(0 -0)) then else v146=902 -(58 + 844) ;v147=nil;v145=1 + 0 ;end end break;end if (v144==(1660 -(923 + 736))) then v147=nil;v148=nil;v144=2;end if (v144==(484 -(4 + 480))) then v145=246 -(171 + 75) ;v146=nil;v144=1;end end end break;end end break;end end break;end if (v126~=(0 + 0)) then else v127=0 -0 ;v128=nil;v126=1 + 0 ;end end end v66=6 -3 ;break;end end end if (v66~=1) then else local v115=0;while true do if (v115~=1) then else v72={};v66=1008 -(480 + 526) ;break;end if (v115==(0 -0)) then v70={v67,v68,nil,v69};v71=v32();v115=1 -0 ;end end end v91=1050 -(672 + 377) ;end end break;end end end break;end if (v65~=(0 -0)) then else local v84=0;while true do if (v84==1) then v65=1 + 0 ;break;end if (v84~=(0 + 0)) then else v66=0 + 0 ;v67=nil;v84=1 -0 ;end end end end end local function v38(v44,v45,v46)local v73=0;local v74;local v75;local v76;while true do if (v73==0) then v74=v44[1];v75=v44[2];v73=1;end if (v73==1) then v76=v44[3];return function(...)local v92=0;local v93;local v94;local v95;local v96;local v97;while true do if (v92==1) then v95={...};v96=v13("#",...) -1 ;v92=2;end if (v92==2) then v97=nil;function v97()local v99=v74;local v100=v75;local v101=v76;local v102=v36;local v103={};local v104={};local v105={};for v110=0,v96 do if ((1994>1577) and (v110>=v101)) then v103[v110-v101 ]=v95[v110 + 1 ];else v105[v110]=v95[v110 + 1 ];end end local v106=(v96-v101) + ((2 + 0) -1) ;local v107;local v108;while true do local v111=0 -(0 -0) ;local v112;while true do if (((0 -0)==v111) or ((1143 + 791)>=(436 + 2241))) then v112=0;while true do if ((((4368 -(126 + 1002)) -(44 + 786))>=(1143 -(94 + 37))) and (v112==(1335 -(779 + 556)))) then local v130=(328 + 21) -(156 + 193) ;while true do if ((v130==(0 + 0)) or ((5390 -1931)==2034)) then v107=v99[v93];v108=v107[1 + 0 ];v130=2 -1 ;end if (((661 -(2170 -(970 + 809)))<=(2231 -(1621 + 16))) and (v130==(1314 -(516 + 361 + 436)))) then v112=3 -2 ;break;end end end if (((1849 -(1822 + 26))==v112) or ((1818 + (2047 -(96 + 24)))==(663 -146))) then if (((183 + 2442)>=(1759 -(352 + 893))) and (v108<=((2744 -1684) -(153 + 883)))) then if ((v108<=11) or ((3129 + 1824)<=(382 + 819))) then if ((v108<=((1718 -442) -((2004 -753) + 20))) or (4690<=(381 + 1672))) then if ((v108<=(5 -3)) or ((37 + 1028)==(1790 + 692))) then if (((11477 -(20326 -12668))<(8376 -(3232 + 290))) and (v108<=(0 + 0))) then local v150=0;local v151;local v152;local v153;local v154;while true do if ((v150==(1463 -(703 + 760))) or ((3766 -(365 + 200))==(1975 -(112 + (1593 -(853 + 52)))))) then local v265=0;while true do if (((2929 -(947 + 179))<3310) and (v265==((0 + 0) -0))) then v151=0;v152=nil;v265=1 -0 ;end if ((v265==(1 + 0)) or ((4880 -(330 + 139))<(1819 + (2276 -(577 + 658))))) then v150=105 -((154 -119) + 69) ;break;end end end if ((v150==2) or ((3949 -1122)>=(18267 -(14995 -(424 + 586))))) then while true do if (((5543 -4093)<=(5145 -(3542 -(373 + 1451)))) and (v151==0)) then local v293=0 -0 ;while true do if ((((23533 -13903) -5231)>=(2053 -912)) and (v293==(856 -(556 + 300)))) then v152=v107[2];v153={v105[v152](v105[v152 + (1258 -(882 + 375)) ])};v293=26 -(19 + 6) ;end if ((v293==(1 + 0)) or ((1801 + 684)>=(3734 -(692 + 91)))) then v151=1;break;end end end if ((v151==(1 + 0)) or ((1154 + 326)<(958 -301))) then v154=0 + 0 ;for v308=v152,v107[4] do local v309=273 -((1435 -(1285 + 44)) + 167) ;local v310;while true do if (((1672 -(375 + 457))==(573 + 70 + 197)) and (v309==(0 + (0 -0)))) then v310=0 + 0 + 0 ;while true do if ((v310==(0 -0)) or ((427 + 2411 + 443)<=(4440 -3086))) then v154=v154 + (1287 -(901 + 385)) ;v105[v308]=v153[v154];break;end end break;end end end break;end end break;end if (((851 + 1624)>(54 + 158)) and (v150==(1 + 0))) then v153=nil;v154=nil;v150=1586 -(1068 + 516) ;end end elseif (((1453 -(55 + (179 -(120 + 57))))<(15051 -10283)) and (v108>(4 -3))) then v105[v107[3 -(3 -2) ]][v107[7 -4 ]]=v107[(1459 -357) -(540 + 558) ];else local v187=0;local v188;local v189;local v190;local v191;local v192;while true do if ((((5472 -(63 + 1)) -1552)>=(1311 + 144)) and (0==v187)) then v188=1477 -(980 + 497) ;v189=nil;v187=(1986 -(127 + 1858)) + 0 ;end if ((v187==1) or (((6120 -(566 + 721)) -(379 + 69 + 64))<=561)) then v190=nil;v191=nil;v187=1820 -((2996 -(976 + 722)) + (1213 -(239 + 454))) ;end if (((6941 -4588)==(2314 + 39)) and (v187==((2 -1) + 1))) then v192=nil;while true do if ((v188==(7 -5)) or ((6040 -2637)>=(906 + 3334))) then while true do if (((1173 -495)<=(6793 -(1627 + 334))) and ((3 -2)==v189)) then local v358=0 + 0 ;while true do if (((5062 -(41 + 394))>((5401 -(601 + 223)) -(1768 + 160))) and (v358==(269 -(203 + 66)))) then local v390=0 -(1236 -(63 + 1173)) ;while true do if ((((3709 + 2671) -(184 + 1343))>(4381 -1543)) and (v390==(1977 -(1547 + 430)))) then v192={};v191=v11({},{__index=function(v414,v415)local v427=0;local v428;while true do if ((((1593 -(359 + 89)) + 560)>1163) and (v427==(0 + 0))) then v428=v192[v415];return v428[927 -(916 + (17 -7)) ][v428[24 -(11 + 2 + 3 + 6) ]];end end end,__newindex=function(v416,v417,v418)local v429=0 -0 ;local v430;local v431;while true do if (((1290 + 3445)>=((3348 -(156 + 591)) -(24 + 86 + 235))) and (v429==(1 + 0))) then while true do if ((v430==(0 -0)) or ((159 + 2171)>=(1131 + 1302))) then v431=v192[v417];v431[1 + (0 -0) ][v431[1984 -(1160 + 822) ]]=v418;break;end end break;end if ((v429==0) or ((4033 -((706 -(41 + 423)) + 41))<=(4256 -(1189 + 327)))) then local v440=0 + 0 ;while true do if (((6009 -((1708 -1081) + 1208))<=(3100 + 1139)) and (v440==(789 -(111 + 677)))) then v429=1 + (0 -0) ;break;end if ((v440==(0 -0)) or (1724>(2308 -((136 -(29 + 86)) + 344)))) then v430=0;v431=nil;v440=1 + 0 ;end end end end end});v390=1043 -(410 + 632) ;end if ((3116<3563) and (v390==(1 -0))) then v358=(1777 -(708 + 1068)) + 0 ;break;end end end if ((v358==(1 + 0)) or ((3479 -(1596 + 288))>(630 + 1505))) then v189=2;break;end end end if ((v189==(0 -(0 -0))) or ((3194 -(2508 -1319))>((215 -(23 + 75)) + (5102 -(387 + 18))))) then local v359=0;while true do if ((v359==(3 -2)) or ((6256 -(218 + 1774))>=(2960 + 2017))) then v189=1304 -(57 + 919 + 327) ;break;end if ((v359==0) or ((251 + 214)<=35)) then local v391=59 -(56 + 3) ;while true do if ((v391==(0 -0)) or (473==(484 + 743))) then v190=v100[v107[3]];v191=nil;v391=1 + 0 ;end if ((3675>(136 + 232)) and (v391==(823 -(345 + 477)))) then v359=1 + 0 ;break;end end end end end if (((4194 -3259)<(3969 -(594 + 84 + 417))) and (v189==2)) then for v370=1,v107[3 + 1 ] do local v371=(990 + 208) -(288 + 910) ;local v372;local v373;while true do if ((((1488 -(33 + 11)) -860)<=(9851 -5539)) and (v371==(1 -(0 -0)))) then while true do if ((v372==(0 + 0)) or (1370>=(7576 -4701))) then v93=v93 + 1 ;v373=v99[v93];v372=314 -(263 + 50) ;end if (((351 + 273)<(6798 -4542)) and (v372==1)) then if ((v373[508 -(286 + 164 + 57) ]==20) or (4577<(14803 -10361))) then v192[v370-1 ]={v105,v373[(29 -22) -4 ]};else v192[v370-(384 -(366 + 17)) ]={v45,v373[3]};end v104[ #v104 + 1 + 0 ]=v192;break;end end break;end if ((4982==(11727 -(1888 + 4857))) and ((0 + 0)==v371)) then v372=0 + 0 ;v373=nil;v371=1;end end end v105[v107[1702 -(234 + (2935 -(1078 + 391))) ]]=v38(v190,v191,v46);break;end end break;end if (((2319 -(129 + 1007))<=1225) and (v188==(1818 -(668 + 1149)))) then v191=nil;v192=nil;v188=57 -(31 + 24) ;end if ((v188==0) or ((4355 + 157)<=280)) then v189=0;v190=nil;v188=1 + 0 ;end end break;end end end elseif ((v108<=((1618 -(163 + 1453)) + 1)) or ((510 + 6)<(188 + 45))) then if ((((4687 -(371 + 1538)) + 2039)>3693) and (v105[v107[8 -6 ]]<v105[v107[1 + 2 + 1 ]])) then v93=v93 + (145 -(26 + 118)) ;else v93=v107[(2250 -(397 + 556)) -(811 + 483) ];end elseif (((3906 -(42 + 342))>(1288 + 1760)) and (v108>(1228 -((869 -290) + 645)))) then local v194=858 -(95 + 199 + 564) ;local v195;local v196;local v197;local v198;while true do if ((v194==(1255 -(551 + 704))) or ((6380 -(5069 -3153))<(6569 -3456))) then v195=0 -0 ;v196=nil;v194=476 -(359 + 116) ;end if (((4767 -(44 + 115))<((11190 -7570) + 1206)) and (v194==(48 -(29 + 4 + 14)))) then v197=nil;v198=nil;v194=2;end if ((2994<=(2661 + 1834)) and (v194==(6 -4))) then while true do if ((((4223 -(138 + 14)) -2029)<(16197 -12252)) and (v195==0)) then local v317=0 -0 ;while true do if (((178 -(127 + 50))==v317) or (3352<(549 + 506))) then v195=1 + 0 ;break;end if ((v317==(1694 -(435 + 1259))) or ((3512 -(229 + 553 + 350))==3244)) then v196=v107[2];v197=v105[v196 + (1370 -(797 + (1538 -(713 + 254)))) ];v317=325 -(136 + 188) ;end end end if ((v195==(1 + 1)) or ((5577 -3063)<((1857 + 1262) -(173 + 51 + 1125)))) then if ((2149<(13756 -(7069 + 2247))) and (v197>(0 -(0 -0)))) then if ((4880==((9747 -2997) -(65 + 1805))) and (v198<=v105[v196 + (2 -1) ])) then local v374=0;local v375;while true do if ((v374==(0 + 0)) or ((2985 + 159)<=12)) then v375=0;while true do if (((13 + 46 + 1245)>=(1565 -(351 + 503 + 301))) and (v375==0)) then v93=v107[3];v105[v196 + (993 -(262 + 728)) ]=v198;break;end end break;end end end elseif ((v198>=v105[v196 + (2 -1) ]) or ((3288 + 151)==(4777 -(207 + 631)))) then local v376=0;local v377;local v378;while true do if (((2995 -(1421 + 193))==(2364 -(105 + 878))) and (v376==(0 -0))) then v377=0;v378=nil;v376=1 -0 ;end if ((v376==1) or ((1196 -438)<(339 -142))) then while true do if ((v377==(1071 -(208 + 863))) or ((5366 -(614 + 1000))<=(1090 -(116 + 389)))) then v378=(327 -(18 + 309)) -(0 + 0) ;while true do if (((6697 -(1671 + 166))==(6159 -(241 + (2317 -(1140 + 119))))) and (v378==0)) then v93=v107[6 -3 ];v105[v196 + 2 + 1 ]=v198;break;end end break;end end break;end end end break;end if ((648<=4345) and (v195==1)) then v198=v105[v196] + v197 ;v105[v196]=v198;v195=2;end end break;end end else local v199=(186 + 914) -(576 + (1897 -(796 + 577))) ;local v200;while true do if ((v199==(0 + 0)) or ((586 + (2517 -(113 + 384)))>=(12020 -8704))) then v200=v107[1933 -(31 + 1900) ];v105[v200](v105[v200 + (1465 -(423 + 1041)) ]);break;end end end elseif ((v108<=(4 + 4)) or ((2113 -((199 -77) + (2001 -(116 + 177))))==((3353 + 3220) -2309))) then if (((12815 -(3087 + 5386))==4342) and (v108<=((21 -6) -9))) then local v155=0 -0 ;local v156;local v157;local v158;local v159;local v160;while true do if ((((10965 -5090) -3457)==(4409 -(1167 + (1517 -(296 + 397))))) and (v155==(1 + 0))) then v158=nil;v159=nil;v155=2;end if ((v155==(0 + (1828 -(228 + 1600)))) or ((1548 -(271 + 536))>=(4537 -(1842 + 1616)))) then v156=0 + 0 ;v157=nil;v155=1474 -(1331 + 142) ;end if ((v155==2) or ((2454 -(166 + 316 + (142 -65)))==(5266 -2896))) then v160=nil;while true do if ((((5333 -(869 + 1050)) -(283 + 81 + 1387))==(5127 -3464)) and ((0 + 0)==v156)) then local v294=0;while true do if ((v294==(0 + 0)) or ((4466 -2720)>=(4425 -(22 + 18 + 94)))) then v157=v107[1 + 1 ];v158,v159=v102(v105[v157](v105[v157 + (2 -1) ]));v294=37 -(21 + 15) ;end if ((4383>1303) and (v294==(1617 -(262 + 1354)))) then v156=1220 -(1007 + 212) ;break;end end end if ((3142>=((1426 + 2451) -1764)) and (v156==1)) then local v295=0;while true do if ((v295==((1492 -1113) -(114 + 265))) or ((276 -(135 + 71))>(1842 -(2288 -(85 + 890))))) then v94=(v159 + v157) -1 ;v160=0;v295=1;end if ((v295==(1 + (0 -0))) or (4324==1949)) then v156=2;break;end end end if (((3311 + 410)==3721) and ((1 + 1)==v156)) then for v311=v157,v94 do local v312=1101 -(435 + 666) ;local v313;local v314;while true do if (((3562 -(513 + (381 -255)))==((4163 + 5009) -6249)) and (v312==((131 + 1808) -(470 + 1468)))) then while true do if (((1108 -(1276 -(297 + 221)))==(361 -(7 + 4))) and (v313==(0 -(0 -0)))) then v314=0 + 0 + 0 ;while true do if (((840 + 1705)>((6277 + 19) -3926)) and (v314==(0 + 0))) then v160=v160 + 1 ;v105[v311]=v158[v160];break;end end break;end end break;end if ((v312==(0 + 0)) or ((1212 -(29 + 11))>(5083 -((2961 -(1189 + 585)) + 661)))) then v313=0 + 0 + 0 ;v314=nil;v312=215 -(25 + 189) ;end end end break;end end break;end end elseif ((v108>(299 -(134 + 143 + 15))) or ((44 + (5601 -2438))>=4460)) then local v201=1328 -((807 -(52 + 26)) + (918 -(191 + 128))) ;local v202;while true do if ((v201==(0 -0)) or (((3958 -2954) + 199 + 2345)<(6180 -4156))) then v202=v107[(37 -(12 + 23)) + 0 ];v105[v202]=v105[v202](v14(v105,v202 + (628 -(208 + 419)) ,v107[2 + 1 + (93 -(63 + 30)) ]));break;end end else v93=v107[1083 -(580 + (1967 -1467)) ];end elseif ((v108<=9) or ((1461 + 2127)<((1123 + 3455) -1525))) then local v161=(1010 -(395 + 615)) + 0 + 0 ;local v162;local v163;local v164;local v165;local v166;while true do if ((v161==(455 -(371 + 84))) or (((3180 + 1228) -(653 + (1648 -(252 + 1081))))<(179 + (434 -285)))) then v162=0 -0 ;v163=nil;v161=1 -0 ;end if ((v161==(6 -4)) or (3662<=((659 + 44) -(74 + 24)))) then v166=nil;while true do if (((2929 -(325 + 619))<=(9205 -5351)) and (((3 + 0) -1)==v162)) then while true do if ((v163==(3 -2)) or (((11397 -(954 + 649)) -6187)<=(588 + (1705 -(176 + 1007))))) then v166=v105[v164 + (2 -0) ];if (((1593 -764)<(1137 + 513 + (1885 -1176))) and (v166>(1085 -(577 + 508)))) then if (((10835 -(7208 -(728 + 407)))>=(5545 -(71 + 324 + 91 + 1299))) and (v165>v105[v164 + (92 -(52 + 39)) ])) then v93=v107[8 -5 ];else v105[v164 + 3 ]=v165;end elseif (((18664 -14632)<((60413 -44795) -10727)) and (v165<v105[v164 + 1 ])) then v93=v107[9 -6 ];else v105[v164 + 3 ]=v165;end break;end if ((v163==(0 -0)) or ((722 + 525)>=2964)) then local v343=846 -((1275 -(1069 + 160)) + 800) ;local v344;while true do if ((v343==(0 + 0)) or ((20097 -15606)==((1960 + 301) -(329 + 981)))) then v344=0 + 0 ;while true do if (((1964 -(1823 + 141))==v344) or ((863 -((732 -(586 + 119)) + 70))==(4295 -(264 + 74)))) then local v395=0;while true do if ((v395==(0 -0)) or (((12084 -8933) + (1034 -(213 + 132)))<=(6 + 5))) then v164=v107[2 -0 ];v165=v105[v164];v395=1 + (1511 -(467 + 1044)) ;end if ((v395==(1821 -(1613 + (1223 -(663 + 353))))) or ((519 + 348)>(190 + 1031))) then v344=1468 -(863 + 279 + 325) ;break;end end end if (((10322 -5413)>=(1319 -775)) and (v344==1)) then v163=155 -(107 + (120 -73)) ;break;end end break;end end end end break;end if (((6598 -4448)<=(9615 -6378)) and (v162==((336 -(280 + 56)) -0))) then v163=(543 -(383 + 160)) -0 ;v164=nil;v162=763 -(364 + 398) ;end if ((v162==(1 + 0)) or ((1476 -(864 + (1931 -(215 + 1678))))>(3551 -(1733 + 164)))) then v165=nil;v166=nil;v162=1376 -(325 + 897 + 152) ;end end break;end if ((v161==(1644 -(1351 + 292))) or ((526 + (11224 -7807))>4558)) then v164=nil;v165=nil;v161=1 + 1 ;end end elseif (((3229 + 978)>=(3535 -(986 + 817))) and (v108==(17 -7))) then v105[v107[6 -4 ]]= #v105[v107[3]];else local v205=0;local v206;local v207;local v208;while true do if (((2813 -(1168 + 831))<3355) and (v205==((1 + 1) -1))) then v208=nil;while true do if (((1 + (0 -0))==v206) or ((1700 + 1397)==(166 + 1841))) then while true do if ((258<(1564 + 125)) and (v207==0)) then v208=v107[2 + (1878 -(864 + 1014)) ];do return v14(v105,v208,v208 + v107[2 + 1 + 0 ] );end break;end end break;end if (((41 + 708 + 510)==((1308 -(529 + 421)) + (1484 -583))) and (((740 + 401) -(291 + 850))==v206)) then local v319=0;while true do if ((v319==(0 -0)) or ((2469 -(911 + (1482 -1024)))==(5084 -2644))) then v207=1860 -(1035 + 825) ;v208=nil;v319=1 + 0 ;end if ((v319==1) or ((11081 -6303)<(4228 -(302 + (2858 -2055))))) then v206=336 -(157 + 178) ;break;end end end end break;end if ((v205==((41 -(31 + 10)) -0)) or (390==(197 + 432))) then v206=0 -(1850 -(1081 + 769)) ;v207=nil;v205=825 -((2343 -(918 + 825)) + 224) ;end end end elseif ((((2278 -(633 + 1046)) + (2728 -(1502 + 402)))<=(2683 -(624 + 320))) and (v108<=(402 -(351 + 34)))) then if ((v108<=(117 -(42 + 61))) or (1005<114)) then if ((3310<=(4279 -(714 + 68))) and (v108<=(8 + 4))) then local v167=620 -(234 + 386) ;local v168;local v169;while true do if (((5166 -3013)>=(224 -172)) and (v167==1)) then while true do if ((1274<=(1628 + 14)) and (v168==0)) then v169=v107[5 -3 ];v105[v169](v14(v105,v169 + (762 -(592 + 169)) ,v107[2 + 1 ]));break;end end break;end if ((v167==((433 -(346 + 87)) -0)) or ((4150 -(70 + 1152))>=(4982 -(464 + (2538 -(895 + 916)))))) then v168=0 -(0 + 0) ;v169=nil;v167=(299 -(45 + 68)) -((1344 -(1032 + 241)) + 114) ;end end elseif ((v108>13) or (3374<=(67 + 48))) then v105[v107[1 + 1 ]]=v107[3];else local v211=0 -(0 + 0) ;local v212;local v213;local v214;local v215;local v216;while true do if ((1893>(2589 -(1689 + 46))) and (((1000 -(956 + 44)) + 0)==v211)) then v212=1211 -(347 + (2719 -(1629 + 226))) ;v213=nil;v211=1779 -(1260 + (2133 -(1157 + 458))) ;end if ((v211==(1521 -(1170 + 350))) or ((217 + 194)==(4193 -2578))) then local v287=0 -0 ;while true do if (((1900 -((1740 -1312) + 479))<=(169 + 2600 + 786)) and (v287==(0 -0))) then v214=nil;v215=nil;v287=1163 -(671 + 491) ;end if (((1160 -360)<(3468 + 285)) and (v287==(1132 -(7 + 1124)))) then v211=5 -3 ;break;end end end if ((((7340 -(1875 + 96)) -(289 + 409))==(5273 -((291 -(42 + 147)) + (1892 -1392)))) and (v211==(8 -6))) then v216=nil;while true do if ((v212==1) or (((10622 -6357) -(56 + 125))<(3117 -(487 + 834)))) then local v320=0 -0 ;local v321;while true do if (((2490 + 1538)>2057) and (v320==(1570 -(1507 + 35 + 28)))) then v321=0 -0 ;while true do if (((5054 -(137 + 330))>=(4777 -(397 + 110))) and (v321==(2 -1))) then v212=(1408 -(598 + 276)) -(103 + 75 + 354) ;break;end if ((v321==0) or ((4073 -((439 -(127 + 296)) + 17))>=((577 -(168 + 324)) + 4620))) then v94=(v215 + v213) -(1 + 0) ;v216=0 + (210 -(144 + 66)) ;v321=1;end end break;end end end if ((v212==(0 + 0)) or ((471 + 4397)==((3505 -(330 + 1360)) -(137 + 897)))) then local v322=0 + 0 ;local v323;while true do if ((v322==0) or ((10688 -7951)==((335 -(11 + 233)) + 174 + 151))) then v323=(1539 -(1094 + 445)) + (352 -(81 + 271)) ;while true do if ((v323==(1 -0)) or ((11235 -6771)==2995)) then v212=866 -(428 + 437) ;break;end if (((5115 -(216 + 613))>(3443 -(1476 + (1905 -(975 + 567))))) and (v323==0)) then local v392=0 + 0 ;while true do if (((2 -1)==v392) or ((2988 -((1469 -(1361 + 47)) + 16))>((7612 -2093) -((2086 -786) + (1978 -1462))))) then v323=1 + 0 ;break;end if (((348 + (551 -159))<((4791 + 7288) -(36753 -28541))) and (0==v392)) then v213=v107[1142 -(358 + 782) ];v214,v215=v102(v105[v213](v14(v105,v213 + (2 -1) ,v107[310 -(8 + 299) ])));v392=1 + 0 ;end end end end break;end end end if (((2610 + 1230)>=(1563 -(235 + 1089))) and (v212==(1787 -((2768 -(311 + 689)) + 17)))) then for v345=v213,v94 do local v346=(0 -0) -0 ;local v347;local v348;while true do if ((v346==(278 -(102 + 175))) or ((258 + 93)>=(1080 + 282))) then while true do if (((1179 -379)<=4608) and (v347==((4389 -2524) -(933 + 155 + 777)))) then v348=0;while true do if ((1140<=(2578 -(18 + 19))) and (v348==0)) then v216=v216 + 1 ;v105[v345]=v214[v216];break;end end break;end end break;end if ((((1076 -(275 + 531)) + 514)<(867 + 3521)) and (v346==(0 + 0))) then v347=1758 -(811 + 747 + 200) ;v348=nil;v346=1 + 0 ;end end end break;end end break;end end end elseif ((((12776 -7201) -3551)==(1614 + (1156 -746))) and (v108<=(5 + 10))) then v105[v107[(743 -(682 + 54)) -5 ]]=v105[v107[3 -0 ]][v107[(4 -3) + 3 ]];elseif ((((2749 + 7238) -7417)<(349 + (10041 -5718))) and (v108==((1541 + 363) -(1565 + 323)))) then v105[v107[(1006 -612) -(218 + 174) ]]=v45[v107[3 -0 ]];else v45[v107[1658 -(565 + 1090) ]]=v105[v107[2]];end elseif (((1275 + 1924)>(703 + 1956)) and (v108<=(45 -25))) then if ((v108<=(30 -12)) or ((1372 + 452 + 2830)<(247 + 382))) then if ( not v105[v107[5 -(8 -5) ]] or ((2101 -(1181 + (2511 -(764 + 1054))))==(133 + 2794))) then v93=v93 + 1 ;else v93=v107[1 + 1 + 1 ];end elseif (((1339 -(633 + 435))>(2057 -(1104 + 803))) and (v108>(15 + 4))) then v105[v107[4 -2 ]]=v105[v107[2 + 1 ]];else v105[v107[975 -(27 + 946) ]][v107[(5 + 9) -(38 -27) ]]=v105[v107[129 -(44 + 23 + 58) ]];end elseif (((493 + 581)>(569 + 284)) and (v108<=((1582 -(109 + 300)) -(510 + 223 + 418)))) then if ((v108>(775 -(434 + 320))) or ((668 + 2034)<=(1211 + 80))) then v105[v107[5 -3 ]]=v105[v107[14 -11 ]] -v105[v107[(696 -(233 + 460)) + 1 ]] ;else for v266=v107[2],v107[29 -(15 + 11) ] do v105[v266]=nil;end end elseif (((448 -241)<((120 + 1339) -(394 + 617))) and (v108>(1926 -(1680 + 223)))) then if (((8675 -(6526 -(20 + 55)))>1062) and (v107[2]<v105[v107[7 -3 ]])) then v93=v93 + (1 -0) ;else v93=v107[3];end else local v227=0 + 0 ;local v228;local v229;local v230;while true do if (((4265 -(284 + 16))<=(21200 -16638)) and (v227==0)) then v228=v107[(38 + 769) -(326 + 479) ];v229={v105[v228](v14(v105,v228 + 1 ,v94))};v227=4 -3 ;end if ((v227==((129 -(103 + 25)) + 0)) or ((16685 -(19276 -7336))<(2220 -1039))) then v230=0 -0 ;for v297=v228,v107[546 -(34 + 95 + 413) ] do local v298=0 + 0 ;local v299;while true do if (((0 + 0)==v298) or ((3370 -(46 + 1458))==(4549 -(415 + 185)))) then v299=0 + 0 ;while true do if (((63 + 97)<=(24330 -19374)) and (v299==(0 -0))) then v230=v230 + 1 ;v105[v297]=v229[v230];break;end end break;end end end break;end end end elseif ((1241>=506) and (v108<=(6 + 24 + 6))) then if (((5037 -3304)<2796) and (v108<=((1808 -(717 + 988)) -73))) then if ((v108<=27) or (((17440 -12103) -2570)>=(5749 -((2434 -(1301 + 554)) + 422)))) then if (((3728 -2063)<=4068) and (v108<=(73 -48))) then local v172=0 -0 ;local v173;local v174;while true do if ((((1338 -(655 + 144)) + (1104 -(6 + 278)))==(2988 -1629)) and (v172==(1 + 0 + 0))) then for v276=v173 + (1 -0) ,v94 do v8(v174,v105[v276]);end break;end if ((1909>(164 + 63)) and (v172==(0 -0))) then v173=v107[1434 -(905 + 527) ];v174=v105[v173];v172=3 -2 ;end end elseif (((2467 -1802)<=2046) and (v108>(16 + 10))) then v105[v107[(1882 -(1187 + 693)) -0 ]]=v46[v107[(3 + 4) -4 ]];else local v233=0 + 0 ;local v234;local v235;local v236;while true do if ((v233==(714 -(212 + 501))) or ((1920 + 1749)<=2075)) then v236=nil;while true do if (((7317 -2668)>((2966 -(573 + 412)) + 956)) and (((235 + 369) -(157 + 447))==v234)) then local v324=(0 + 0) -0 ;local v325;while true do if (((0 -0)==v324) or ((207 + 4589)<=2803)) then v325=0;while true do if (((5823 -(1559 + 245))>(1429 + 164)) and (v325==(0 + (608 -(144 + 464))))) then local v393=0 -0 ;while true do if ((v393==((3053 -(875 + 369)) -(1412 + (1084 -(37 + 650))))) or ((55 + (1360 -(307 + 182)))==(1583 + 2271 + 766))) then v235=v107[1 + 1 ];v236=v105[v107[3]];v393=1 + 0 ;end if ((v393==(481 -(95 + 377 + 8))) or ((2200 -(469 + 960))<(2977 -2311))) then v325=1 + 0 ;break;end end end if (((1 -0)==v325) or ((698 + 2121)>=((8946 -(566 + 46)) -3668))) then v234=1;break;end end break;end end end if (((7493 -(5861 -(184 + 1703)))==(3753 -(216 + 18))) and (v234==(2 -1))) then v105[v235 + (1239 -(346 + 892)) ]=v236;v105[v235]=v236[v107[3 + 1 ]];break;end end break;end if (((5085 -3312)<(6069 -4019)) and (v233==(1205 -(891 + 314)))) then v234=0 + (522 -(350 + 172)) ;v235=nil;v233=1 -0 ;end end end elseif ((v108<=((1376 -(353 + 384)) -(554 + 57))) or ((2942 -1685)==(6554 -(1687 + 103)))) then local v175=1008 -(461 + 547) ;local v176;local v177;while true do if ((((2054 -(160 + 152)) -(171 + 283))<(4544 -2345)) and (v175==((0 + 0) -0))) then v176=1709 -(774 + 399 + 536) ;v177=nil;v175=1 + 0 ;end if ((v175==(1 -0)) or ((2717 + 964)==((25976 -16492) -(565 + 5426)))) then while true do if ((v176==0) or (((2122 -(1785 + 18)) + 4633)<=(339 -(80 + 100)))) then v177=v107[806 -(472 + 332) ];v105[v177](v14(v105,v177 + (3 -2) ,v94));break;end end break;end end elseif ((v108>(13 + 16)) or ((135 + 11)>=(9197 -(16413 -10520)))) then if ((v105[v107[1 + 1 ]]==v107[753 -(656 + 93) ]) or ((5818 -(388 + 1106))==((1457 -(104 + 12)) -(177 + 61)))) then v93=v93 + (1905 -(727 + 1177)) ;else v93=v107[423 -(397 + 23) ];end else local v237=0 + 0 + 0 ;local v238;local v239;local v240;while true do if (((123 + (1618 -1212))==(1928 -(826 + (1508 -(778 + 157))))) and (v237==0)) then v238=0 -(0 + 0) ;v239=nil;v237=853 -(379 + 473) ;end if (((1093 -(945 + 147))==v237) or (526>=(3039 -(1095 + 214)))) then v240=nil;while true do if (((4527 -(87 + 39))==(2933 + 1468)) and (v238==((3676 -1814) -(256 + 1606)))) then v239=0 + (525 -(237 + 288)) ;v240=nil;v238=1 + (1669 -(566 + 1103)) ;end if ((v238==1) or ((2998 -(3191 -1508))>=(335 + 1057))) then while true do if (((9106 -4420)<=((6143 -(51 + 1235)) -(151 + 5))) and (v239==((0 -0) -0))) then v240=v107[1 + 1 ];v105[v240]=v105[v240]();break;end end break;end end break;end end end elseif ((v108<=(135 -(53 + 49))) or ((1234 -(495 + (979 -567)))==(2585 -(1103 + (614 -(19 + 70)))))) then if ((92<(5712 -(462 + (1453 -(318 + 5))))) and (v108<=31)) then v105[v107[(1761 -(625 + 1134)) -(0 + 0) ]]=v38(v100[v107[3]],nil,v46);elseif ((v108==((98 -38) -28)) or ((5633 -(103 + 595))==595)) then local v241=0 -0 ;local v242;local v243;local v244;while true do if (((5685 -(54 + 960))>(4657 -1949)) and (v241==(1 + 0))) then v244=nil;while true do if ((v242==(1 -0)) or (((1608 -(550 + 225)) -470)>(5171 -2922))) then for v349=v243 + 1 ,v107[1 + 2 ] do v8(v244,v105[v349]);end break;end if (((1558 -(515 + 1043))==v242) or ((1140 + 309)==((36190 -27083) -(16372 -11018)))) then local v329=0 + 0 + 0 ;while true do if ((((1531 -(265 + 804)) -(121 + 341))==v329) or (4930<=(936 -(504 -(129 + 44))))) then v243=v107[2];v244=v105[v243];v329=(1575 -(398 + 1175)) -(2 -1) ;end if ((v329==1) or (4875<1502)) then v242=829 -(635 + 193) ;break;end end end end break;end if ((((3947 -(1109 + 440)) -(1925 -744))==1217) and (v241==0)) then v242=0 -(523 -(364 + 159)) ;v243=nil;v241=(1 + 0) -0 ;end end elseif ((((167 -105) -(63 -27))<((29065 -19159) -6261)) and v105[v107[3 -1 ]]) then v93=v93 + 1 ;else v93=v107[1609 -(910 + 696) ];end elseif ((v108<=34) or (3310<((1092 + 2215) -2429))) then local v179=0 -0 ;local v180;local v181;while true do if ((v179==(1148 -(731 + 417))) or ((2308 -703)>(173 + 2151 + 217))) then v180=681 -(138 + 543) ;v181=nil;v179=1 -0 ;end if ((((23455 -(1015 + 116)) -17734)>=(3930 -(78 + 30))) and (v179==(2 -1))) then while true do if (((0 -0)==v180) or (1828>((3211 -(260 + 222)) -(236 + 493)))) then v181=v107[2];v105[v181]=v105[v181](v14(v105,v181 + 1 + 0 ,v94));break;end end break;end end elseif (((2053 -(573 + 253))<(12187 -8097)) and (v108==35)) then if ((((4345 -(1064 + 414)) -(11 + 52))==(4286 -(6651 -5169))) and (v107[2 + 0 ]==v105[v107[4]])) then v93=v93 + (588 -(15 + 572)) ;else v93=v107[1295 -((352 -(215 + 14)) + 1169) ];end else local v245=v107[2];local v246=v107[10 -6 ];local v247=v245 + 2 ;local v248={v105[v245](v105[v245 + 1 + 0 ],v105[v247])};for v270=3 -2 ,v246 do v105[v247 + v270 ]=v248[v270];end local v249=v248[1420 -(1319 + (218 -118)) ];if (v249 or (3048<(2708 -(107 + (1697 -826))))) then local v280=0 + 0 ;local v281;while true do if ((v280==((0 -0) -0)) or (((11155 -6004) -((2193 -(21 + 1248)) + 878))<=((337 + 2562) -((2548 -(48 + 1731)) + 611)))) then v281=(0 + 0) -0 ;while true do if ((v281==(0 + 0)) or ((12170 -8268)<=(3475 -(785 + 114)))) then v105[v247]=v249;v93=v107[1026 -(338 + 685) ];break;end end break;end end else v93=v93 + 1 + 0 ;end end elseif (((1460 + 493)==((688 + 4487) -3222)) and (v108<=(8 + 34))) then if ((v108<=(29 + 10)) or (528==(7652 -3245))) then if ((1162>=(2444 -1341)) and (v108<=37)) then v105[v107[(1 + 1) -0 ]]=v107[13 -10 ]~=0 ;elseif ((2208<(6633 -(8132 -5229))) and (v108>(1707 -(1280 + 389)))) then do return;end else v105[v107[2]]={};end elseif ((v108<=(21 + 19)) or ((1056 + 1606)>=(3601 -(153 + 5)))) then v105[v107[2]]=v105[v107[5 -(4 -2) ]][v105[v107[1124 -(416 + 704) ]]];elseif ((v108==(29 + 12)) or (21>=(2048 -(909 + 361)))) then v105[v107[5 -(2 + 1) ]]=v105[v107[8 -5 ]] + v107[(395 -(235 + 156)) + (0 -0) ] ;else local v252=972 -((1384 -962) + 550) ;local v253;local v254;local v255;local v256;while true do if ((v252==2) or ((541 + 2638 + 211)==(5386 -(339 + 1553)))) then while true do if ((v253==(1 + 0)) or ((5423 -(1104 + 149))<=(1427 + 1842))) then v256=v107[3 + (571 -(467 + 104)) ];for v350=1 -0 ,v256 do v255[v350]=v105[v254 + v350 ];end break;end if ((v253==(0 + 0 + 0)) or (2898<(795 -(50 + 103)))) then v254=v107[1228 -(604 + (1722 -1100)) ];v255=v105[v254];v253=102 -(44 + 57) ;end end break;end if (((322 + 232 + 443)<=(4371 -(296 + 316))) and ((1 + 0)==v252)) then v255=nil;v256=nil;v252=8 -6 ;end if (((487 -((994 -(521 + 343)) + 6))<(10216 -(4555 + 2949))) and (v252==(809 -((1477 -(431 + 961)) + 724)))) then v253=0 -0 ;v254=nil;v252=(242 + 495) -(140 + 596) ;end end end elseif (((2763 -(1158 + 492))<(4472 -(186 + 500))) and (v108<=((2418 -(299 + 451)) -(998 + 625)))) then if ((v108<=((2322 -(372 + 743)) -(430 + 734))) or (((8389 -(228 + 83)) -5160)>(5262 -(843 + 528)))) then v105[v107[2 + 0 ]]();elseif ((4076>(5734 -3612)) and (v108>(2 + 42))) then local v257=59 -(38 + 21) ;local v258;local v259;while true do if ((v257==1) or ((359 + (595 -333))>1302)) then while true do if ((v258==(778 -(162 + 616))) or ((2617 + 1429)<(5408 -(1685 + 55)))) then v259=v107[5 -3 ];v105[v259]=v105[v259](v105[v259 + ((2 + 0) -1) ]);break;end end break;end if ((0==v257) or ((4341 -(682 + 1026))==1875)) then local v289=1295 -(980 + 315) ;while true do if (((15221 -11048)<(1405 + (3543 -(17 + 35)))) and (v289==(0 + 0))) then v258=0 -0 ;v259=nil;v289=423 -(197 + 48 + 177) ;end if (((1 + 0)==v289) or ((17163 -12380)<((7559 -3402) -((661 -(121 + 479)) + 44)))) then v257=1 + 0 + 0 ;break;end end end end elseif (((4294 -((3672 -(116 + 1679)) + 112))<4242) and (v105[v107[2 + 0 ]]<=v107[4])) then v93=v93 + ((3 + 0) -2) ;else v93=v107[9 -6 ];end elseif ((v108<=47) or ((5226 -(344 + 281))<3928)) then if ((v108==46) or (3973>=(4078 + 292))) then if (((2910 + 1580)>=(2035 -((1423 -(515 + 662)) + 1635))) and (v105[v107[2]]~=v105[v107[9 -5 ]])) then v93=v93 + (2 -1) ;else v93=v107[2 + 1 ];end else local v260=0 + 0 ;local v261;while true do if ((v260==(0 -0)) or (3930<((212 + 5822) -2193))) then v261=v105[v107[5 -1 ]];if (v261 or ((3399 -2100)>=((20733 -(1326 + 288)) -(15270 -(224 + 180))))) then v93=v93 + (2 -(1 + 0)) ;else local v315=(1144 -718) -(4 + 422) ;local v316;while true do if ((v315==(973 -((1418 -(541 + 820)) + 916))) or (55>=(3 + 462))) then v316=0 -0 ;while true do if (((4985 -(3662 -1567))>(3622 -2639)) and (v316==0)) then v105[v107[162 -(108 + 52) ]]=v261;v93=v107[7 -4 ];break;end end break;end end end break;end end end elseif ((v108>((119 + 77) -148)) or ((6614 -(1851 + 87))<=(323 + 197))) then do return v105[v107[9 -(186 -(83 + 96)) ]];end else local v262=0 + 0 ;local v263;local v264;while true do if ((3618>=3449) and (v262==(1 + 0))) then for v303=1 + 0 , #v104 do local v304=0 + (170 -(129 + 41)) ;local v305;local v306;local v307;while true do if (((166 + 56 + 3358)>(9254 -7233)) and (((0 -0) + 0)==v304)) then v305=0 -0 ;v306=nil;v304=(994 -(462 + 86)) -(204 + 241) ;end if ((v304==(794 -((1774 -(13 + 1232)) + (646 -(193 + 189))))) or ((1581 + 199)==(1621 + 209))) then v307=nil;while true do if (((41 + 1021)<(3683 -2371)) and (v305==1)) then while true do if ((v306==(0 + 0 + 0)) or ((6769 -(17987 -13520))<(224 + (2180 -(410 + 1569))))) then v307=v104[v303];for v399=0 -0 , #v307 do local v400=472 -(89 + 383) ;local v401;local v402;local v403;local v404;local v405;while true do if (((4159 -2082)==(5692 -3615)) and (v400==(0 + (0 -0)))) then v401=0 -0 ;v402=nil;v400=1;end if (((2755 -(101 + 256))>=(721 -(162 + 193))) and (v400==2)) then v405=nil;while true do if (((2553 -((3865 -2878) + 1006))>(175 -134)) and (v401==(7 -5))) then while true do if (((1527 -(183 + 579))<=(10298 -7404)) and (v402==(1 -0))) then v405=v403[(2 + 2) -(1195 -(1181 + 12)) ];if (((v404==v105) and (v405>=v263)) or ((638 + 1168 + 1832)<=((11 + 2481) -1480))) then local v452=0;local v453;local v454;while true do if ((v452==(3 -2)) or ((1565 + 278)==(1775 -651))) then while true do if ((v453==0) or ((10063 -6617)<=((177 + 4111) -1582))) then v454=0;while true do if ((v454==(0 + 0)) or (((57889 -35335) -17743)<3802)) then v264[v405]=v404[v405];v403[1]=v264;break;end end break;end end break;end if ((v452==(0 + 0)) or ((2943 -(176 + 604))>=((5775 -(853 + 938)) + (1264 -526)))) then v453=0 -0 ;v454=nil;v452=1;end end end break;end if ((v402==(149 -(13 + 10 + 126))) or ((2182 -((2838 -1433) + 594))<119)) then local v446=0 + 0 ;local v447;while true do if ((((17826 -11927) -((545 -(9 + 16)) + 603))>=3705) and (v446==(0 + 0))) then v447=0 + 0 ;while true do if ((v447==(1 -0)) or ((6439 -1524)<=(1019 + 1280))) then v402=1761 -(1212 + 548) ;break;end if ((((14156 -10657) + 432)>=(7776 -4338)) and ((0 + 0)==v447)) then local v455=0 + 0 ;while true do if ((3116<=4009) and (v455==((1 -0) + 0))) then v447=1;break;end if (((3197 -(265 + 1726))<(3088 -(560 + (1281 -(665 + 452))))) and (v455==((1435 + 29) -(264 + 1200)))) then v403=v307[v399];v404=v403[1 -0 ];v455=1 + (1451 -(226 + 1225)) ;end end end end break;end end end end break;end if (((5258 -((517 -307) + 1548))==(11477 -7977)) and ((0 + 0)==v401)) then local v441=0 -0 ;while true do if (((6002 -(1174 + 61))>=2764) and (v441==((1151 -(198 + 953)) -0))) then v402=0;v403=nil;v441=1 -0 ;end if (((1906 -976)==(2816 -((2357 -943) + 472))) and ((789 -(661 + 127))==v441)) then v401=1 + 0 ;break;end end end if ((v401==((1 -0) -0)) or ((12007 -7656)==1249)) then v404=nil;v405=nil;v401=4 -2 ;end end break;end if ((v400==(1 + 0)) or ((5470 -2476)>(1602 + (3380 -(1666 + 52))))) then v403=nil;v404=nil;v400=2 + 0 ;end end end break;end end break;end if ((v305==(0 -0)) or ((5473 -(867 + 261))<=(5605 -(1616 + 345)))) then local v381=1054 -(799 + 255) ;while true do if ((1599<=((1743 -(4 + 101)) + 1933)) and (v381==(0 + 0))) then v306=0 -(132 -(7 + 125)) ;v307=nil;v381=1595 -(725 + 869) ;end if ((v381==((518 -(298 + 219)) + 0)) or (((4890 -1284) -2593)>(5692 -2747))) then v305=796 -(713 + (233 -151)) ;break;end end end end break;end end end break;end if ((((193 -78) + 111)==226) and (v262==(1694 -(624 + 1070)))) then v263=v107[2];v264={};v262=(3296 -(128 + 1501)) -(305 + 1361) ;end end end v93=v93 + ((199 + 463) -(487 + 59 + 115)) ;break;end end break;end end end end v92=3;end if (v92==0) then v93=1;v94= -1;v92=1;end if (v92==3) then A,B=v36(v12(v97));if  not A[1] then local v109=v44[4][v93] or "?" ;error("Script error at ["   .. v109   .. "]:"   .. A[2] );else return v14(A,2,B);end break;end end end;end end end return v38(v37(),{},v26)(...);end vv10(),...);break;end if (v0==4) then v13=select;v14=unpack or table.unpack ;v15=tonumber;v0=5;end if (v0==3) then v10=getfenv or function()return _ENV;end ;v11=setmetatable;v12=pcall;v0=4;end if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==2) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end end end
