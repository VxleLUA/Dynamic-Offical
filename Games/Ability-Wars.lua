--[[


─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
─████████████───████████──████████─██████──────────██████─██████████████─██████──────────██████─██████████─██████████████──────────────────────██████──██████─████████───
─██░░░░░░░░████─██░░░░██──██░░░░██─██░░██████████──██░░██─██░░░░░░░░░░██─██░░██████████████░░██─██░░░░░░██─██░░░░░░░░░░██──────────────────────██░░██──██░░██─██░░░░██───
─██░░████░░░░██─████░░██──██░░████─██░░░░░░░░░░██──██░░██─██░░██████░░██─██░░░░░░░░░░░░░░░░░░██─████░░████─██░░██████████──────────────────────██░░██──██░░██─████░░██───
─██░░██──██░░██───██░░░░██░░░░██───██░░██████░░██──██░░██─██░░██──██░░██─██░░██████░░██████░░██───██░░██───██░░██──────────────────────────────██░░██──██░░██───██░░██───
─██░░██──██░░██───████░░░░░░████───██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██─────████░░████─────██░░██──██░░██──██░░██─██░░░░░░░░░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██░░░░░░░░░░██────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██████──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██████░░██─██░░██──██░░██─██░░██──────────██░░██───██░░██───██░░██──────────────────────────────██░░░░██░░░░██───██░░██───
─██░░████░░░░██───────██░░██───────██░░██──██░░░░░░░░░░██─██░░██──██░░██─██░░██──────────██░░██─████░░████─██░░██████████──────────────────────████░░░░░░████─████░░████─
─██░░░░░░░░████───────██░░██───────██░░██──██████████░░██─██░░██──██░░██─██░░██──────────██░░██─██░░░░░░██─██░░░░░░░░░░██────────────────────────████░░████───██░░░░░░██─
─████████████─────────██████───────██████──────────██████─██████──██████─██████──────────██████─██████████─██████████████──────────────────────────██████─────██████████─
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

]]--

loadstring(game:HttpGet("https://raw.githubusercontent.com/VxleLUA/Dynamic-Offical/main/System/Notifications/GameSupported.lua"))()
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==4) then function v25()local v31=689 -(202 + 487) ;local v32;local v33;local v34;local v35;local v36;local v37;while true do if (v31==(0 -(119 -(63 + 56)))) then v32=v24();v33=v24();v31=1 + 0 ;end if (v31==((1495 -(956 + 530)) -7)) then v36=v21(v33,(7 + 42) -28 ,57 -26 );v37=((v21(v33,32)==(286 -(14 + 271))) and  -(1423 -(821 + 601))) or (1 + 0) ;v31=1391 -(717 + 671) ;end if (v31==(1883 -(1123 + 757))) then if (v36==(321 -(133 + 188))) then if (v35==(0 + 0 + 0)) then return v37 * (0 + 0) ;else local v102=0 -0 ;while true do if (v102==(1813 -(714 + (1902 -803)))) then v36=1 -(0 + 0) ;v34=1523 -(519 + 1004) ;break;end end end elseif (v36==(1148 + 899)) then return ((v35==(0 -0)) and (v37 * ((1 + 0)/0))) or (v37 * NaN) ;end return v8(v37,v36-(2751 -1728) ) * (v34 + (v35/(2^(119 -(57 + 10))))) ;end if ((39 -(9 + 29))==v31) then v34=1 + 0 ;v35=(v21(v33,1 + 0 ,1 + 19 ) * ((9 -7)^(75 -43))) + v32 ;v31=1767 -(387 + 1378) ;end end end v26=nil;function v26(v38)local v39;if  not v38 then v38=v24();if (v38==(0 + 0)) then return "";end end v39=v3(v16,v19,(v19 + v38) -1 );v19=v19 + v38 ;local v40={};for v69=1008 -(353 + 654) , #v39 do v40[v69]=v2(v1(v3(v39,v69,v69)));end return v6(v40);end v18=5;end if (2==v18) then function v22()local v41=v1(v16,v19,v19);v19=v19 + 1 ;return v41;end v23=nil;function v23()local v42,v43=v1(v16,v19,v19 + 1 + 1 );v19=v19 + (1853 -(843 + 1008)) ;return (v43 * (184 + 72)) + v42 ;end v18=3;end if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v44)if (v1(v44,2)==79) then v20=v0(v3(v44,1,1));return "";else local v71=v2(v0(v44,16));if v20 then local v77=v5(v71,v20);v20=nil;return v77;else return v71;end end end);v18=1;end if (v18==3) then v24=nil;function v24()local v45=778 -(202 + (1897 -1321)) ;local v46;local v47;local v48;local v49;while true do if (v45==(0 + 0)) then v46,v47,v48,v49=v1(v16,v19,v19 + (8 -5) );v19=v19 + ((814 -(92 + 85)) -(257 + 376)) ;v45=1;end if (v45==1) then return (v49 * (16778576 -(1267 + 93))) + (v48 * (176658 -111122)) + (v47 * (2196 -(733 + 143 + 1064))) + v46 ;end end end v25=nil;v18=4;end if (v18==7) then function v30(v50,v51,v52)local v53=0;local v54;local v55;local v56;while true do if (v53==1) then v56=v50[3];return function(...)local v78=1;local v79= -1;local v80={...};local v81=v12("#",...) -1 ;local function v82()local v83=v54;local v84=v55;local v85=v56;local v86=v28;local v87={};local v88={};local v89={};for v93=(0 -0) -0 ,v81 do if (((4502 -(19 + 452))==((15447 -(787 + 97)) -10532)) and (v93>=v85)) then v87[v93-v85 ]=v80[v93 + ((743 -(673 + 3)) -(57 + 9)) ];else v89[v93]=v80[v93 + (156 -(17 + 138)) ];end end local v90=(v81-v85) + (2 -1) ;local v91;local v92;while true do local v94=688 -(551 + 137) ;local v95;local v96;while true do if ((v94==((262 -(86 + 1)) -(62 + 112))) or ((3561 -1298)>=(20613 -15669))) then while true do if (((1987 + 2797)>=(5627 -(1542 + 342))) and (v95==0)) then v96=1232 -(1147 + 85) ;while true do if (((2242 -(128 + 1148))<1314) and ((1 -0)==v96)) then if (((2036 -(805 + 10))<=(4617 -(37 + (498 -(44 + 283))))) and (v92<=19)) then if ((v92<=9) or (((2417 -(635 + 5)) -(1123 + 473))==1487)) then if ((((5934 -(1338 + 374)) -(1497 + 671))>91) and (v92<=(10 -6))) then if ((v92<=(1022 -(981 + 40))) or (145>(4293 -(62 + 5)))) then if (((91 + 4252)>(4481 -(306 + 476))) and (v92==(0 + 0))) then v78=v91[1267 -(158 + (4191 -3085)) ];else local v127=0 -0 ;local v128;local v129;while true do if ((((2108 -(834 + 858)) + (4650 -(328 + 419)))>=(7237 -2965)) and (v127==(0 + 0))) then local v240=0 -0 ;while true do if ((v240==0) or (1683>((11540 -6432) -(1314 + 235)))) then v128=0 -0 ;v129=nil;v240=1 + 0 ;end if ((v240==(1 + 0)) or ((1707 + 3012)<(961 + 1204))) then v127=382 -((1950 -(73 + 1659)) + 163) ;break;end end end if ((v127==1) or (1757<=(277 + 1263))) then while true do if ((((3612 -(969 + 232)) + 1700)>(3711 -(89 + 119))) and (v128==((2979 -1046) -(211 + 1722)))) then v129=v91[1177 -(960 + 215) ];v89[v129](v89[v129 + 1 + 0 ]);break;end end break;end end end elseif (((5033 -(1071 + 870))<=(4204 -(233 + 467))) and (v92<=(7 -5))) then for v197=v91[(59 + 309) -(110 + 256) ],v91[1641 -((5243 -4136) + (2077 -(1369 + 177))) ] do v89[v197]=nil;end elseif ((v92==(678 -(466 + 209))) or ((3708 -(291 + 776))>=3853)) then if (((1696 -(331 + 765))>=(227 + 102)) and v89[v91[(1 + 1) -0 ]]) then v78=v78 + 1 + 0 ;else v78=v91[1477 -(951 + 523) ];end else do return;end end elseif ((2155<=(1491 + 874 + 609)) and (v92<=(10 -4))) then if ((v92==(2 + 1 + 2)) or ((10765 -8566)>=((5785 -(303 + 94)) -(588 + 461)))) then local v130=v91[172 -(57 + 113) ];local v131=v91[738 -(87 + 647) ];local v132=v130 + 2 ;local v133={v89[v130](v89[v130 + ((880 -(564 + 313)) -2) ],v89[v132])};for v199=1 + 0 ,v131 do v89[v132 + v199 ]=v133[v199];end local v134=v133[1 -0 ];if (((8515 -5662)==(2783 + 70)) and v134) then local v202=226 -(79 + 147) ;local v203;local v204;while true do if ((v202==1) or ((430 + 1906)>=3160)) then while true do if ((880<927) and (v203==((0 -0) + 0))) then v204=616 -(7 + 54 + (1001 -(253 + 193))) ;while true do if (((368 -(110 + 258))==v204) or ((206 -70)>=(2572 -(1621 + 332)))) then v89[v132]=v134;v78=v91[7 -4 ];break;end end break;end end break;end if ((v202==0) or ((184 + 122)>=(3059 -(729 + 79)))) then v203=0 + 0 ;v204=nil;v202=1 + 0 ;end end else v78=v78 + 1 ;end else local v135=0 -0 ;local v136;local v137;while true do if ((1==v135) or ((2418 -1611)>2987)) then while true do if ((v136==0) or ((5506 -(65 + 323 + 892))>=(21364 -16537))) then v137=v91[2 + 0 ];v89[v137](v13(v89,v137 + ((1 + 2) -2) ,v91[3]));break;end end break;end if ((v135==0) or ((618 + 2402)>=(21682 -16765))) then v136=1750 -(563 + 1187) ;v137=nil;v135=1;end end end elseif (((3780 -(187 + 1641))==((2972 -(508 + 956)) + 444)) and (v92<=7)) then local v138=(0 -0) -0 ;local v139;local v140;local v141;while true do if (((6907 -4366)<(8613 -5122)) and (0==v138)) then v139=0 -0 ;v140=nil;v138=1;end if ((v138==1) or ((1134 + 2839)<239)) then v141=nil;while true do if (((1210 -(584 + 625))==v139) or (2740<=(818 -(213 + 129)))) then while true do if (((1805 + 1802)>=(2412 -(709 + 129))) and (v140==(1679 -(75 + 1604)))) then v141=v91[2];v89[v141]=v89[v141](v89[v141 + 1 + (1067 -(29 + 1038)) ]);break;end end break;end if (((1599 -(385 + 1214))==v139) or ((5597 -3700)<=(948 -378))) then v140=0 -0 ;v141=nil;v139=1295 -(5 + 1289) ;end end break;end end elseif ((v92>(21 -13)) or ((6088 -3046)<=(2040 -(552 + 189)))) then local v205=0;local v206;local v207;local v208;local v209;local v210;while true do if ((v205==0) or ((1406 + 37)>=(3120 -(251 + 355)))) then v206=0 + 0 + 0 ;v207=nil;v205=1 + 0 + 0 ;end if ((v205==(761 -(586 + 173))) or ((963 + 31 + 4)>2930)) then v210=nil;while true do if (((4581 -(73 + 32))>=(2899 + 1091)) and (v206==(2 -1))) then v209=nil;v210=nil;v206=2 -(962 -(514 + 448)) ;end if ((v206==2) or ((191 + 2933)<=874)) then while true do if ((3162==(1143 + 2019)) and (v207==(0 -0))) then local v314=(0 + 0) -0 ;while true do if (((7317 -5703)>=(1104 + 459)) and (0==v314)) then local v342=862 -(798 + 55 + 9) ;while true do if ((v342==((1312 + 478) -(83 + 1707))) or ((10217 -6609)==(9560 -5373))) then v208=v84[v91[1005 -(567 + 435) ]];v209=nil;v342=1 + 0 ;end if ((v342==1) or ((1541 + 931)<=(9 -6))) then v314=(2116 -(438 + 680)) -(25 + 972) ;break;end end end if ((288<(13388 -9390)) and (v314==1)) then v207=1 + 0 ;break;end end end if ((v207==(538 -(5 + 532))) or ((10293 -7246)>=(3193 + 624))) then local v315=0 -0 ;local v316;while true do if (((1480 + 2354)==(5111 -(766 + 511))) and (v315==(0 + 0))) then v316=1139 -(977 + 162) ;while true do if ((v316==(0 + 0)) or ((1239 + 323)>(20028 -15695))) then local v359=0;while true do if ((v359==(1103 -(74 + 1029))) or ((411 -233)>=((396 + 1605) -(408 + 570 + 89)))) then v210={};v209=v10({},{__index=function(v378,v379)local v380=0 -0 ;local v381;local v382;while true do if (((2437 + 413)<=(3925 -912)) and (v380==(3 -2))) then while true do if ((2064==2064) and (v381==0)) then v382=v210[v379];return v382[1][v382[891 -(264 + 625) ]];end end break;end if (((5034 -(31 + 8))>(6724 -2626)) and ((0 -0)==v380)) then v381=0;v382=nil;v380=277 -(174 + 102) ;end end end,__newindex=function(v383,v384,v385)local v386=0 + 0 ;local v387;while true do if (((1917 -1380)==(1374 -(474 + 363))) and (v386==(0 + 0))) then v387=v210[v384];v387[1 + 0 ][v387[641 -(388 + 251) ]]=v385;break;end end end});v359=234 -(62 + 171) ;end if ((1490==(490 + 1000)) and (v359==1)) then v316=1589 -(801 + 470 + 317) ;break;end end end if (((10819 -7798)>330) and (v316==1)) then v207=1457 -(1367 + 88) ;break;end end break;end end end if ((v207==(943 -(45 + 235 + 546 + 115))) or ((171 -112)>(2928 -(522 + 87)))) then for v333=1772 -(1620 + 151) ,v91[4] do local v334=0 -0 ;local v335;local v336;while true do if ((v334==(0 -0)) or ((2569 -(226 + 903))>3620)) then local v347=0 -0 ;while true do if ((1==v347) or (1043<(1621 -(590 + 316)))) then v334=1 + 0 ;break;end if ((v347==(0 + 0)) or ((2619 + 554)>(4502 -(88 + 496)))) then v335=0 -0 ;v336=nil;v347=(3 -2) + 0 ;end end end if ((v334==1) or ((13528 -8823)<=(52 -(8 + 10)))) then while true do if ((((3775 -(643 + 774)) -(491 + 957))<=(4877 -2967)) and (v335==1)) then if (((1385 -(817 + 159))<(2573 -(155 + 232))) and (v336[1 -0 ]==(1160 -(598 + 534)))) then v210[v333-(210 -(144 + 65)) ]={v89,v336[3]};else v210[v333-(1 + 0) ]={v51,v336[5 -2 ]};end v88[ #v88 + (1 -0) ]=v210;break;end if ((v335==0) or (((3011 + 578) -(336 + 468))>=(1963 + 2285))) then local v364=0;local v365;while true do if ((((0 -0) -(284 -(51 + 233)))==v364) or ((6 + 4)>(1233 + 839))) then v365=0;while true do if ((v365==(0 -0)) or ((10356 -6128)<(3518 -(75 + 178)))) then v78=v78 + (1489 -(36 + 26 + 1426)) ;v336=v83[v78];v365=1 + 0 ;end if ((v365==(1 -(927 -(517 + 410)))) or ((289 + 2610)>=(7210 -3746))) then v335=1 + 0 ;break;end end break;end end end end break;end end end v89[v91[1 + 1 ]]=v30(v208,v209,v52);break;end end break;end if (((712 + 4244)>(2296 + 2159)) and (v206==0)) then v207=0 + 0 ;v208=nil;v206=1 + 0 ;end end break;end if ((v205==(1 + 0)) or (3392<((1044 -790) + 1946))) then v208=nil;v209=nil;v205=206 -(80 + 124) ;end end elseif ( not v89[v91[1 + 1 ]] or ((4111 -1232)>=(1149 + 2332))) then v78=v78 + 1 + 0 ;else v78=v91[2 + 1 ];end elseif ((1525<3320) and (v92<=14)) then if ((v92<=(42 -31)) or ((296 -186)>=(4181 -(286 + 1377)))) then if (((248 -101)<(702 -379)) and (v92>(1 + 9))) then local v142=0 -0 ;local v143;local v144;while true do if ((v142==(2 -1)) or ((1510 -1044)>=(2900 -2194))) then while true do if ((v143==(122 -(30 + 92))) or ((3872 -(81 + 245))>((45110 -32683) -8100))) then v144=v91[9 -(15 -8) ];v89[v144](v13(v89,v144 + 1 + 0 ,v79));break;end end break;end if (((0 -(1887 -(1419 + 468)))==v142) or ((2768 -((924 -298) + 91))>=((22403 -16366) -(320 + 1168 + 496)))) then v143=0 -0 ;v144=nil;v142=1;end end elseif (((4085 -(796 + 634))>=(81 + 1008)) and (v91[1 + 1 + 0 ]==v89[v91[4]])) then v78=v78 + 1 ;else v78=v91[387 -(328 + 56) ];end elseif (((2628 + 744)>(138 + 53 + 2606)) and (v92<=12)) then v89[v91[2]]=v52[v91[407 -(321 + 83) ]];elseif ((((12851 -8407) -(138 + 46))>((616 -331) + (2941 -(197 + 450)))) and (v92==13)) then local v212=(59 + 44) -(24 + 79) ;local v213;local v214;local v215;local v216;while true do if (((234 -118)<(2407 -(766 + 11))) and (v212==(5 -3))) then while true do if (((2293 -(257 + 228))<(5245 -(1141 + 544 + 60))) and (v213==(1542 -(1142 + 78 + 322)))) then v214=v91[2];v215={v89[v214](v89[v214 + (1223 -(121 + 1101)) ])};v213=3 -2 ;end if ((2111>(2367 -(216 + 755))) and ((2 -1)==v213)) then v216=1335 -(615 + 720) ;for v292=v214,v91[(10 -6) + 0 ] do local v293=(3348 -2365) -(741 + (2234 -(1123 + 869))) ;local v294;while true do if ((v293==0) or ((7868 -(1483 + 2021))<=(3786 -2412))) then v294=0 -0 ;while true do if ((1754>=1084) and (v294==(32 -((1629 -(340 + 1268)) + 11)))) then v216=v216 + 1 ;v89[v292]=v215[v216];break;end end break;end end end break;end end break;end if ((v212==(0 -(0 + 0))) or ((6336 -3448)<(12070 -9628))) then v213=0;v214=nil;v212=1;end if ((3215<3924) and (v212==1)) then v215=nil;v216=nil;v212=453 -(386 + (116 -51)) ;end end else v89[v91[2 + 0 ]]=v30(v84[v91[3 + 0 ]],nil,v52);end elseif (((2618 -(884 + 112))>=(258 + 166 + 291)) and (v92<=(7 + 9))) then if ((((36271 -16166) -(17113 -(1502 + 212)))==(617 + 4089)) and (v92>15)) then v89[v91[5 -3 ]]=v91[804 -(546 + 255) ];else local v149=0 -0 ;local v150;while true do if ((v149==(0 + 0)) or ((3399 -2295)>(3984 -(523 + 701)))) then v150=v89[v91[3 + 1 ]];if ((4678==(3876 + 802)) and  not v150) then v78=v78 + (1 -0) ;else local v258=206 -(191 + 15) ;local v259;while true do if ((v258==(0 -0)) or ((2516 + (4958 -3006))<(3196 -1473))) then v259=0 + 0 ;while true do if ((v259==(0 + 0)) or ((878 -446)==(3187 -(74 + 476)))) then v89[v91[2 -0 ]]=v150;v78=v91[3];break;end end break;end end end break;end end end elseif ((v92<=(722 -(9 + 696))) or ((306 + 2100)>((24297 -18596) -(1692 + 6)))) then local v151=0;local v152;local v153;local v154;local v155;local v156;while true do if ((2977>=918) and (v151==1)) then v154=nil;v155=nil;v151=1877 -(1633 + 242) ;end if (((154 + 2833)==(4506 -(774 + 745))) and (v151==(0 + 0))) then v152=(0 -0) -0 ;v153=nil;v151=1353 -(1152 + 76 + 124) ;end if ((v151==(1478 -(1040 + 342 + 94))) or ((492 + (569 -(36 + 46)))>(2725 + 1380))) then v156=nil;while true do if ((v152==(0 + (0 -0))) or ((129 + 212)>=(2325 -1814))) then local v264=(1088 -(287 + 801)) -0 ;while true do if (((23 + 525)==(903 -(165 + 190))) and (v264==(1632 -(379 + 1253)))) then v153=1724 -((3132 -1751) + 343) ;v154=nil;v264=2 -1 ;end if (((2212 -(118 + 107))<4316) and (v264==(790 -(659 + 130)))) then v152=2 -(106 -(65 + 40)) ;break;end end end if ((((1313 + 189) -846)<(6143 -4631)) and (v152==(1 + 0))) then local v265=0;while true do if ((v265==(2 -1)) or (1449>(86 + 565 + 1536))) then v152=1 + 1 ;break;end if ((v265==(408 -(141 + 267))) or ((88 + (2843 -(237 + 1026)))<=(621 -((791 -(206 + 30)) + 20)))) then v155=nil;v156=nil;v265=(1255 -(483 + 771)) + 0 ;end end end if ((v152==(4 -2)) or ((836 + 1086)<=(179 -72))) then while true do if (((695 -384)<=(2581 -(1215 + 540))) and (0==v153)) then local v295=0;while true do if ((v295==(0 -0)) or ((4378 -2715)>(11609 -7723))) then local v337=0;while true do if ((v337==(2 -1)) or (4981<((1929 + 373) -(492 + 139)))) then v295=1;break;end if ((1927<(5261 -(456 + 1537))) and (v337==(0 -0))) then v154=v91[1 + 1 ];v155=v89[v154];v337=1 + 0 ;end end end if (((3130 -2056)<=(1677 + 1443)) and (v295==((766 -(266 + 498)) -1))) then v153=1 -0 ;break;end end end if (((4148 -2924)>=(1920 -(1277 + 412))) and (v153==(1 + 0))) then v156=v91[2 + 1 ];for v303=22 -(15 + (22 -16)) ,v156 do v155[v303]=v89[v154 + v303 ];end break;end end break;end end break;end end elseif ((((4989 -(118 + 1062)) -(319 + 1139))>=(1655 -283)) and (v92>18)) then if ((v89[v91[1 + 1 ]]~=v89[v91[4]]) or ((374 + 6 + (1070 -760))<375)) then v78=v78 + 1 + 0 ;else v78=v91[1405 -(50 + 1352) ];end else v89[v91[3 -1 ]][v91[(1282 -599) -(489 + 191) ]]=v89[v91[12 -(5 + 3) ]];end elseif ((v92<=(793 -(586 + 178))) or (1249>(1058 + 1190))) then if ((v92<=((464 -273) -(144 + 23))) or ((3238 + 981)<=4010)) then if ((v92<=(20 + 1)) or ((700 + 1057)==(3892 -(232 + 578)))) then if (((12713 -8863)>(4436 -(1463 + 66))) and (v92>(216 -(43 + 153)))) then local v157=0;local v158;local v159;local v160;local v161;local v162;while true do if ((((375 -199) + 3810)>(1855 -1120)) and (v157==(378 -(147 + 229)))) then v162=nil;while true do if (((2814 -1826)==(183 + (3751 -2946))) and (v158==(2 -1))) then local v266=0;while true do if (((2214 -(1128 + 90))==(2832 -1836)) and ((1 -(0 + 0))==v266)) then v158=1180 -(749 + 429) ;break;end if (((835 + 1384)>=(3033 -(1594 + 190))) and (v266==0)) then v161=nil;v162=nil;v266=1936 -(1055 + 880) ;end end end if ((v158==2) or ((821 + 1030 + 1586)<(2550 -((830 -(68 + 242)) + 54)))) then while true do if ((1205>((1712 -(462 + 1152)) + 94)) and (v159==(3 -2))) then v162=0 -0 ;for v306=v160,v91[11 -7 ] do local v307=1072 -(408 + 664) ;local v308;while true do if (((227 + 51)==(520 -242)) and (((5846 -4447) -(1117 + 282))==v307)) then v308=0 + 0 ;while true do if ((v308==0) or ((6742 -4799)>4177)) then v162=v162 + 1 + 0 ;v89[v306]=v161[v162];break;end end break;end end end break;end if (((6445 -4274)>(1390 -(676 + 464))) and (v159==(0 -0))) then local v297=572 -(315 + 257) ;local v298;while true do if ((v297==(0 + 0)) or ((1019 + 243)==(6366 -(689 + 691)))) then v298=0 + 0 ;while true do if ((v298==(1729 -(1095 + (1181 -(303 + 245))))) or ((15133 -11880)==409)) then v159=1403 -(1394 + 8) ;break;end if (((386 + 24)<(3044 + 1483)) and (v298==(0 + 0))) then v160=v91[6 -4 ];v161={v89[v160](v13(v89,v160 + 1 + 0 ,v79))};v298=660 -(482 + (690 -(87 + 426))) ;end end break;end end end end break;end if ((v158==((0 + 0) -0)) or ((1510 + 1376)<(4489 -3344))) then local v267=0 + 0 ;while true do if ((v267==(2 -1)) or (4597<2785)) then v158=2 -1 ;break;end if ((((0 -0) + 0)==v267) or ((4910 -(574 + 990))<736)) then v159=0 -0 ;v160=nil;v267=(1444 -(1362 + 81)) -0 ;end end end end break;end if (((3178 -(17 + 743))>=(819 + 514)) and (v157==(2 -(1998 -(801 + 1196))))) then v160=nil;v161=nil;v157=890 -(352 + 536) ;end if (((1609 -(232 + 286))<3280) and (v157==(0 -0))) then v158=539 -(205 + 334) ;v159=nil;v157=2 -1 ;end end else v89[v91[5 -3 ]]=v89[v91[(297 -(137 + 159)) + 2 ]][v91[4 -(66 -(43 + 23)) ]];end elseif ((v92<=(1772 -(1684 + 66))) or (3384<(9619 -6354))) then local v165=0;local v166;local v167;while true do if ((2288<(3939 -(1257 + 65))) and (v165==(1 + 0))) then while true do if (((3729 -(245 + 150))>(2278 -1166)) and (v166==(0 -0))) then v167=v91[4 -2 ];v89[v167]=v89[v167](v13(v89,v167 + (1 -(0 + 0)) ,v91[369 -(138 + 228) ]));break;end end break;end if ((3034>(517 + 1045)) and (v165==(0 + 0 + 0))) then v166=0 + 0 ;v167=nil;v165=1084 -(799 + 284) ;end end elseif (((1691 + 1750)>=(1038 + 906)) and (v92>(667 -(91 + 553)))) then v89[v91[371 -(107 + 262) ]]=v91[2 + 1 ]~=0 ;else v51[v91[1759 -(1508 + 248) ]]=v89[v91[4 -2 ]];end elseif ((v92<=(39 -13)) or (4249==(390 + 269))) then if ((v92==(76 -51)) or ((2886 -(952 + 58))<(24 + 228))) then local v168=0;local v169;local v170;local v171;local v172;while true do if ((((0 + 0) -0)==v168) or ((775 + 1351)<((217 + 1947) -(438 + 586)))) then local v242=862 -(429 + 433) ;while true do if ((v242==(1808 -(112 + 1695))) or ((4026 -(91 + 688))==((6444 -(96 + 125)) -4302))) then v168=1 -0 ;break;end if ((0==v242) or ((65 + 252)>1873)) then v169=v91[2 + 0 ];v170,v171=v86(v89[v169](v13(v89,v169 + (1883 -(1114 + 768)) ,v91[8 -5 ])));v242=1 -0 ;end end end if (((1814 -((2765 -(869 + 178)) + 94))==v168) or ((2322 -687)>(6329 -3560))) then for v254=v169,v79 do local v255=0;local v256;while true do if ((v255==0) or ((3063 -(197 + 788))==(4020 + 694))) then v256=1319 -(568 + 751) ;while true do if ((v256==(0 + 0)) or ((5090 -(175 + 876 + 19))<=(118 + 49))) then v172=v172 + 1 ;v89[v254]=v170[v172];break;end end break;end end end break;end if ((((3773 -(148 + 114)) -(96 + 1275))>(2031 -(1303 + 191))) and (v168==(1664 -(930 + 733)))) then v79=(v171 + v169) -(1 + 0) ;v172=197 -(120 + 77) ;v168=1 + 1 ;end end else v89[v91[2 -0 ]]={};end elseif (((434 + 2177)==(1472 + 1139)) and (v92<=(747 -(694 + 26)))) then local v174=0;local v175;local v176;local v177;while true do if (((1445 + 2787)>=(6468 -3154)) and (1==v174)) then v177=nil;while true do if ((v175==(2 -1)) or ((3905 -((840 -320) + 285))<2346)) then for v278=v176 + 1 + 0 ,v91[2 + 1 ] do v7(v177,v89[v278]);end break;end if (((3206 + 1658)>=(798 -391)) and (v175==(0 + 0))) then local v271=0;local v272;while true do if ((v271==(0 + 0)) or (1991>=(2754 + 1596))) then v272=0 -0 ;while true do if (((769 + 1466)>(1240 + 965)) and ((0 -0)==v272)) then v176=v91[1171 -((1041 -(347 + 669)) + 1144) ];v177=v89[v176];v272=1 + 0 ;end if (((684 + 81 + 151)<=(348 + 3879)) and (v272==(3 -2))) then v175=1 + 0 ;break;end end break;end end end end break;end if (((2082 + 1636)<=(2572 + 2381)) and (v174==((1678 -564) -(337 + 777)))) then v175=0 + 0 ;v176=nil;v174=1181 -(913 + 267) ;end end elseif ((v92==(64 -36)) or (1280>=(1955 + 2659))) then v89[v91[1 + 1 ]]=v89[v91[2 + 1 ]];else local v225=0 + 0 ;local v226;local v227;local v228;local v229;local v230;while true do if ((2==v225) or ((1955 + 2664)<=(534 + 2929))) then v230=nil;while true do if ((v226==(1944 -(1473 + 470))) or ((3751 -(348 + 485))>=(6574 -(5676 -3726)))) then local v283=0 -0 ;while true do if ((1222<(4550 + 215)) and (v283==1)) then v226=3 -1 ;break;end if ((v283==(0 -0)) or (((4032 -2508) + 3377)<=(3985 -((1058 -(854 + 190)) + (39 -25))))) then local v320=0 -(1372 -(1278 + 94)) ;while true do if ((2304>211) and (v320==(1874 -(1819 + 55)))) then v79=(v229 + v227) -(837 -(554 + 282)) ;v230=(0 + 0) -0 ;v320=50 -(37 + 12) ;end if ((v320==(2 -1)) or ((44 + 56)==4813)) then v283=1 + 0 ;break;end end end end end if ((((9505 -4710) -1747)<=(4815 -(74 + 159))) and (v226==2)) then for v299=v227,v79 do local v300=0 -0 ;local v301;local v302;while true do if (((144 -58)==(1219 -(272 + 861))) and ((2 -(1 + 0))==v300)) then while true do if ((v301==(0 -0)) or ((1584 + 1778)<(10 + 42))) then v302=0 -0 ;while true do if ((((1995 -(250 + 364)) + (3445 -(1661 + 142)))>=(1973 -((69 -(20 + 1)) + 360))) and (v302==(0 -0))) then v230=v230 + (1 -0) ;v89[v299]=v228[v230];break;end end break;end end break;end if ((v300==(0 + 0)) or ((5208 -(266 + 656))<=(9535 -5426))) then v301=0 + 0 ;v302=nil;v300=1;end end end break;end if ((v226==(1218 -(744 + 474))) or ((2918 + 1606 + 64)<=2650)) then local v284=325 -(195 + 130) ;while true do if ((v284==(0 + 0)) or ((2614 -1805)<(204 + 401))) then local v321=0 + 0 ;while true do if ((v321==0) or (3978<845)) then v227=v91[2 -0 ];v228,v229=v86(v89[v227](v89[v227 + 1 + 0 + 0 ]));v321=2 -(1 + 0) ;end if ((v321==(100 -(80 + 19))) or (((10420 -(114 + 861)) -6131)==(891 + 185 + (2460 -(835 + 599))))) then v284=1 + 0 ;break;end end end if ((v284==(1 + 0)) or ((1116 + 735)==(3209 + 1299))) then v226=2 -1 ;break;end end end end break;end if (((6466 -3810)<(3752 + 136)) and (v225==(0 -0))) then v226=0;v227=nil;v225=1 + 0 ;end if ((v225==(1 -0)) or ((2848 -(792 + 553))>4879)) then local v260=0 + 0 ;while true do if ((521>(381 -178)) and (v260==(0 + 0))) then v228=nil;v229=nil;v260=1;end if (((641 -(313 + 327))==v260) or (1901>(12465 -(20611 -13035)))) then v225=2 + 0 ;break;end end end end end elseif (((1917 + 284)<=3297) and (v92<=(2032 -(426 + 1572)))) then if ((v92<=(72 -41)) or ((6 + 4364)==(2757 -1838))) then if (((2851 -(93 + 15))>=(1334 -968)) and (v92>(1836 -(525 + 1281)))) then local v178=0 -(1188 -(206 + 982)) ;local v179;local v180;local v181;while true do if (((2721 -(93 + 337))==((2890 -1968) + 1369)) and (v178==(0 + (474 -(241 + 233))))) then local v243=(0 + 0) -0 ;while true do if ((4559==(5344 -(414 + (742 -371)))) and (v243==(0 -0))) then v179=0;v180=nil;v243=1 + 0 ;end if ((v243==1) or ((4057 -2798)>=1435)) then v178=1 + 0 ;break;end end end if ((v178==(926 -(858 + 67))) or ((771 -(205 + 269))>(5006 -((72 -45) + 1464)))) then v181=nil;while true do if ((v179==0) or ((2377 + 452)==(566 + 1138))) then local v273=0 + 0 ;local v274;while true do if ((((6399 -3893) + 743)>(298 -(124 + 138))) and (v273==0)) then v274=0 + 0 ;while true do if (((2599 -(594 + 772))<=((2573 -(217 + 761)) -(147 + 161))) and (v274==(0 + 0))) then v180=v91[2 + 0 ];v181={};v274=1 + 0 ;end if ((3386>=((9115 -5144) -2683)) and ((1 + 0)==v274)) then v179=1176 -(482 + 693) ;break;end end break;end end end if (((4212 -(254 + (1183 -(416 + 472))))>=(3928 -1820)) and (v179==(3 -2))) then for v279=1, #v88 do local v280=(0 -0) + 0 ;local v281;while true do if (((875 -(555 + 320))==v280) or ((9850 -(8106 -(808 + 692)))>=(2489 + 2271))) then v281=v88[v279];for v322=1996 -(857 + 1139) , #v281 do local v323=726 -(140 + 586) ;local v324;local v325;local v326;while true do if ((713<=(15490 -10873)) and (v323==(352 -(119 + 233)))) then v324=v281[v322];v325=v324[1];v323=390 -(156 + 233) ;end if ((v323==(1958 -(617 + 1340))) or ((4498 -((1708 -877) + 479))>=(817 + 3912))) then v326=v324[2];if ((3687<4776) and (v325==v89) and (v326>=v180)) then local v355=0;local v356;local v357;while true do if (((787 + 288)<=(5245 -(419 + 1323))) and (v355==(944 -(381 + 562)))) then while true do if (((544 + 4443)>1935) and (v356==0)) then v357=0 -0 ;while true do if ((v357==(1714 -(464 + 1250))) or ((115 + 434)==1142)) then v181[v326]=v325[v326];v324[1 -0 ]=v181;break;end end break;end end break;end if ((v355==(1416 -(107 + 1309))) or (((616 -(47 + 373)) + 1033)>=4280)) then v356=0 + 0 ;v357=nil;v355=1390 -(1321 + 68) ;end end end break;end end end break;end end end break;end end break;end end else local v182=1559 -(445 + 1114) ;local v183;local v184;while true do if (((2162 -(962 + 227))<=(5674 -4138)) and (v182==(1388 -(85 + 1302)))) then while true do if (((2167 -(466 + 494))>((3573 -(1811 + 181)) -(24 + 520))) and (v183==0)) then v184=v91[2 + 0 ];v89[v184]=v89[v184](v13(v89,v184 + (1 -0) ,v79));break;end end break;end if ((v182==0) or ((2021 -(524 + 132))>=(4639 -(860 + 2047)))) then local v244=(0 -0) -0 ;while true do if (((9150 -5847)<(5110 -(5 + 107))) and (v244==1)) then v182=1;break;end if (((484 + 2634)>(555 + 2079)) and (v244==(0 + 0))) then v183=0 -0 ;v184=nil;v244=1 + 0 ;end end end end end elseif (((9651 -7664)>(268 + 706)) and (v92<=(25 + 7))) then if ((v91[1074 -(249 + 823) ]<v89[v91[12 -8 ]]) or ((87 + 171)>=((1990 + 2752) -(584 + 715)))) then v78=v78 + (1334 -(452 + (2264 -1383))) ;else v78=v91[1 + 2 ];end elseif (((3769 -1174)<=(2444 + 230)) and (v92==(27 + 6))) then if (((3887 -(944 + (673 -362)))==(3003 -(78 + (569 -(27 + 249))))) and (v89[v91[1650 -(941 + 707) ]]==v91[874 -(357 + 513) ])) then v78=v78 + (1317 -(600 + 716)) ;else v78=v91[1 + 2 ];end else v89[v91[(8 + 1) -7 ]]=v51[v91[1216 -(403 + 810) ]];end elseif ((v92<=36) or ((6481 -1928)<=(3016 -1520))) then if (((6691 -4366)<=3176) and (v92==(13 + 22))) then v89[v91[2]]();else v89[v91[(25 -16) -7 ]]=v89[v91[7 -4 ]] -v89[v91[7 -3 ]] ;end elseif (((2488 -(433 + 8))<=(3749 -(67 + 201))) and (v92<=(1233 -(818 + 378)))) then local v186=395 -(195 + 200) ;local v187;while true do if ((v186==(50 -(27 + 23))) or ((3959 + 491)>=4902)) then v187=v91[1 + 1 ];v89[v187]=v89[v187]();break;end end elseif ((v92==(946 -(551 + 357))) or ((4642 -1351)==(16849 -12180))) then v89[v91[443 -(233 + 208) ]][v91[3]]=v91[60 -(34 + 22) ];else local v236=0 + 0 ;local v237;local v238;local v239;while true do if (((11930 -7247)>(156 + 1438)) and (v236==(0 -0))) then v237=0 -0 ;v238=nil;v236=1 + 0 ;end if (((1313 -((793 -(88 + 616)) + 657))<(74 + 1341)) and ((3 -2)==v236)) then v239=nil;while true do if ((v237==(142 -(131 + 6 + 5))) or ((442 -150)>=(1003 + 3041))) then v238=v91[1 + 1 ];v239=v89[v91[1535 -(335 + 1197) ]];v237=4 -3 ;end if ((359<=(1477 + 928)) and (v237==(2 -1))) then v89[v238 + (231 -(185 + 45)) ]=v239;v89[v238]=v239[v91[957 -(8 + 945) ]];break;end end break;end end end v78=v78 + (2 -1) ;break;end if (((1239 -(855 + 384))==v96) or (711<154)) then local v109=0;local v110;while true do if ((v109==((0 -0) + 0)) or (4432<=(40 + 18))) then v110=0;while true do if (((3616 -(480 + 1191))>=(2892 -1100)) and (v110==(0 + 0))) then local v123=0 -0 ;while true do if (((11716 -7758)>=(6243 -4103)) and ((343 -(176 + 166))==v123)) then v110=1 + 0 ;break;end if ((v123==0) or ((3079 -1571)>(1590 + 510))) then v91=v83[v78];v92=v91[2 -(2 -1) ];v123=1;end end end if ((2787==2787) and (v110==(1 + (838 -(305 + 533))))) then v96=1;break;end end break;end end end end break;end end break;end if (((3266 -(190 + 1230))==1846) and ((0 -0)==v94)) then v95=0 + 0 ;v96=nil;v94=1 -0 ;end end end end A,B=v28(v11(v82));if  not A[1] then local v97=0;local v98;while true do if (v97==0) then v98=v50[4][v78] or "?" ;error("Script error at ["   .. v98   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end if (v53==0) then v54=v50[1];v55=v50[2];v53=1;end end end return v30(v29(),{},v17)(...);end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (6==v18) then v29=nil;function v29()local v57=0 -0 ;local v58;local v59;local v60;local v61;local v62;local v63;local v64;local v65;while true do if ((0 + 0)~=v57) then else v58=0 + 0 ;v59=nil;v57=1;end if (v57==2) then v62=nil;v63=nil;v57=2 + 1 ;end if (v57==(9 -5)) then while true do if (v58==(4 -2)) then local v99=0;while true do if (v99==(84 -(5 + 78))) then v58=3;break;end if (v99==(0 + 0)) then v63=nil;v64=nil;v99=2 -1 ;end end end if (v58==(1 + 2)) then v65=nil;while true do local v103=1117 -(876 + 241) ;local v104;while true do if (v103==0) then v104=0;while true do if (v104==(1939 -(753 + 1186))) then if (v59==2) then local v111=1132 -(385 + 747) ;local v112;while true do if (v111==0) then v112=0;while true do local v116=0 -0 ;while true do if (v116==(83 -(18 + 65))) then if (v112==1) then for v188=1391 -(540 + 850) ,v24() do v62[v188]=v24();end return v63;end if (v112==0) then for v190=1383 -(204 + 1178) ,v24() do local v191=0;local v192;local v193;local v194;while true do if (v191~=(0 -0)) then else v192=0 + 0 ;v193=nil;v191=1;end if (v191~=1) then else v194=nil;while true do if (v192==(1 -0)) then while true do if (v193~=(0 -0)) then else v194=v22();if (v21(v194,1 + 0 ,1)~=(0 + 0)) then else local v327=0 + 0 ;local v328;local v329;local v330;local v331;local v332;while true do if (v327~=(1 + 1)) then else v332=nil;while true do if (v328==(0 + 0)) then local v360=0;local v361;while true do if (v360==(0 -0)) then v361=0 + 0 ;while true do if ((1 -0)~=v361) then else v328=1;break;end if (v361~=(465 -(362 + 103))) then else v329=0 -0 ;v330=nil;v361=1;end end break;end end end if (v328==2) then while true do if (v329==(1 + 1)) then local v370=302 -(243 + 59) ;local v371;while true do if (v370==(0 -0)) then v371=1912 -(1053 + 859) ;while true do if (v371==(102 -(70 + 31))) then v329=3;break;end if ((0 + 0)==v371) then local v396=0 + 0 ;local v397;while true do if (v396==(1351 -(1325 + 26))) then v397=0;while true do if (v397==1) then v371=1;break;end if (v397~=(0 + 0)) then else local v404=0;while true do if (v404==0) then if (v21(v331,1,1 + 0 )~=(1 + 0)) then else v332[2]=v65[v332[263 -(167 + 94) ]];end if (v21(v331,2,1 + 1 )==(1 + 0)) then v332[130 -(58 + 69) ]=v65[v332[3 -0 ]];end v404=2 -1 ;end if (v404~=(2 -1)) then else v397=2 -1 ;break;end end end end break;end end end end break;end end end if (v329==1) then local v372=0;local v373;while true do if (v372~=0) then else v373=0;while true do if ((0 + 0)~=v373) then else local v398=0 + 0 ;while true do if (v398==(0 -0)) then v332={v23(),v23(),nil,nil};if (v330==(1912 -(694 + 1218))) then local v401=0 + 0 ;local v402;local v403;while true do if (v401~=1) then else while true do if (v402==(0 + 0)) then v403=0;while true do if (v403==0) then v332[3]=v23();v332[6 -2 ]=v23();break;end end break;end end break;end if (v401~=(0 + 0)) then else v402=0;v403=nil;v401=1;end end elseif (v330==1) then v332[3]=v24();elseif (v330==2) then v332[3]=v24() -(2^(9 + 7)) ;elseif (v330==(6 -3)) then local v411=0;local v412;local v413;while true do if (v411==0) then v412=0;v413=nil;v411=2 -1 ;end if (v411==1) then while true do if ((0 + 0)==v412) then v413=0;while true do if (v413==(0 + 0)) then v332[1223 -(73 + 1147) ]=v24() -((1 + 1)^16) ;v332[4]=v23();break;end end break;end end break;end end end v398=2 -1 ;end if ((2 -1)==v398) then v373=1;break;end end end if (v373~=(1 + 0)) then else v329=2;break;end end break;end end end if (v329==(1 + 2)) then if (v21(v331,4 -1 ,644 -(499 + 142) )==(1 + 0)) then v332[4]=v65[v332[4 + 0 ]];end v60[v190]=v332;break;end if (v329==0) then local v375=930 -(580 + 350) ;local v376;while true do if (v375==(0 -0)) then v376=423 -(317 + 106) ;while true do if (v376==(1 + 0)) then v329=1;break;end if (v376~=0) then else local v399=0;while true do if (v399~=1) then else v376=1 + 0 ;break;end if (v399==0) then v330=v21(v194,2,2 + 1 );v331=v21(v194,1 + 3 ,6);v399=502 -(381 + 120) ;end end end end break;end end end end break;end if (v328==(1 + 0)) then local v362=0;while true do if (v362==(0 + 0)) then local v377=0;while true do if (v377~=(1 + 0)) then else v362=1 + 0 ;break;end if (v377==0) then v331=nil;v332=nil;v377=1;end end end if (v362==1) then v328=2;break;end end end end break;end if (v327~=1) then else v330=nil;v331=nil;v327=1108 -(148 + 958) ;end if ((1012 -(674 + 338))~=v327) then else v328=1654 -(181 + 1473) ;v329=nil;v327=1;end end end break;end end break;end if (v192==0) then local v277=668 -(62 + 606) ;while true do if (v277==(1 -0)) then v192=761 -(70 + 690) ;break;end if (v277==0) then v193=0;v194=nil;v277=1;end end end end break;end end end for v195=1155 -(786 + 368) ,v24() do v61[v195-(53 -(18 + 34)) ]=v29();end v112=1;end break;end end end break;end end end if (v59~=(0 + 0)) then else local v113=0 -0 ;while true do if ((1430 -(440 + 988))==v113) then v59=94 -(15 + 78) ;break;end if (v113==(239 -(227 + 12))) then v60={};v61={};v113=1 + 0 ;end if (v113==1) then v62={};v63={v60,v61,nil,v62};v113=2;end end end v104=1591 -(1033 + 557) ;end if (v104==1) then if (v59==(1582 -(1257 + 324))) then local v114=0;while true do if (v114==(3 -2)) then for v117=1,v64 do local v118=0;local v119;local v120;local v121;local v122;while true do if ((117 -(48 + 68))==v118) then v121=nil;v122=nil;v118=2;end if (0==v118) then v119=0 + 0 ;v120=nil;v118=3 -2 ;end if (v118==2) then while true do if (v119==0) then v120=0;v121=nil;v119=1060 -(479 + 580) ;end if (v119~=1) then else v122=nil;while true do if (v120~=(1 + 0)) then else if (v121==1) then v122=v22()~=0 ;elseif (v121==2) then v122=v25();elseif (v121~=(7 -4)) then else v122=v26();end v65[v117]=v122;break;end if (v120==(1385 -(723 + 662))) then local v248=0 -0 ;local v249;local v250;while true do if (v248==0) then v249=0 + 0 ;v250=nil;v248=1;end if (v248~=(27 -(17 + 9))) then else while true do if (v249~=0) then else v250=0;while true do if (v250~=1) then else v120=1 + 0 ;break;end if ((0 + 0)~=v250) then else local v341=0;while true do if (v341~=1) then else v250=1 + 0 ;break;end if ((1666 -(399 + 1267))==v341) then v121=v22();v122=nil;v341=3 -2 ;end end end end break;end end break;end end end end break;end end break;end end end v63[2 + 1 ]=v22();v114=778 -(700 + 76) ;end if (v114==(0 -0)) then v64=v24();v65={};v114=2 -1 ;end if (v114==2) then v59=4 -2 ;break;end end end break;end end break;end end end break;end if ((0 -0)==v58) then local v100=309 -(224 + 85) ;while true do if (v100~=(1 + 0)) then else v58=2 -1 ;break;end if (v100==0) then v59=0;v60=nil;v100=1;end end end if (v58==(2 -1)) then local v101=168 -(131 + 37) ;while true do if (v101==1) then v58=2;break;end if (v101==0) then v61=nil;v62=nil;v101=3 -2 ;end end end end break;end if (v57~=3) then else v64=nil;v65=nil;v57=2 + 2 ;end if (v57~=1) then else v60=nil;v61=nil;v57=2;end end end v30=nil;v18=7;end if (1==v18) then v21=nil;function v21(v66,v67,v68)if v68 then local v72=(v66/(2^(v67-(1 + 0))))%((1 + 1)^(((v68-(586 -(239 + 346))) -(v67-(1 + 0))) + 1 + 0)) ;return v72-(v72%(2 -(1708 -(828 + 879)))) ;else local v73=(420 -(167 + 251))^(v67-((2 + 0) -1)) ;return (((v66%(v73 + v73))>=v73) and (1 -0)) or (1763 -(1745 + 13 + 5)) ;end end v22=nil;v18=2;end end end vv9(),...);end
