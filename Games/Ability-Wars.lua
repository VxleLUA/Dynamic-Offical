--[[


─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
─████████████───████████──████████─██████──────────██████─██████████████─██████──────────██████─██████████─██████████████──────────────────────██████──██████─████████───
─██░░░░░░░░████─██░░░░██──██░░░░██─██░░██████████──██░░██─██░░░░░░░░░░██─██░░██████████████░░██─██░░░░░░██─██░░░░░░░░░░██──────────────────────██░░██──██░░██─██░░░░██───
─██░░████░░░░██─████░░██──██░░████─██░░░░░░░░░░██──██░░██─██░░██████░░██─██░░░░░░░░░░░░░░░░░░██─████░░████─██░░██████████──────────────────────██░░██──██░░██─████░░██───
─██░░██──██░░██───██░░░░██░░░░██───██░░██████░░██──██░░██─██░░██──██░░██─██░░██████░░██████░░██───██░░██───██░░██──────────────────────────────██░░██──██░░██───██░░██───
─██░░██──██░░██───████░░░░░░████───██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██─────████░░████─────██░░██──██░░██──██░░██─██░░░░░░░░░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██░░░░░░░░░░██────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██████──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██████░░██─██░░██──██░░██─██░░██──────────██░░██───██░░██───██░░██──────────────────────────────██░░░░██░░░░██───██░░██───
─██░░████░░░░██───────██░░██───────██░░██──██░░░░░░░░░░██─██░░██──██░░██─██░░██──────────██░░██─████░░████─██░░██████████──────────────────────████░░░░░░████─████░░████─
─██░░░░░░░░████───────██░░██───────██░░██──██████████░░██─██░░██──██░░██─██░░██──────────██░░██─██░░░░░░██─██░░░░░░░░░░██────────────────────────████░░████───██░░░░░░██─
─████████████─────────██████───────██████──────────██████─██████──██████─██████──────────██████─██████████─██████████████──────────────────────────██████─────██████████─
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

]]--

loadstring(game:HttpGet("https://raw.githubusercontent.com/VxleLUA/Dynamic-Offical/main/System/Notifications/GameSupported.lua"))()
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==0) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v31)if (v1(v31,2)==79) then v20=v0(v3(v31,1,1));return "";else local v74=v2(v0(v31,16));if v20 then local v97=0;local v98;while true do if (v97==1) then return v98;end if (v97==0) then v98=v5(v74,v20);v20=nil;v97=1;end end else return v74;end end end);v18=1;end if (v18==1) then v21=nil;function v21(v32,v33,v34)if v34 then local v75=0 -0 ;local v76;while true do if (v75==(0 -0)) then v76=(v32/((6 -4)^(v33-(1447 -(1010 + 97 + 339)))))%(((1139 -(488 + 301)) -(231 + 117))^(((v34-(1598 -(1194 + 403))) -(v33-1)) + 1)) ;return v76-(v76%(1 + 0)) ;end end else local v77=385 -(48 + 337) ;local v78;while true do if (v77==(1022 -(295 + (1354 -(368 + 259))))) then v78=2^(v33-1) ;return (((v32%(v78 + v78))>=v78) and (1 + 0)) or (1818 -(1086 + 732)) ;end end end end v22=nil;v18=2;end if (v18==6) then v29=nil;function v29()local v35=0 + 0 ;local v36;local v37;local v38;local v39;local v40;local v41;local v42;while true do if (v35~=3) then else v42=nil;while true do local v99=0 -0 ;while true do if (v99~=(398 -(320 + 78))) then else local v104=665 -(620 + 45) ;while true do if ((1 + 0)==v104) then v99=1 -0 ;break;end if (v104~=0) then else if ((1 + 0)~=v36) then else local v109=611 -(177 + 434) ;local v110;while true do if (v109==(0 + 0)) then v110=0 -0 ;while true do if (v110==(2 + 0)) then v36=2;break;end if (v110==(1 -0)) then local v117=155 -(58 + 97) ;while true do if (0~=v117) then else for v122=1 -0 ,v41 do local v123=1655 -(52 + 1603) ;local v124;local v125;local v126;local v127;while true do if (v123==(0 -0)) then v124=0;v125=nil;v123=1;end if (v123==1) then v126=nil;v127=nil;v123=6 -4 ;end if (v123==2) then while true do if (v124~=0) then else local v248=0 + 0 ;while true do if (v248==(1254 -(537 + 716))) then v124=145 -(82 + 62) ;break;end if (v248==(0 + 0)) then v125=832 -(271 + 561) ;v126=nil;v248=1 -0 ;end end end if (v124~=(1 + 0)) then else v127=nil;while true do if (v125~=(0 -0)) then else local v307=0 -0 ;while true do if ((0 -0)~=v307) then else local v328=0 + 0 ;while true do if (v328==0) then v126=v22();v127=nil;v328=1823 -(1054 + 768) ;end if (v328==1) then v307=3 -2 ;break;end end end if ((1873 -(1778 + 94))~=v307) then else v125=1;break;end end end if (v125==(373 -(254 + 118))) then if (v126==1) then v127=v22()~=(581 -(355 + 226)) ;elseif (v126==(2 -0)) then v127=v25();elseif (v126~=3) then else v127=v26();end v42[v122]=v127;break;end end break;end end break;end end end v40[2 + 1 ]=v22();v117=1 + 0 ;end if (v117~=(1103 -(181 + 921))) then else v110=2;break;end end end if (v110==(866 -(581 + 285))) then local v118=0 + 0 ;while true do if (v118~=0) then else v41=v24();v42={};v118=335 -(40 + 294) ;end if (v118==(1 + 0)) then v110=1585 -(184 + 1400) ;break;end end end end break;end end end if (v36==(560 -(487 + 71))) then local v111=0 + 0 ;local v112;while true do if (v111~=0) then else v112=1296 -(834 + 462) ;while true do local v115=0 + 0 ;local v116;while true do if (0==v115) then v116=0;while true do if (v116==(0 -0)) then if ((824 -(556 + 267))~=v112) then else for v226=1,v24() do v39[v226]=v24();end return v40;end if (v112~=(0 -0)) then else local v192=1050 -(954 + 96) ;while true do if (v192==(1738 -(24 + 1713))) then v112=1 + 0 ;break;end if (v192~=(931 -(516 + 415))) then else for v249=1 + 0 ,v24() do local v250=0;local v251;local v252;while true do if (1~=v250) then else while true do if (v251~=0) then else v252=v22();if (v21(v252,3 -2 ,1 + 0 )==(0 -0)) then local v337=0;local v338;local v339;local v340;local v341;while true do if (v337~=(751 -(408 + 343))) then else v338=0 + 0 ;v339=nil;v337=1;end if (v337==1) then v340=nil;v341=nil;v337=4 -2 ;end if (v337==(2 + 0)) then while true do if (v338~=(0 -0)) then else v339=v21(v252,1714 -(669 + 1043) ,1356 -(261 + 1092) );v340=v21(v252,8 -4 ,1480 -(1227 + 247) );v338=2 -1 ;end if (v338~=(1606 -(1410 + 195))) then else v341={v23(),v23(),nil,nil};if (v339==0) then local v362=393 -(291 + 102) ;local v363;local v364;while true do if (v362~=0) then else v363=0 + 0 ;v364=nil;v362=1 -0 ;end if (v362~=(911 -(867 + 43))) then else while true do if (v363~=(0 + 0)) then else v364=0;while true do if (v364~=(0 + 0)) then else v341[5 -2 ]=v23();v341[4 + 0 ]=v23();break;end end break;end end break;end end elseif (v339==(1 -0)) then v341[1848 -(1366 + 479) ]=v24();elseif (v339==(1236 -(1121 + 113))) then v341[1664 -(610 + 1051) ]=v24() -(2^(72 -56)) ;elseif (v339~=(3 + 0)) then else local v376=0 + 0 ;local v377;while true do if (v376==0) then v377=0 -0 ;while true do if (v377==0) then v341[3]=v24() -(2^16) ;v341[1884 -(864 + 1016) ]=v23();break;end end break;end end end v338=1 + 1 ;end if (v338~=3) then else if (v21(v340,3,3)==(2 -1)) then v341[4]=v42[v341[4]];end v37[v249]=v341;break;end if (v338==(1 + 1)) then if (v21(v340,1 + 0 ,2 -1 )~=(1 + 0)) then else v341[2 + 0 ]=v42[v341[2]];end if (v21(v340,1087 -(205 + 880) ,2)==(1243 -(1197 + 45))) then v341[6 -3 ]=v42[v341[9 -6 ]];end v338=2 + 1 ;end end break;end end end break;end end break;end if (v250==0) then local v309=402 -(124 + 278) ;while true do if (v309~=0) then else local v329=0 -0 ;while true do if (v329~=0) then else v251=0 -0 ;v252=nil;v329=1274 -(1249 + 24) ;end if ((1445 -(897 + 547))~=v329) then else v309=1060 -(751 + 308) ;break;end end end if (v309~=(2 -1)) then else v250=683 -(214 + 468) ;break;end end end end end for v253=1,v24() do v38[v253-1 ]=v29();end v192=1;end end end break;end end break;end end end break;end end end v104=2 -1 ;end end end if (v99==(2 -1)) then if (v36==(0 -0)) then local v106=0;local v107;while true do if (v106==(0 -0)) then v107=1203 -(892 + 311) ;while true do if (v107==0) then v37={};v38={};v107=112 -(47 + 64) ;end if (v107==(1190 -(451 + 738))) then v39={};v40={v37,v38,nil,v39};v107=4 -2 ;end if (v107==2) then v36=3 -2 ;break;end end break;end end end break;end end end break;end if (v35==(2 + 0)) then v40=nil;v41=nil;v35=201 -(105 + 93) ;end if (v35~=(0 -0)) then else v36=0 -0 ;v37=nil;v35=1 -0 ;end if (v35~=(3 -2)) then else local v89=0;local v90;while true do if ((0 + 0)==v89) then v90=0 + 0 ;while true do if (v90==(152 -(132 + 20))) then local v108=857 -(632 + 225) ;while true do if (v108~=1) then else v90=1694 -(1275 + 418) ;break;end if (v108~=(357 -(211 + 146))) then else v38=nil;v39=nil;v108=1 + 0 ;end end end if (v90~=(1 + 0)) then else v35=185 -(52 + 131) ;break;end end break;end end end end end v30=nil;v18=7;end if (v18==7) then function v30(v43,v44,v45)local v46=v43[1];local v47=v43[2];local v48=v43[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1 ;local function v71()local v79=v46;local v80=v47;local v81=v48;local v82=v28;local v83={};local v84={};local v85={};for v91=0 + 0 ,v70 do if (((4809 -2307)<(581 + 2771)) and (v91>=v81)) then v83[v91-v81 ]=v69[v91 + 1 ];else v85[v91]=v69[v91 + 1 + 0 ];end end local v86=(v70-v81) + 1 ;local v87;local v88;while true do local v92=0;local v93;local v94;while true do if (((3566 -(172 + (63 -35)))>(7439 -5258)) and (v92==(0 -0))) then v93=1562 -(69 + 1493) ;v94=nil;v92=1 + 0 ;end if ((v92==(571 -(244 + (416 -90)))) or ((1291 -874)>(65 + 509))) then while true do if (((1831 -(95 + 85))<(4085 -(100 + 9))) and (v93==(0 + 0 + 0))) then v94=0 + 0 ;while true do if ((v94==1) or ((1295 + 1812)==(630 -414))) then if ((938==938) and (v88<=(40 -21))) then if (((102 + 21)<=2952) and (v88<=(1388 -(1067 + 312)))) then if (((1195 + 3203)>=3789) and (v88<=(1716 -(680 + 1032)))) then if ((v88<=(1049 -(742 + 306))) or (4261>=4283)) then if ((v88>(0 + 0)) or ((1706 + 1362)<(1398 + 208))) then local v128=0;local v129;while true do if (((3235 -(1041 + 230))==(2357 -(249 + (358 -214)))) and (v128==(0 -0))) then v129=v87[2];v85[v129](v85[v129 + (2 -1) ]);break;end end else v85[v87[1 + 1 ]][v87[7 -4 ]]=v87[494 -((1975 -(187 + 1400)) + 102) ];end elseif ((1494<(4605 -(89 + 240))) and (v88<=2)) then v44[v87[9 -6 ]]=v85[v87[2]];elseif ((v88==(7 -4)) or ((2436 -(732 + 722))>=(2756 -1280))) then local v193=0;local v194;local v195;local v196;local v197;local v198;while true do if ((4526>(7125 -5053)) and (v193==0)) then local v244=438 -(193 + 245) ;while true do if ((3593>=(2021 -1316)) and (v244==(407 -(36 + 371)))) then v194=0 -0 ;v195=nil;v244=1;end if ((v244==(1 + (1840 -(1525 + 315)))) or ((6082 -3196)>(481 + 4330))) then v193=595 -(177 + 417) ;break;end end end if ((63<=1679) and (v193==(922 -(627 + 294)))) then v196=nil;v197=nil;v193=2;end if ((2664>=(1865 -536)) and (v193==2)) then v198=nil;while true do if ((v194==((425 -(58 + 365)) -(0 -0))) or (2245>=((4409 -(84 + 764)) -(285 + 282)))) then for v310=v195,v68 do local v311=0 + 0 ;local v312;while true do if ((((1612 -(758 + 854)) + 0)==v311) or (((2117 -1307) -534)==(278 + 1736))) then v312=1599 -(46 + 724 + 829) ;while true do if ((v312==(0 + (1565 -(1546 + 19)))) or (((3539 -2205) -781)<266)) then v198=v198 + 1 + 0 ;v85[v310]=v196[v198];break;end end break;end end end break;end if ((v194==(1967 -(555 + 1411))) or ((3365 + 137)<(1989 -(671 + 690)))) then local v300=1164 -(765 + 399) ;while true do if (((5080 -(103 + 7 + 3))>(6738 -3693)) and (v300==1)) then v194=2;break;end if (((5940 -(1036 + 297))<=(17179 -12493)) and (v300==(0 -0))) then v68=(v197 + v195) -1 ;v198=0 -0 ;v300=1 -0 ;end end end if ((v194==(0 + 0)) or ((2543 -(13 + 62 + 2))<(822 + 896))) then local v301=1002 -(585 + 417) ;local v302;while true do if ((3347>(29 + 2975)) and (v301==(0 -0))) then v302=1861 -(1621 + 240) ;while true do if ((v302==1) or ((2940 -1565)>=(4827 + 4))) then v194=1;break;end if ((v302==0) or (1125<(603 + 408))) then v195=v87[1890 -(1532 + 356) ];v196,v197=v82(v85[v195](v13(v85,v195 + (58 -(35 + 22)) ,v87[(1 + 2) -0 ])));v302=2 -(1768 -(1456 + 311)) ;end end break;end end end end break;end end else local v199=0 + 0 ;local v200;local v201;while true do if ((v199==1) or ((13199 -9398)<=(1499 + 968))) then while true do if ((v200==(0 -0)) or ((1805 + 770)>=3646)) then v201=v85[v87[3 + 1 ]];if ( not v201 or ((326 + 800 + 1462)==((6247 -3543) -(64 + 296)))) then v67=v67 + 1 + 0 ;else local v317=0 + 0 ;local v318;local v319;while true do if ((v317==(1 + 0)) or ((839 -491)>(4496 -((1012 -(913 + 38)) + 279)))) then while true do if ((v318==(0 + 0)) or ((1847 -1109)<(693 + 21))) then v319=1286 -(27 + 1259) ;while true do if (((2844 -1251)<=(11827 -7600)) and (v319==0)) then v85[v87[7 -5 ]]=v201;v67=v87[950 -(914 + 33) ];break;end end break;end end break;end if (((2037 -740)<=(13866 -8897)) and (v317==(0 + (0 -0)))) then v318=0;v319=nil;v317=(576 + 797) -(236 + 1136) ;end end end break;end end break;end if ((v199==(0 + 0)) or (((5176 -(31 + 289)) -2665)==(8034 -4589))) then v200=0;v201=nil;v199=890 -(359 + 530) ;end end end elseif ((v88<=(13 -7)) or ((2209 -(60 + 502))>(5181 -1978))) then if ((((3005 -2195) + 576)<(12421 -8143)) and (v88==(1169 -(293 + 871)))) then local v134=0 -(1586 -(212 + 1374)) ;local v135;local v136;while true do if ((v134==(345 -(21 + 323))) or (2464>=(5922 -((727 -(232 + 266)) + 850)))) then while true do if (((296 + 816 + 326)>=413) and (v135==(0 -0))) then v136=v87[2];v85[v136]=v85[v136](v13(v85,v136 + 1 + 0 ,v68));break;end end break;end if (((733 + 3423)>2640) and ((1430 -((2047 -(10 + 762)) + 155))==v134)) then v135=0 -0 ;v136=nil;v134=1599 -(294 + 1304) ;end end else v85[v87[1 + 1 + 0 ]]=v30(v80[v87[1 + 2 ]],nil,v45);end elseif ((v88<=(1087 -(211 + 869))) or ((1782 -(726 + 751))>(3948 -(270 + 637)))) then local v138=856 -(399 + 432 + 25) ;local v139;local v140;while true do if (((6106 -2067)>=(780 + 302)) and (v138==(0 -0))) then v139=0 -0 ;v140=nil;v138=(1 + 0) -0 ;end if ((1077<=4043) and (v138==1)) then while true do if ((v139==(0 + 0)) or ((2840 + 607)<(419 + 1039))) then v140=v87[(1837 -701) -(113 + 1021) ];v85[v140](v13(v85,v140 + 1 ,v87[836 -(247 + 586) ]));break;end end break;end end elseif ((v88==(7 + 1)) or ((1901 -(135 + 383 + 91))==(2478 -1621))) then local v202=563 -(367 + 196) ;local v203;local v204;while true do if ((2104>(654 + 120)) and (v202==(3 -2))) then while true do if ((v203==(169 -(120 + 49))) or (4660<(2397 + 526))) then v204=v87[(221 + 218) -(303 + 134) ];v85[v204](v13(v85,v204 + 1 + 0 ,v68));break;end end break;end if ((4498>(1408 -(97 + 150))) and (v202==0)) then v203=0 + 0 ;v204=nil;v202=3 -2 ;end end else v85[v87[1518 -(1293 + 223) ]]={};end elseif ((v88<=(347 -(240 + 93))) or ((423 + 1452)<(3402 -(1578 + 297)))) then if ((v88<=(29 -(1483 -(516 + 949)))) or ((7597 -5479)==(943 -((798 -545) + 274)))) then if ((v88>(9 + 1)) or (1450>=4826)) then local v141=0;local v142;local v143;while true do if ((v141==((538 + 507) -(108 + 936))) or ((8015 -4350)<=(3631 -1259))) then for v237=v142 + (1853 -(254 + 1598)) ,v87[3] do v7(v143,v85[v237]);end break;end if (((1134 -(153 + 159))<=(3192 -(687 + 490))) and (0==v141)) then local v229=514 -(64 + 450) ;while true do if (((4413 -(673 + 43))==3697) and (v229==(0 + 0))) then v142=v87[2 -(0 + 0) ];v143=v85[v142];v229=1;end if (((37 + 0)<(172 + 217 + 2500)) and ((633 -(324 + 308))==v229)) then v141=2 -1 ;break;end end end end else v85[v87[1 + 1 ]]=v45[v87[1861 -(1812 + 46) ]];end elseif ((v88<=12) or ((3984 -2919)>(5330 -3031))) then v85[v87[2]]=v44[v87[1805 -(484 + 51 + 1267) ]];elseif (((9088 -5823)<((5434 -(847 + 46)) -(541 + 147))) and (v88>(21 -8))) then if ((v87[1 + 1 ]<v85[v87[659 -(441 + 214) ]]) or ((7135 -5344)<(546 + 777))) then v67=v67 + (2 -1) ;else v67=v87[484 -(36 + 445) ];end else local v206=1140 -(377 + 692 + 71) ;local v207;local v208;local v209;while true do if (((4625 -2833)<(5422 -(420 + 1161))) and (v206==(0 + 0))) then local v245=436 -(34 + 402) ;while true do if (((1050 -659)<2232) and ((1 + (409 -(320 + 89)))==v245)) then v206=1;break;end if (((1414 + 2406)>=((4365 -(1126 + 223)) -((901 -(107 + 414)) + 151 + 109))) and (v245==(0 + 0))) then v207=v87[1 + 1 ];v208={v85[v207](v13(v85,v207 + (1 -0) ,v68))};v245=2 -1 ;end end end if ((v206==(1 -0)) or (1992>=(6397 -3064))) then v209=0 + 0 + 0 ;for v260=v207,v87[14 -(20 -10) ] do local v261=0;local v262;while true do if ((v261==0) or (3190<(1736 -(31 + 150)))) then v262=0;while true do if ((v262==(970 -(262 + 708))) or (101==2271)) then v209=v209 + (1 -0) ;v85[v260]=v208[v209];break;end end break;end end end break;end end end elseif (((4439 -(148 + 608))==(4361 -(603 + 75))) and (v88<=16)) then if ((v88>(1712 -(881 + 816))) or ((809 + 1132)<=(1229 -505))) then local v148=0;local v149;local v150;while true do if ((3402==3402) and (v148==1)) then while true do if ((0==v149) or ((4 + 2461)==(5284 -(791 + 760)))) then v150=v87[1 + 1 ];v85[v150]=v85[v150](v85[v150 + 1 + 0 ]);break;end end break;end if (((3127 + 549)>(2715 + (1324 -462))) and (v148==(1917 -(1024 + 893)))) then v149=1758 -(23 + 1735) ;v150=nil;v148=4 -3 ;end end else local v151=1328 -(1266 + 62) ;local v152;local v153;local v154;local v155;while true do if ((4567>2438) and (v151==(1257 -(1037 + 220)))) then v152=0;v153=nil;v151=1 + 0 ;end if ((v151==(1 + 1)) or ((2504 + 241)>=(6777 -2582))) then while true do if ((v152==(38 -(13 + 24))) or ((5749 -(32 + 1912))<2984)) then v155=v87[11 -8 ];for v274=(566 -(325 + 240)) -0 ,v155 do v154[v274]=v85[v153 + v274 ];end break;end if (((1029 -(898 + 101))<3944) and (v152==(1798 -((2932 -1336) + 202)))) then v153=v87[584 -(339 + 243) ];v154=v85[v153];v152=1 + 0 ;end end break;end if ((v151==(2 -(2 -1))) or ((712 + 918)>=(4250 -(450 + (1642 -(552 + 809)))))) then v154=nil;v155=nil;v151=2 + 0 ;end end end elseif ((v88<=(50 -33)) or ((1588 -799)>(2874 + 1056))) then local v156=0;local v157;while true do if ((2249<=(1329 + 1590)) and (v156==(0 -0))) then v157=v87[4 -2 ];v85[v157]=v85[v157]();break;end end elseif ((v88>(42 -24)) or ((5802 -4273)==4950)) then v85[v87[7 -5 ]][v87[3]]=v85[v87[14 -10 ]];else local v212=148 -(131 + 17) ;local v213;local v214;local v215;local v216;while true do if ((((2502 + 2193) -2748)<4096) and (v212==2)) then while true do if ((v213==(0 -0)) or ((1948 + 184 + 2052)==(66 + 1521))) then local v306=0;while true do if ((v306==(1 -(0 + 0))) or ((5214 -((75 -(17 + 5)) + 636))<(686 -211))) then v213=(2290 -(667 + 1028)) -(369 + 225) ;break;end if (((3773 + (2485 -1807))>(2696 + 1592)) and (v306==0)) then v214=0;v215=nil;v306=1 -0 ;end end end if ((v213==((1574 -(1445 + 127)) -1)) or ((3106 + (2397 -(149 + 1286)))<656)) then v216=nil;while true do if (((1 + 0)==v214) or ((13870 -(4182 + 4897))<=(3978 -(275 + 163)))) then v85[v215 + (1389 -(1295 + (118 -25))) ]=v216;v85[v215]=v216[v87[13 -9 ]];break;end if ((v214==(851 -(269 + 582))) or ((5530 -2685)>(10928 -6039))) then local v326=(0 -0) + 0 ;local v327;while true do if ((0==v326) or ((2319 -((1582 -(506 + 1055)) + 51))>(3836 -(440 + 891)))) then v327=0 + 0 ;while true do if (((4603 -2628)==(3688 -(477 + 1236))) and (v327==1)) then v214=(1 -0) + 0 ;break;end if (((633 -475)==158) and (v327==((0 -0) -0))) then v215=v87[7 -5 ];v216=v85[v87[3 + 0 ]];v327=1 + 0 ;end end break;end end end end break;end end break;end if ((v212==1) or ((3519 -1374)>(2213 + 415))) then v215=nil;v216=nil;v212=2;end if (((200 + 2546)<(3998 + 185)) and (0==v212)) then v213=168 -(51 + 117) ;v214=nil;v212=1259 -(507 + (1639 -888)) ;end end end elseif ((v88<=(27 + 2)) or ((2073 -(886 + 368))>=(6201 -4200))) then if ((3285>=1367) and (v88<=(2 + 22))) then if (((1286 + 481)==(256 + 1511)) and (v88<=(89 -68))) then if ((v88>(54 -34)) or ((11078 -8657)<=(744 + 46))) then v85[v87[2 + 0 ]]=v87[1 + 2 ];else v85[v87[3 -(1 + 0) ]]=v85[v87[2 + 1 ]] -v85[v87[4]] ;end elseif (((2512 + 658)>=(900 -(689 + 184))) and (v88<=((1153 -797) -(127 + 207)))) then local v161=0 -0 ;local v162;local v163;while true do if (((9600 -5999)==(9760 -(7283 -(630 + 494)))) and ((0 + 0 + 0)==v161)) then v162=0;v163=nil;v161=1 + 0 ;end if ((v161==((558 -(294 + 263)) -(1451 -(595 + 856)))) or ((19416 -15098)==(1142 + 342))) then while true do if ((v162==(72 -(61 + 11))) or ((7364 -4162)<=(671 -(43 + 56)))) then v163=v87[2];v85[v163]=v85[v163](v13(v85,v163 + (3 -2) ,v87[6 -3 ]));break;end end break;end end elseif ((v88>(12 + 11)) or ((3526 -(1127 + 578))>2490)) then if (((463 + 1817 + 1439)>=(2829 -(439 + 532))) and (v85[v87[6 -4 ]]==v87[1 + 3 ])) then v67=v67 + 1 + 0 ;else v67=v87[3 + 0 ];end else v85[v87[4 -2 ]]=v87[3]~=(0 + 0) ;end elseif ((((11856 + 176) -7576)>=(3023 -(304 + 473))) and (v88<=26)) then if ((v88>(59 -34)) or ((14 -8)>(1372 + 863))) then if (((286 + 4119)<=(21781 -17335)) and (v87[2 + 0 ]==v85[v87[830 -(270 + 556) ]])) then v67=v67 + 1 + 0 ;else v67=v87[4 -1 ];end elseif ( not v85[v87[(1 -0) + 1 ]] or ((4387 + 123)<(661 + 507))) then v67=v67 + (2 -1) ;else v67=v87[3];end elseif (((2661 + 2274)==(491 + 303 + 4141)) and (v88<=(38 -(36 -25)))) then local v164=0 + (833 -(766 + 67)) ;local v165;local v166;local v167;while true do if (((5175 -1292)<=4847) and (v164==(2 -1))) then v167=nil;while true do if (((971 + 1502)<(19627 -(39936 -25283))) and (v165==0)) then v166=v87[2 + 0 ];v167={};v165=1;end if ((1508>=(49 + 999)) and (((1990 -(347 + 297)) -(1319 + 26))==v165)) then for v277=1 -0 , #v84 do local v278=0 + 0 + 0 ;local v279;local v280;while true do if ((v278==(1 + 0)) or ((3362 -(1134 + 383))>=4951)) then while true do if ((v279==(0 -0)) or ((141 + (662 -275))<(32 + 33))) then v280=v84[v277];for v343=0 + 0 + 0 , #v280 do local v344=0;local v345;local v346;local v347;while true do if (((286 + 2216 + 1316)>(7690 -(12175 -7750))) and (v344==(55 -(43 + 12)))) then v345=v280[v343];v346=v345[2 -1 ];v344=1 + 0 ;end if ((v344==(1 + 0)) or ((1498 + 2341)<(417 -(221 + 75)))) then v347=v345[1489 -(1414 + 73) ];if (((v346==v85) and (v347>=v166)) or (763>=(4132 -(298 + 40)))) then local v359=0 -0 ;local v360;while true do if (((598 + 2464)>(2740 -(65 + 360))) and (v359==0)) then v360=0 -(70 -(9 + 61)) ;while true do if (((3926 -(1343 + 427))==(5715 -3559)) and (v360==0)) then v167[v347]=v346[v347];v345[1 + 0 ]=v167;break;end end break;end end end break;end end end break;end end break;end if (((3066 -(140 + 493))<=(10021 -7492)) and (v278==(0 -0))) then v279=580 -(34 + 275 + 271) ;v280=nil;v278=3 -2 ;end end end break;end end break;end if ((1359<(2721 + 347)) and (v164==((1002 -(484 + 518)) -0))) then v165=0 -0 ;v166=nil;v164=1 + 0 ;end end elseif ((((1721 + 3156) -(764 + 183))<=(3254 + 1143)) and (v88>(21 + 7))) then for v232=v87[2],v87[3 + 0 ] do v85[v232]=nil;end else v85[v87[1 + 1 ]]=v85[v87[(1347 -(463 + 879)) -2 ]][v87[(1391 -1100) -(180 + 107) ]];end elseif ((v88<=(9 + 25)) or (283>(4331 + 108))) then if (((1432 + 2815)>(1552 + 183)) and (v88<=(92 -61))) then if (((2056 -864)==(2753 -(812 + 407 + 342))) and (v88>((41 -23) + 12))) then local v168=0 -0 ;local v169;local v170;local v171;local v172;while true do if (((36 + 1943)<=(7745 -3074)) and (v168==(7 -5))) then while true do if ((v169==(1 -(0 -0))) or (3350<((1268 + 1512) -(988 + 472)))) then v172=1161 -(774 + 387) ;for v281=v170,v87[1833 -(1138 + 691) ] do local v282=0;local v283;while true do if ((v282==(0 + 0)) or ((271 + 2297)<(2817 -(559 + 860)))) then v283=1440 -(414 + 1026) ;while true do if (((4364 -(2738 -(19 + 545)))>=(1000 -(76 + 535))) and (v283==(0 + (1542 -(942 + 600))))) then v172=v172 + 1 ;v85[v281]=v171[v172];break;end end break;end end end break;end if ((351<=(3864 -(37 + 32))) and (v169==((766 -(22 + 82)) -(476 + 186)))) then local v271=0 -(0 -0) ;while true do if ((4119>=1478) and (v271==(1 + 0 + 0))) then v169=1 + 0 ;break;end if ((v271==(0 -0)) or ((575 + 3)==(5930 -((730 -330) + (1111 -387))))) then v170=v87[1459 -(1025 + 432) ];v171={v85[v170](v85[v170 + 1 + 0 ])};v271=2 -1 ;end end end end break;end if (((8590 -4701)==(5493 -(918 + 686))) and (v168==((2678 -(59 + 1443)) -(953 + 223)))) then v169=1045 -(990 + 55) ;v170=nil;v168=1 + 0 ;end if (((1193 + 1243)>=(2990 -(1564 + 27))) and (v168==(533 -(297 + 235)))) then v171=nil;v172=nil;v168=1 + 1 ;end end else v67=v87[1 + 2 ];end elseif ((794==(1970 -1176)) and (v88<=32)) then local v174=0 -0 ;local v175;local v176;local v177;local v178;local v179;while true do if ((v174==(1781 -(1267 + 513))) or ((7486 -4838)>=(5528 -(962 + 280)))) then v177=nil;v178=nil;v174=185 -(117 + 66) ;end if (((2112 -1641)<(2630 + 1880)) and ((2 + 0 + 0)==v174)) then v179=nil;while true do if (((529 + 248)<1038) and (v175==0)) then local v272=0;while true do if (((1 + 0)==v272) or ((1316 + 1423)==(4815 -2049))) then v175=529 -(255 + 273) ;break;end if ((v272==0) or (1608>=(1446 + 365))) then v176=v87[1032 -(447 + 583) ];v177,v178=v82(v85[v176](v85[v176 + 1 ]));v272=1;end end end if ((2423<(4160 -(1080 + 33 + 9))) and (v175==(1891 -(798 + 1091)))) then for v284=v176,v68 do local v285=0 + 0 ;while true do if (((0 + 0)==v285) or (2474==(11007 -7451))) then v179=v179 + (2 -1) ;v85[v284]=v177[v179];break;end end end break;end if (((3489 -1505)>=(245 -56)) and ((1 -0)==v175)) then v68=(v178 + v176) -(1 -0) ;v179=1149 -(487 + 662) ;v175=(802 -(673 + 127)) -0 ;end end break;end if ((1814>=(155 + 255)) and ((597 -(143 + 454))==v174)) then v175=904 -(869 + 35) ;v176=nil;v174=1;end end elseif (((11004 -6383)>=(1377 -(258 + 9))) and (v88==(22 + 11))) then do return;end else v85[v87[788 -(738 + 35 + 13) ]]=v85[v87[3]];end elseif (((3242 -(826 + 439))>((628 -212) + 526)) and (v88<=(12 + (90 -(52 + 14))))) then if (((81 + 1436)<(8385 -5464)) and (v88>(3 + 32))) then if ((v85[v87[2]]~=v85[v87[4]]) or ((5524 -(468 + 1285))>=4313)) then v67=v67 + (2 -1) ;else v67=v87[3];end else local v180=v87[7 -5 ];local v181=v87[7 -3 ];local v182=v180 + 2 + 0 ;local v183={v85[v180](v85[v180 + (2 -1) ],v85[v182])};for v189=2 -1 ,v181 do v85[v182 + v189 ]=v183[v189];end local v184=v183[3 -2 ];if ((930<(21980 -17273)) and v184) then local v225=1721 -(1459 + 203 + 59) ;while true do if (((0 + 0)==v225) or (1047>(4036 -(219 + (3339 -2014))))) then v85[v182]=v184;v67=v87[102 -(66 + 33) ];break;end end else v67=v67 + 1 ;end end elseif ((v88<=(4 + 33)) or (4216<(95 + 934))) then local v185=0 -0 ;local v186;local v187;local v188;while true do if ((v185==(1 + 0)) or (((553 -438) + 49 + 180)>=(1803 + 2225))) then local v234=(0 + 0) -0 ;while true do if (((1845 -909)<3919) and (v234==(164 -(16 + 147)))) then v185=7 -5 ;break;end if (((4254 -(177 + (1957 -(963 + 473))))<(5841 -1478)) and ((1701 -(623 + 713 + 319 + 46))==v234)) then v188={};v187=v10({},{__index=function(v286,v287)local v288=355 -(208 + 147) ;local v289;local v290;while true do if ((v288==(0 -0)) or ((1356 -((2026 -(430 + 1133)) + 605))>(236 + 2465))) then v289=0 + 0 ;v290=nil;v288=1345 -(236 + 1108) ;end if ((v288==(1 + 0)) or ((467 + 496)>(16602 -12210))) then while true do if ((v289==(0 + 0)) or (2386==(1818 -(1293 + 17)))) then v290=v188[v287];return v290[1 + 0 ][v290[219 -(159 + (1610 -(722 + 830))) ]];end end break;end end end,__newindex=function(v291,v292,v293)local v294=0 + 0 ;local v295;local v296;local v297;while true do if (((1490 + 3239)>=((545 + 1419) -(1450 + 316))) and (v294==(1 + 0))) then v297=nil;while true do if ((((8851 -3375) -(17 + (1447 -(172 + 381))))>(18 + 6)) and (v295==(610 -(53 + 556)))) then while true do if (((2768 -(921 + 114))<=(12855 -10246)) and (0==v296)) then v297=v188[v292];v297[1][v297[312 -(67 + 243) ]]=v293;break;end end break;end if ((v295==(0 -(0 -0))) or ((4214 -(1078 + (567 -411)))>=(3931 + (277 -182)))) then local v336=0;while true do if ((v336==1) or ((6435 -3226)==3158)) then v295=(3667 -(160 + 1584)) -(1404 + 518) ;break;end if ((v336==(0 + (0 -0))) or ((451 + 4119)==(1233 + 222))) then v296=0;v297=nil;v336=1;end end end end break;end if ((v294==(0 -0)) or ((4767 -(96 + 43))<2914)) then v295=0 + 0 ;v296=nil;v294=1 + 0 ;end end end});v234=1 + 0 + 0 ;end end end if ((v185==(1663 -(477 + (2477 -1293)))) or (((406 + 1214) -(144 + 127 + 20))>(8953 -6186))) then for v240=1 + 0 ,v87[1087 -(572 + 511) ] do local v241=756 -(642 + 114) ;local v242;while true do if ((v241==(981 -(832 + 60 + 89))) or (((6116 -(1448 + 184)) -(1080 + 61))<(1676 + 127))) then local v298=0 -0 ;while true do if ((v298==(345 -(223 + 122))) or ((11597 -7347)<43)) then v67=v67 + (3 -2) ;v242=v79[v67];v298=1 + 0 ;end if (((1149 -(287 + 98))<=2682) and (v298==(132 -(15 + 116)))) then v241=1;break;end end end if ((v241==1) or ((316 + 2630)==(1441 -(89 + 1023)))) then if ((571<=(5164 -1926)) and (v242[1189 -(686 + 502) ]==(50 -16))) then v188[v240-1 ]={v85,v242[3 + 0 ]};else v188[v240-(1833 -(1024 + 808)) ]={v44,v242[(645 + 846) -(793 + 207 + 488) ]};end v84[ #v84 + 1 ]=v188;break;end end end v85[v87[9 -7 ]]=v30(v186,v187,v45);break;end if ((v185==(0 + (1306 -(802 + 504)))) or ((11796 -8809)==(5265 -(107 + (2081 -(94 + 637)))))) then local v236=1798 -(1475 + 323) ;while true do if (((2098 + (1818 -(319 + 488)))>(348 + 1302)) and ((215 -(38 + 177))==v236)) then v186=v80[v87[309 -(96 + 210) ]];v187=nil;v236=1606 -(411 + 1194) ;end if (((1 -0)==v236) or (2919>=(9716 -6655))) then v185=1632 -(359 + 1272) ;break;end end end end elseif ((v88>(1067 -(468 + 561))) or ((4520 + 180)<=(405 + 145))) then v85[v87[1 + 1 ]]();elseif (v85[v87[2 -0 ]] or ((570 + 604)==(1109 + 1052))) then v67=v67 + 1 + 0 ;else v67=v87[415 -(364 + 48) ];end v67=v67 + 1 + 0 ;break;end if ((v94==(0 + 0)) or (4697<=(206 + 20))) then local v113=0 -0 ;while true do if (((0 -(94 -(8 + 86)))==v113) or ((2155 + 1519)>(11558 -6878))) then local v114=0 -0 ;while true do if (((3235 -(188 + 143))==(8035 -5131)) and ((1 -0)==v114)) then v113=1;break;end if (((2591 -(187 + 1494))==(635 + (1207 -(268 + 664)))) and (v114==(0 + 0))) then v87=v79[v67];v88=v87[2 -1 ];v114=(2 -1) -0 ;end end end if ((3274<=(697 + 3178)) and ((1 -(151 -(117 + 34)))==v113)) then v94=584 -(437 + 146) ;break;end end end end break;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v95=0;local v96;while true do if (v95==0) then v96=v43[4][v67] or "?" ;error("Script error at ["   .. v96   .. "]:"   .. A[2] );break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)(...);end if (v18==2) then function v22()local v49=v1(v16,v19,v19);v19=v19 + 1 ;return v49;end v23=nil;function v23()local v50=1206 -(917 + 289) ;local v51;local v52;while true do if (v50==(1665 -(1159 + 505))) then return (v52 * (472 -216)) + v51 ;end if (v50==(0 -(0 + 0))) then v51,v52=v1(v16,v19,v19 + ((16 -10) -4) );v19=v19 + (2 -0) ;v50=2 -(3 -2) ;end end end v18=3;end if (v18==5) then v27=v24;v28=nil;function v28(...)return {...},v12("#",...);end v18=6;end if (v18==4) then function v25()local v53=0 -0 ;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v53==(6 -3)) then if (v58==(1018 -(538 + 89 + 255 + 136))) then if (v57==(0 + 0)) then return v59 * (0 + (0 -0)) ;else local v105=(436 -(57 + 379)) + 0 ;while true do if (v105==(177 -(117 + (541 -(14 + 467))))) then v58=1 + (0 -0) ;v56=(975 + 213) -(100 + 1088) ;break;end end end elseif (v58==(10025 -7978)) then return ((v57==(0 + 0)) and (v59 * ((834 -((800 -(17 + 152)) + 202))/(0 + 0)))) or (v59 * NaN) ;end return v8(v59,v58-(149 + 874) ) * (v56 + (v57/(2^(199 -(123 + 24))))) ;end if (v53==(244 -(192 + (1484 -(1237 + 196))))) then v56=(837 -(19 + 10)) -(35 + 772) ;v57=(v21(v55,1 + 0 ,13 + 7 ) * ((2 + 0)^(28 + 4))) + v54 ;v53=2;end if (v53==(1539 -(434 + 1103))) then v58=v21(v55,36 -15 ,28 + 3 );v59=((v21(v55,1771 -(1284 + 455) )==(297 -(61 + 235))) and  -(1 + 0)) or (1 + 0) ;v53=907 -(593 + 311) ;end if (v53==(0 -0)) then v54=v24();v55=v24();v53=1 + 0 ;end end end v26=nil;function v26(v60)local v61;if  not v60 then v60=v24();if (v60==0) then return "";end end v61=v3(v16,v19,(v19 + v60) -(1 + 0) );v19=v19 + v60 ;local v62={};for v72=269 -(209 + 59) , #v61 do v62[v72]=v2(v1(v3(v61,v72,v72)));end return v6(v62);end v18=5;end if (v18==3) then v24=nil;function v24()local v63,v64,v65,v66=v1(v16,v19,v19 + 3 );v19=v19 + (29 -((1414 -(67 + 1323)) + (443 -(265 + 177)))) ;return (v66 * (8554182 + 8223034)) + (v65 * 65536) + (v64 * ((1214 + 739) -(332 + 1365))) + v63 ;end v25=nil;v18=4;end end end v15("LOL!",v9(),...);end
