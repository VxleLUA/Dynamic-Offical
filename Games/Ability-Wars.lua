--[[


─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
─████████████───████████──████████─██████──────────██████─██████████████─██████──────────██████─██████████─██████████████──────────────────────██████──██████─████████───
─██░░░░░░░░████─██░░░░██──██░░░░██─██░░██████████──██░░██─██░░░░░░░░░░██─██░░██████████████░░██─██░░░░░░██─██░░░░░░░░░░██──────────────────────██░░██──██░░██─██░░░░██───
─██░░████░░░░██─████░░██──██░░████─██░░░░░░░░░░██──██░░██─██░░██████░░██─██░░░░░░░░░░░░░░░░░░██─████░░████─██░░██████████──────────────────────██░░██──██░░██─████░░██───
─██░░██──██░░██───██░░░░██░░░░██───██░░██████░░██──██░░██─██░░██──██░░██─██░░██████░░██████░░██───██░░██───██░░██──────────────────────────────██░░██──██░░██───██░░██───
─██░░██──██░░██───████░░░░░░████───██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██─────████░░████─────██░░██──██░░██──██░░██─██░░░░░░░░░░██─██░░██──██░░██──██░░██───██░░██───██░░██────────────██░░░░░░░░░░██────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██──██░░██─██░░██████░░██─██░░██──██████──██░░██───██░░██───██░░██────────────██████████████────██░░██──██░░██───██░░██───
─██░░██──██░░██───────██░░██───────██░░██──██░░██████░░██─██░░██──██░░██─██░░██──────────██░░██───██░░██───██░░██──────────────────────────────██░░░░██░░░░██───██░░██───
─██░░████░░░░██───────██░░██───────██░░██──██░░░░░░░░░░██─██░░██──██░░██─██░░██──────────██░░██─████░░████─██░░██████████──────────────────────████░░░░░░████─████░░████─
─██░░░░░░░░████───────██░░██───────██░░██──██████████░░██─██░░██──██░░██─██░░██──────────██░░██─██░░░░░░██─██░░░░░░░░░░██────────────────────────████░░████───██░░░░░░██─
─████████████─────────██████───────██████──────────██████─██████──██████─██████──────────██████─██████████─██████████████──────────────────────────██████─────██████████─
─────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────

]]--

loadstring(game:HttpGet("https://raw.githubusercontent.com/VxleLUA/Dynamic-Offical/main/System/Notifications/GameSupported.lua"))()
do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (0==v18) then v19=1;v20=nil;v16=v4(v3(v16,5),"..",function(v31)if (v1(v31,2)==79) then v20=v0(v3(v31,1,1));return "";else local v69=v2(v0(v31,16));if v20 then local v75=0;local v76;while true do if (v75==0) then v76=v5(v69,v20);v20=nil;v75=1;end if (v75==1) then return v76;end end else return v69;end end end);v21=nil;v18=1;end if (v18==3) then function v25()local v39=v24();local v40=v24();local v41=2 -1 ;local v42=(v21(v40,1 -0 ,3 + 17 ) * (((1033 -(247 + 785)) + (3 -2))^(1973 -((2609 -1401) + 733)))) + v39 ;local v43=v21(v40,21,(104 + 25) -98 );local v44=((v21(v40,1881 -(622 + 1227) )==(1 + 0)) and  -1) or (1 + 0) ;if (v43==(0 + (0 -0))) then if (v42==(0 -0)) then return v44 * (0 -(322 -(306 + 16))) ;else v43=1 + 0 ;v41=0 + 0 ;end elseif (v43==(1750 + 297)) then return ((v42==(1439 -(1226 + 213))) and (v44 * ((416 -(181 + 234))/(851 -(401 + 334 + 116))))) or (v44 * NaN) ;end return v8(v44,v43-(1740 -(462 + 255)) ) * (v41 + (v42/((1586 -((2363 -(141 + 902)) + 264))^(1635 -(770 + 813))))) ;end v26=nil;function v26(v32)local v45=0 + 0 ;local v46;local v47;while true do if (v45==(3 + 0)) then return v6(v47);end if (v45==(1 + 0)) then v46=v3(v16,v19,(v19 + v32) -(1 + 0) );v19=v19 + v32 ;v45=1993 -(874 + 1117) ;end if (v45==2) then v47={};for v77=1 + 0 , #v46 do v47[v77]=v2(v1(v3(v46,v77,v77)));end v45=673 -(339 + 331) ;end if (v45==(0 + 0)) then v46=nil;if  not v32 then v32=v24();if (v32==(0 + 0)) then return "";end end v45=1 + 0 + 0 ;end end end v27=v24;v18=4;end if (v18==5) then v30=nil;function v30(v33,v34,v35)local v48=0;local v49;local v50;local v51;while true do if (v48==1) then v51=v33[3];return function(...)local v79=1;local v80= -1;local v81={...};local v82=v12("#",...) -1 ;local function v83()local v85=v49;local v86=v50;local v87=v51;local v88=v28;local v89={};local v90={};local v91={};for v96=0 -0 ,v82 do if (((3474 -(1081 + 700))<(2777 + 1023)) and (v96>=v87)) then v89[v96-v87 ]=v81[v96 + 1 ];else v91[v96]=v81[v96 + (141 -(93 + 47)) ];end end local v92=(v82-v87) + (1790 -((2304 -(667 + 791)) + 943)) ;local v93;local v94;while true do local v97=0 + 0 ;while true do if ((v97==(0 -(0 + 0))) or ((3871 -(353 + 1146))==(9291 -6886))) then local v109=0 -0 ;while true do if (((1305 + 851)<=(3557 -(267 + 311))) and (v109==(2 -1))) then v97=1;break;end if (((1396 + 64 + 3178)>=3218) and (v109==(1912 -((6822 -5048) + 138)))) then v93=v85[v79];v94=v93[1987 -(677 + 1309) ];v109=761 -(322 + 438) ;end end end if (((1471 + 2161)>(2304 -(598 + 487))) and (v97==1)) then if ((v94<=(19 + 5)) or ((7519 -4882)==2667)) then if ((v94<=11) or ((752 -(71 + 101))==(2402 -(582 + (91 -36))))) then if ((v94<=5) or ((2846 -(793 + 1))>(5808 -3645))) then if (((2971 + 189)>3141) and (v94<=2)) then if ((v94<=((584 + 1152) -(1674 + 62))) or (3224<(1158 -403))) then if ((v91[v93[1 + 1 ]]~=v91[v93[10 -6 ]]) or ((2228 -898)>(4441 -(25 + (1364 -(545 + 70)))))) then v79=v79 + 1 + 0 ;else v79=v93[11 -8 ];end elseif ((v94>1) or ((2982 -((2605 -(1036 + 403)) + 765))==(8096 -4880))) then v91[v93[1 + 1 ]]=v93[10 -7 ];elseif ((((2551 -(299 + 256)) -691)==(370 + 935)) and (v91[v93[1 + 1 ]]==v93[2 + 2 ])) then v79=v79 + 1 + 0 ;else v79=v93[782 -((1156 -811) + 434) ];end elseif (((4227 -((2495 -(907 + 812)) + 895))==2556) and (v94<=(89 -(11 + 75)))) then if (((4367 -(155 + 97))>(1867 -1075)) and (v91[v93[4 -(1 + 1) ]]<v91[v93[4]])) then v79=v79 + 1 + 0 ;else v79=v93[6 -3 ];end elseif ((3943>=1519) and (v94==4)) then local v157=0;local v158;local v159;local v160;while true do if ((v157==(1 + 0)) or ((3431 -1668)==(4460 + 200))) then v160=nil;while true do if (((0 + 0)==v158) or ((1994 -(213 + 299))>(3914 -(959 + 532)))) then v159=(0 + 0) -0 ;v160=nil;v158=1 -0 ;end if (((1 + 0)==v158) or ((106 + 74)>=(4105 -(58 + 209)))) then while true do if ((v159==(597 -(369 + 228))) or ((964 + 1551)<(1011 + 1299))) then v160=v93[2 + 0 ];v91[v160](v91[v160 + 1 + 0 ]);break;end end break;end end break;end if ((4294>(1550 -(1181 + 231))) and ((0 -0)==v157)) then v158=1373 -(999 + 374) ;v159=nil;v157=1;end end else v91[v93[2]]=v35[v93[3]];end elseif ((v94<=(1921 -(1416 + 497))) or ((2437 -(351 + (527 -(174 + 47))))>=2399)) then if (((1990 -(401 + (904 -(338 + 404))))==(184 + 1243)) and (v94<=(6 + 0))) then local v120=0 + 0 ;local v121;local v122;local v123;while true do if (((575 + 566 + (1659 -(236 + 750)))<(3837 -(699 + 472))) and (v120==(1608 -(82 + (2046 -521))))) then v123=nil;while true do if ((v121==(1 + 0)) or ((4559 -2200)<((51 + 218) -151))) then while true do if ((0==v122) or ((3509 -1797)>=(951 + 1683))) then v123=v93[1 + (1165 -(340 + 824)) ];v91[v123]=v91[v123]();break;end end break;end if ((v121==(616 -(269 + 347))) or ((788 + 645)>=((4806 -(1264 + 180)) -(429 + 855)))) then v122=0;v123=nil;v121=(2 -1) + 0 ;end end break;end if ((3345>=(170 + 1278)) and (v120==(0 + 0))) then v121=0 -0 ;v122=nil;v120=1803 -(1705 + (1489 -(987 + 405))) ;end end elseif ((v94==(990 -(627 + 356))) or ((940 -(158 + 156))>(290 + 3209))) then v91[v93[1423 -(1192 + 229) ]]=v91[v93[3 + 0 ]];else v91[v93[6 -4 ]]=v91[v93[29 -(14 + 9 + 3) ]][v91[v93[9 -5 ]]];end elseif ((((2736 -(81 + 200)) -(215 + 1081))>=(2362 -(1410 + 589))) and (v94<=(3 + 6))) then local v124=0 -0 ;local v125;local v126;local v127;local v128;while true do if ((v124==(2 -0)) or ((3426 -(1126 + 457))>(2211 + 2339))) then for v258=v125,v80 do local v259=1241 -(943 + 298) ;local v260;while true do if ((v259==(1537 -(1395 + 25 + 117))) or ((3290 -((4001 -3020) + 722))>=2470)) then v260=(0 -0) -0 ;while true do if ((v260==(0 -0)) or (2260>=(2852 -(342 + 72)))) then v128=v128 + 1 + (1111 -(1008 + 103)) ;v91[v258]=v126[v128];break;end end break;end end end break;end if ((v124==(869 -((1069 -281) + 80))) or ((1853 -(225 + 1482))==4240)) then local v243=0 -(0 -0) ;while true do if (((6436 -2949)>=((6036 -2172) -2355)) and (v243==0)) then v80=(v127 + v125) -1 ;v128=0 -0 ;v243=(1579 -638) -(332 + 608) ;end if ((2370>=(4982 -3543)) and (v243==(1 + 0))) then v124=4 -2 ;break;end end end if ((1935<=(3802 -((1958 -(822 + 1102)) + 489 + 856))) and (v124==(0 + 0))) then local v244=0;while true do if (((2457 + 2417)<=(793 + 4129)) and (v244==(1874 -((1400 -(1287 + 76)) + 1836)))) then v124=1 + 0 ;break;end if (((4917 -(248 + 909))>(1270 + 1782)) and (v244==0)) then v125=v93[4 -2 ];v126,v127=v88(v91[v125](v13(v91,v125 + 1 + 0 ,v93[2 + 1 ])));v244=(512 + 1033) -((1906 -(419 + 38)) + (967 -(459 + 413))) ;end end end end elseif ((v94==(10 + 0)) or ((6011 -(319 + 1579))<(8 + 18))) then local v167=0 + 0 ;local v168;local v169;while true do if (((17019 -12221)==(1507 + 3291)) and ((1 -(0 + 0))==v167)) then for v282=v168 + 1 + 0 ,v80 do v7(v169,v91[v282]);end break;end if ((v167==0) or ((2454 -1299)>(5837 -((1845 -(59 + 1741)) + 1165 + 405)))) then v168=v93[2 -0 ];v169=v91[v168];v167=4 -3 ;end end else v91[v93[2]]=v91[v93[2 + 1 ]] + v93[4 + 0 ] ;end elseif ((v94<=((47 -26) -4)) or ((2129 -(44 + 29))>(12850 -8417))) then if (((1243 + 2167)>(2560 -(672 + 246))) and (v94<=(1475 -(718 + 743)))) then if ((v94<=((287 -(140 + 146)) + 11)) or ((13882 -8965)<=(4613 -(850 + 813)))) then local v129=0 -0 ;local v130;local v131;local v132;local v133;while true do if (((8995 -6672)>=(1313 + 586)) and (v129==(1 + 0))) then v132=nil;v133=nil;v129=551 -(350 + 199) ;end if ((v129==(2 -0)) or ((6702 -(5297 -(514 + 691)))==(19113 -14617))) then while true do if (((1737 + 56)<(3931 -(664 + 669))) and (v130==(0 -0))) then local v283=0 + 0 ;while true do if ((v283==1) or ((4388 -((1603 -(380 + 443)) + (528 -(15 + 11))))==4558)) then v130=1;break;end if ((v283==0) or ((1359 + 2564)<(2961 + 73))) then v131=0;v132=nil;v283=817 -(24 + 792) ;end end end if (((7167 -3485)<(6993 -2825)) and (v130==1)) then v133=nil;while true do if ((4457>=(12781 -(9747 -(455 + 147)))) and (1==v131)) then v91[v132 + 1 ]=v133;v91[v132]=v133[v93[1 + 3 ]];break;end if ((v131==0) or ((532 + 71)>((3493 -1952) + 1422))) then local v336=0 -0 ;local v337;while true do if ((v336==(1526 -(544 + 982))) or ((8342 -(4203 + 993))<=(1424 -(73 + 172 + 394)))) then v337=0 + 0 ;while true do if ((v337==(1 + 0)) or ((11514 -8568)==(6046 -(296 + 1469)))) then v131=(1 -0) + 0 ;break;end if ((v337==(1662 -(89 + 336 + 1237))) or ((2144 -(409 + 61))<(1038 -718))) then v132=v93[3 -1 ];v133=v91[v93[3 + 0 ]];v337=2 -1 ;end end break;end end end end break;end end break;end if (((4776 -2091)<=(1826 + 1238)) and (0==v129)) then v130=1471 -(1087 + 384) ;v131=nil;v129=1;end end elseif ((v94==(12 + 1)) or (4627>=(2439 + 2452))) then local v171=0 -0 ;local v172;local v173;local v174;local v175;while true do if ((v171==(0 + 0)) or (2538==((4352 -(283 + 118)) -(262 + 151 + 955)))) then v172=0;v173=nil;v171=2 -(1 + 0) ;end if ((v171==(55 -(27 + 27))) or ((662 + 64)>=(348 + 1559))) then v174=nil;v175=nil;v171=617 -(128 + 487) ;end if (((4022 -(62 + 1868))<=(5888 -(538 + 531))) and (v171==(1944 -(1598 + 344)))) then while true do if ((((80 + 4657) -((2153 -(657 + 1024)) + 844))>=(200 + 3179)) and (v172==(0 -0))) then local v317=0 + 0 ;local v318;while true do if (((600 + 3414)>=(327 + 77)) and (v317==(0 + 0))) then v318=1906 -(1694 + 212) ;while true do if ((v318==(252 -(65 + 186))) or ((8383 -5109)<=(4731 -2515))) then v172=1 + 0 ;break;end if ((((3374 -(275 + 213)) -(230 + 428 + 911))<=3176) and (v318==(0 -0))) then local v400=0 + 0 ;while true do if (((9303 -4538)>(12559 -8080)) and (v400==(1 -0))) then v318=3 -2 ;break;end if ((v400==(0 + 0)) or ((1290 + 2241)==(384 -(603 -424)))) then v173=v93[689 -(171 + 516) ];v174={v91[v173](v91[v173 + 1 + 0 ])};v400=1 -0 ;end end end end break;end end end if ((((39969 -31219) -6884)<(10422 -6475)) and (v172==(3 -2))) then v175=1159 -(992 + 167) ;for v338=v173,v93[4 + (0 -0) ] do local v339=0 + 0 ;local v340;local v341;while true do if (((1286 -(431 + 78))>=(849 -(20 + 576))) and (v339==1)) then while true do if ((v340==(0 -0)) or (4931==(6362 -(1794 + 174)))) then v341=0 + 0 ;while true do if ((v341==0) or ((15860 -11025)<=2769)) then v175=v175 + (865 -(335 + 529)) ;v91[v338]=v174[v175];break;end end break;end end break;end if (((1272 + 1077)<(1203 + 1945)) and (v339==(961 -((2007 -(57 + 1772)) + 783)))) then v340=1920 -(1265 + 655) ;v341=nil;v339=(657 -(339 + 317)) + 0 ;end end end break;end end break;end end else local v176=0 + 0 ;local v177;while true do if (((1549 + 3077)>(4269 -(720 + 238))) and (v176==(789 -((476 -287) + 600)))) then v177=v91[v93[4]];if ((4918>(1866 -(578 + 59))) and v177) then v79=v79 + 1 ;else local v308=0 + 0 + 0 ;local v309;while true do if ((v308==0) or ((818 + 798)>=(6852 -4524))) then v309=1439 -(1150 + 289) ;while true do if ((v309==(0 + 0 + 0)) or (((3545 -(1434 + 493)) + 1254)>=(4706 -(1080 + 457)))) then v91[v93[3 -1 ]]=v177;v79=v93[3];break;end end break;end end end break;end end end elseif ((v94<=((236 -(185 + 37)) + 1)) or ((991 + 1799)<=(1988 -1228))) then v91[v93[2]]();elseif (((21288 -16819)==(1794 + (8524 -5849))) and (v94>((20 + 43) -47))) then if (((257 + 32)<2283) and (v91[v93[4 -2 ]]<=v93[12 -8 ])) then v79=v79 + 1 + 0 ;else v79=v93[1420 -(1014 + 403) ];end else local v178=712 -((422 -175) + 465) ;local v179;local v180;local v181;local v182;while true do if ((((5826 -2993) -2185)==(2423 -(826 + 949))) and (v178==(1 + 0 + 1))) then while true do if ((v179==1) or ((804 + 1100)<=(2184 -(422 + 1307)))) then v182=nil;while true do if (((625 -(607 + 17))==v180) or ((3467 + 411)<=(3557 -1820))) then for v390=v181 + 1 + 0 ,v93[(47 -(38 + 8)) + 2 ] do v7(v182,v91[v390]);end break;end if (((0 -0)==v180) or (1618>(3703 -(454 + (4575 -3573))))) then local v382=(0 -0) -0 ;while true do if ((v382==(3 -2)) or (3293>(22967 -18247))) then v180=1;break;end if (((8669 -3980)>=953) and (v382==0)) then v181=v93[1320 -(926 + 392) ];v182=v91[v181];v382=928 -(123 + 804) ;end end end end break;end if (((2107 -1239)>=((6053 -4125) -(1051 + 137))) and (v179==0)) then v180=0 + 0 ;v181=nil;v179=(162 + 1214) -(641 + 734) ;end end break;end if (((175 + 765)==(892 + 48)) and ((0 -0)==v178)) then v179=0 + 0 ;v180=nil;v178=2 -1 ;end if (((63 -(43 + 19))==v178) or ((297 + 138)==(7164 -(693 + 1952)))) then v181=nil;v182=nil;v178=1778 -(822 + 345 + 609) ;end end end elseif (((2061 + 2619)>=(2101 -984)) and (v94<=(18 + 1 + 1))) then if ((v94<=(31 -(561 -(245 + 303)))) or ((6090 -(1029 + 72 + 126))<=(6758 -2834))) then do return v91[v93[1192 -(527 + 663) ]];end elseif ((v94>19) or (189==((2113 -(336 + 262)) -(508 + 137)))) then if ((4183>=797) and  not v91[v93[1021 -(904 + 115) ]]) then v79=v79 + (1 -(0 + 0)) ;else v79=v93[442 -(392 + 47) ];end else v34[v93[1355 -(611 + 673 + 68) ]]=v91[v93[1832 -(1592 + 238) ]];end elseif (((1377 -(2343 -(382 + 1061)))<=(730 + 1199 + 664)) and (v94<=(51 -29))) then if ((v94==(1176 -(544 + 611))) or ((1473 + 105)>=(3843 + 837))) then if (((7 + 593)>(125 + 39)) and (v93[2]<v91[v93[11 -7 ]])) then v79=v79 + ((1889 -(770 + 185)) -(722 + 211)) ;else v79=v93[1 + 0 + 2 ];end else local v185=0;local v186;local v187;local v188;while true do if ((v185==(1 + 0)) or ((811 -291)==(2709 -(236 + 448)))) then v188=nil;while true do if ((2680==2680) and (v186==(1 + 0))) then while true do if ((v187==(0 + 0)) or (3872<(72 + 1465))) then v188=v93[655 -(304 + 349) ];v91[v188]=v91[v188](v13(v91,v188 + (1 -0) ,v93[1 + 2 ]));break;end end break;end if ((v186==(0 -(1073 -(941 + 132)))) or (540==(10115 -(13411 -6865)))) then local v319=570 -(196 + (882 -508)) ;while true do if (((6614 -2682)>=(2681 -(59 + (761 -568)))) and (v319==(4 -3))) then v186=1 -(0 -0) ;break;end if ((v319==((0 + 0) -0)) or ((1118 + 2999)<=(3326 -(405 + 427)))) then v187=0 + 0 ;v188=nil;v319=2 -(1369 -(415 + 953)) ;end end end end break;end if ((v185==(0 -0)) or (((10135 -6286) -(17 + 179))>(8208 -4549))) then v186=0 -0 ;v187=nil;v185=1970 -(158 + 1811) ;end end end elseif ((v94==23) or ((490 + 455)>=2189)) then local v189=0;local v190;local v191;local v192;while true do if ((v189==(0 + 0)) or ((1797 + 327)>=2796)) then v190=v93[2];v191=v91[v190];v189=1 + 0 ;end if ((((2742 -1568) + 1440)<(1163 + 1748)) and (v189==(1 + 0))) then v192=v93[3];for v284=(286 -(118 + 167)) + 0 ,v192 do v191[v284]=v91[v190 + v284 ];end break;end end else v91[v93[2]]= #v91[v93[3]];end elseif (((15175 -10331)>2314) and (v94<=37)) then if ((((2092 -(918 + 240)) + 28 + 89)<=(5377 -3881)) and (v94<=(68 -38))) then if ((v94<=27) or (2906>=3865)) then if ((v94<=(345 -(27 + 293))) or ((1532 -712)>(270 + 1678))) then v91[v93[1 + 1 ]][v93[5 -2 ]]=v91[v93[15 -11 ]];elseif ((3211<=(5887 -(678 + 1307))) and (v94==(83 -57))) then local v194=0 -0 ;local v195;local v196;local v197;while true do if ((v194==(0 -0)) or ((1483 -816)>(4215 -1878))) then local v272=0 + 0 ;while true do if ((4145<=(3099 + 1850)) and ((1 -0)==v272)) then v194=4 -3 ;break;end if (((1120 + 1165)>=703) and (v272==(0 + 0))) then v195=v93[2];v196={v91[v195](v13(v91,v195 + (4 -3) ,v80))};v272=1163 -(50 + 1112) ;end end end if ((v194==(1159 -(117 + 1041))) or ((1198 -((2081 -(922 + 204)) + 226))>=(400 + 732))) then v197=0 + 0 ;for v287=v195,v93[3 + 1 ] do local v288=0;while true do if ((v288==(0 -0)) or ((2970 -(1230 + 25))<(1498 -739))) then v197=v197 + (2 -1) ;v91[v287]=v196[v197];break;end end end break;end end else local v198=62 -(13 + 49) ;local v199;local v200;local v201;while true do if ((v198==(1017 -((473 -134) + 677))) or ((9735 -(11121 -3548))>=4924)) then local v273=0;while true do if ((v273==(1577 -(1096 + 480))) or ((2775 -(188 + 1154))==(70 + 181 + 602))) then v198=(827 + 61) -(443 + 443) ;break;end if ((v273==(0 -0)) or ((7769 -(5082 + 195))<=((470 -330) + 445))) then v201=v91[v199] + v200 ;v91[v199]=v201;v273=1 + 0 ;end end end if ((((6197 -(404 + 1259)) -(26 + 194))>(769 + 32)) and (v198==(649 -(393 + 256)))) then local v274=0;while true do if (((2 -1)==v274) or ((3517 -(662 + 632))==2917)) then v198=1 + 0 ;break;end if (((3955 -(1042 + 797))<=4336) and ((0 + 0)==v274)) then v199=v93[2 -0 ];v200=v91[v199 + (5 -3) ];v274=(1456 -(562 + 892)) -(487 -(200 + 286)) ;end end end if ((v198==2) or ((4065 -(18 + 27 + (852 -487)))<(1960 -(950 + 457)))) then if ((v200>(1424 -(1125 + 299))) or ((10774 -7815)<=(6164 -3844))) then if ((v201<=v91[v199 + 1 + 0 ]) or ((6210 -(861 + 204 + 329))==(5540 -(1261 + 620)))) then local v344=(878 -(597 + 281)) -0 ;local v345;while true do if (((2632 -((569 -(361 + 98)) + 1721))<=(1732 + 3155)) and (v344==0)) then v345=674 -(212 + 462) ;while true do if ((v345==(1322 -(981 + 341))) or ((9042 -6317)>=(2694 + 1254))) then v79=v93[1343 -(444 + 896) ];v91[v199 + 2 + (1297 -(10 + 1286)) ]=v201;break;end end break;end end end elseif ((v201>=v91[v199 + 1 + 0 ]) or ((4277 -(118 + 342))<=(36 + 23))) then local v346=0;local v347;local v348;while true do if (((0 -0)==v346) or ((3680 -2155)>(7500 -4263))) then v347=0;v348=nil;v346=2 -(348 -(181 + 166)) ;end if ((v346==(2 -1)) or ((10517 -5856)<=(40 + 593))) then while true do if (((15725 -12352)>(1277 -(438 + 305))) and (v347==(1020 -(720 + 300)))) then v348=0 -(0 -0) ;while true do if (((32 + 6 + 24)==62) and (v348==(1283 -(410 + 873)))) then v79=v93[955 -(734 + 218) ];v91[v199 + 3 ]=v201;break;end end break;end end break;end end end break;end end end elseif (((3187 -(412 + 1002))<=(1273 + 2144)) and (v94<=(25 + 3))) then v91[v93[1447 -(353 + 1092) ]]=v34[v93[3]];elseif ((v94==29) or ((570 + 210)<332)) then v91[v93[4 -2 ]]=v30(v86[v93[1 + 2 ]],nil,v35);else v91[v93[2]]=v91[v93[7 -4 ]][v93[300 -(64 + 232) ]];end elseif ((1414==(27 + 1387)) and (v94<=33)) then if ((v94<=(6 + 25)) or ((1699 + 40)<=(548 -(257 + 97)))) then local v138=v93[2];local v139=v93[4];local v140=v138 + (175 -((1376 -(416 + 864)) + 77)) ;local v141={v91[v138](v91[v138 + (2 -1) ],v91[v140])};for v150=(1 + 0) -0 ,v139 do v91[v140 + v150 ]=v141[v150];end local v142=v141[1];if ((3700>=(136 + 76 + 2743)) and v142) then local v205=0;local v206;local v207;while true do if (((1 + 0)==v205) or (1704<=((284 + 1547) -985))) then while true do if (((2101 -793)<=(525 + 993)) and (v206==(0 -0))) then v207=0 -0 ;while true do if ((0==v207) or (2262==((184 + 2179) -(255 + 762)))) then v91[v140]=v142;v79=v93[33 -((855 -(333 + 511)) + 19) ];break;end end break;end end break;end if ((v205==(0 -0)) or ((6112 -((491 -235) + (3290 -2081)))==(225 + 2853))) then v206=0;v207=nil;v205=1 + 0 + 0 ;end end else v79=v79 + 1 + 0 ;end elseif (((2097 + 279)>=(1678 -(324 + 1330))) and (v94>32)) then local v208=0;local v209;while true do if (((4161 -2737)<=(1613 + (1046 -(181 + 383)))) and (v208==(654 -(199 + 455)))) then v209=v91[v93[8 -4 ]];if (((4697 -(39 + 63))>((439 -225) + 590)) and  not v209) then v79=v79 + 1 + 0 ;else local v310=1529 -((1470 -630) + (1633 -944)) ;while true do if ((v310==(1423 -(265 + 1158))) or ((6710 -3480)<=(3072 -(153 + 188)))) then v91[v93[4 -2 ]]=v209;v79=v93[5 -2 ];break;end end end break;end end else v91[v93[2]][v93[2 + 1 ]]=v93[4];end elseif ((3249>(3062 -988)) and (v94<=(34 + 1))) then if ((v94>(73 -39)) or ((9679 -4842)==1344)) then local v212=480 -(155 + 325) ;local v213;local v214;while true do if (((1512 + (2258 -984))>(2524 -(175 + 1155))) and (v212==(1 + 0))) then while true do if ((v213==(0 + 0)) or (((8489 + 11899) -15685)<882)) then v214=v93[483 -(157 + 324) ];v91[v214](v13(v91,v214 + (30 -(15 + 14)) ,v93[1 + 2 ]));break;end end break;end if (((5519 -(10 + 1717))==(12747 -8955)) and ((0 + 0)==v212)) then v213=1097 -(546 + 551) ;v214=nil;v212=1;end end else v91[v93[1 + 1 ]]=v91[v93[2 + 1 ]] -v91[v93[3 + 1 ]] ;end elseif (((958 + 613)<=3028) and (v94==(5 + 31))) then do return;end elseif ((v93[1 + 1 ]==v91[v93[4]]) or (2609>=(320 + 2985))) then v79=v79 + 1 + 0 ;else v79=v93[(1896 -(885 + 1000)) -(16 -8) ];end elseif (((207 + 301)<(508 + 485)) and (v94<=(139 -(33 + 63)))) then if (((1758 -1255)==(1352 -(333 + 516))) and (v94<=(313 -(173 + (331 -231))))) then if (((718 + 765 + 2380)>(5733 -(1250 + 1794))) and (v94<=(143 -105))) then local v143=0 -0 ;local v144;local v145;while true do if ((v143==1) or ((785 -((1613 -(1378 + 216)) + 50))>=(1878 + 1591))) then while true do if (((1327 -(546 + 175))<=(3543 -(782 + 808))) and (v144==0)) then v145=v93[7 -(3 + 2) ];v91[v145]=v91[v145](v13(v91,v145 + (842 -(794 + 47)) ,v80));break;end end break;end if (((1778 -309)<(3526 -(336 + 287))) and (v143==0)) then v144=0;v145=nil;v143=313 -(153 + 159) ;end end elseif (((4857 -(540 + (1908 -(393 + 840))))>=(76 + 716)) and (v94==(1201 -(577 + 585)))) then v79=v93[1891 -(1272 + 616) ];else v91[v93[1415 -(953 + 460) ]]=v93[546 -(111 + 432) ]~=(0 + 0) ;end elseif (((3282 + 345)<=(729 + 3545)) and (v94<=(104 -63))) then v91[v93[1509 -(1325 + 182) ]]={};elseif ((v94==(1609 -(628 + 939))) or (3861<(1093 + (7924 -5734)))) then local v218=502 -(482 + 20) ;local v219;local v220;while true do if (((4171 + 577)>=2057) and (v218==(1 + (0 -0)))) then for v291=1 + 0 , #v90 do local v292=0 -0 ;local v293;while true do if ((v292==(0 + 0)) or ((4787 -(1049 + 208))==1655)) then v293=v90[v291];for v360=0, #v293 do local v361=0 + 0 ;local v362;local v363;local v364;while true do if (((3167 + 1086)>=(9213 -6600)) and (v361==0)) then local v395=0 + 0 ;while true do if (((950 + 103)>=(1880 -(98 + 909))) and ((80 -(51 + 29))==v395)) then v362=v293[v360];v363=v362[1 -0 ];v395=(1 + 1) -1 ;end if ((v395==(1 + 0)) or ((3639 -(6 + 177))<(324 -198))) then v361=(39 -(30 + 6)) -2 ;break;end end end if ((2060>=(57 + 195)) and (v361==(2 -1))) then v364=v362[2];if (((v363==v91) and (v364>=v219)) or ((4646 -3021)>=(78 + 2684))) then local v412=0 + 0 ;local v413;while true do if (((70 -46)<=1077) and (v412==(39 -(9 + 30)))) then v413=(466 -(303 + 163)) + 0 ;while true do if ((960>(1489 -936)) and (v413==(1313 -(695 + 618)))) then v220[v364]=v363[v364];v362[1]=v220;break;end end break;end end end break;end end end break;end end end break;end if (((1165 + 3364 + 274)>2743) and (v218==0)) then local v276=0 -0 ;while true do if (((3796 -(578 + 527))<=(3535 + 1331)) and (v276==0)) then v219=v93[1 + 1 ];v220={};v276=40 -(15 + 24) ;end if ((v276==1) or ((5673 -((679 -400) + 1135))<(2277 -(970 + (616 -397))))) then v218=1 + 0 ;break;end end end end else local v221=(0 -0) -0 ;local v222;local v223;local v224;local v225;local v226;while true do if ((v221==(0 + 0)) or ((1195 -(371 + 24))>(11434 -7425))) then local v277=0 + 0 ;while true do if ((v277==(1687 -(546 + 1140))) or ((20571 -15836)<=(7360 -5459))) then v221=1 -0 ;break;end if ((v277==(0 + 0)) or ((369 + 256)==(12962 -9561))) then v222=0 -0 ;v223=nil;v277=1499 -(184 + 1314) ;end end end if ((v221==(1 + 0)) or ((4920 -(112 + 693))==((3735 -(69 + 866)) -(1671 + 318)))) then local v278=0;while true do if ((v278==(1 + 0 + 0)) or ((6168 -(1067 + (1784 -1150)))<=(2719 + 813))) then v221=4 -2 ;break;end if (((0 + 0)==v278) or ((348 + 177 + 296)>=(3141 -(194 + 1284)))) then v224=nil;v225=nil;v278=1 + 0 ;end end end if ((v221==(3 -1)) or ((2801 -(151 + 353))>(4710 + 53))) then v226=nil;while true do if (((1 + 1)==v222) or (4942<=4242)) then for v350=v223,v80 do local v351=0 -0 ;local v352;while true do if ((v351==(0 + 0)) or (1559<=(2173 -(309 + 1206)))) then v352=0;while true do if (((5684 -3396)>(11 -8)) and ((0 -0)==v352)) then v226=v226 + (1 -0) ;v91[v350]=v224[v226];break;end end break;end end end break;end if (((43 + 422)<=(2463 + 2275)) and (v222==0)) then local v326=0 + 0 ;local v327;while true do if (((961 + 1524)==(4738 -2253)) and (v326==(0 + 0))) then v327=656 -(26 + 630) ;while true do if (((1883 + 2201)>(2035 -(14 + 90))) and (v327==(3 -2))) then v222=1 + 0 ;break;end if ((((4390 -3003) + 3317)>(110 + 81)) and (v327==(0 + 0))) then local v403=0 -0 ;while true do if (((5272 -(525 + 1383))>(3301 -(8 + 73))) and (v403==(1 + 0 + 0))) then v327=1 + 0 + 0 ;break;end if (((5465 -(829 + 10))>(7178 -2863)) and ((0 -0)==v403)) then v223=v93[3 -1 ];v224,v225=v88(v91[v223](v91[v223 + 1 + 0 ]));v403=2 -1 ;end end end end break;end end end if ((v222==(1629 -(136 + 1492))) or ((4918 -(746 + (1997 -(1198 + 669))))<(747 -550))) then local v328=0 -0 ;while true do if ((v328==((1964 -(1613 + 350)) -0)) or ((1500 -(1081 + 1 + 39))>(3936 -(390 + 410)))) then v222=2;break;end if ((v328==(0 + 0)) or (((2310 -(252 + 841)) + 1212)<=((2884 -(1644 + 108)) + 749))) then local v387=0;while true do if ((v387==(0 + 0)) or ((5699 -(346 + 637))==266)) then v80=(v225 + v223) -(1 -(0 -0)) ;v226=1892 -(8 + 1884) ;v387=1119 -(990 + 128) ;end if ((v387==(1 + 0)) or ((1797 -(244 + 153))>2039)) then v328=545 -(489 + 55) ;break;end end end end end end break;end end end elseif ((v94<=46) or ((6547 -(150 + 1490))==(4397 -2967))) then if ((v94<=(100 -56)) or (2402<(8495 -6154))) then local v147=0 + 0 ;local v148;local v149;while true do if (((96 + 814)<=(1957 -(518 + 235))) and (v147==(309 -(31 + 278)))) then local v245=0 -0 ;while true do if (((631 + 556)<=4923) and (((1226 -(1150 + 75)) + 0)==v245)) then v147=1 + 0 ;break;end if (((2726 + 907)>=(9 + 54)) and (v245==(0 -0))) then v148=1147 -(1047 + 100) ;v149=nil;v245=1405 -(1302 + 102) ;end end end if ((v147==(1 + 0)) or ((1249 + 1709)<=(1017 + 76))) then while true do if ((2378<((10935 + 6862) -13982)) and (v148==0)) then v149=v93[2 + 0 ];v91[v149]=v91[v149](v91[v149 + (1 -0) ]);break;end end break;end end elseif ((v94==(1321 -(1069 + 207))) or ((4434 -(33 + 211))<(4705 -(3722 -(7 + 886))))) then local v227=(0 -0) + 0 ;local v228;local v229;while true do if (((3043 + 244)<=(342 + (9326 -5911))) and (v227==((1603 -1036) -(148 + 419)))) then v228=0 -0 ;v229=nil;v227=2 -1 ;end if ((1371>=100) and (v227==((1 -0) -0))) then while true do if ((290==(818 -528)) and (v228==((1430 -(21 + 52)) -(766 + 591)))) then v229=v93[3 -1 ];v91[v229](v13(v91,v229 + (1 -0) ,v80));break;end end break;end end else local v230=0;local v231;local v232;while true do if (((4202 -(120 + 1042))<3197) and (v230==(0 + 0))) then v231=0 -0 ;v232=nil;v230=1751 -(715 + 1035) ;end if ((v230==(1988 -(1371 + (1223 -(503 + 104))))) or ((915 + 2370)<=(3104 -(861 + 94)))) then while true do if ((696<1105) and (v231==(0 -0))) then v232=v93[2 + 0 + 0 ];do return v13(v91,v232,v232 + v93[1451 -(118 + 1330) ] );end break;end end break;end end end elseif (((231 + 35)==(526 -260)) and (v94<=(856 -(805 + 3)))) then if (((6717 -(1705 + 207))>=(2771 + 1956)) and (v94==(5 + 42))) then for v246=v93[2],v93[2 + 1 ] do v91[v246]=nil;end else local v233=0 + 0 + 0 ;local v234;local v235;local v236;while true do if (((7 + 594)>=601) and (v233==(98 -(86 + 11)))) then v236={};v235=v10({},{__index=function(v296,v297)local v311=0 + 0 ;local v312;local v313;while true do if ((2798>=((6245 -3307) -(597 + 60))) and (v311==(0 + 0))) then local v365=497 -(59 + 92 + 346) ;while true do if (((577 + 3969)<(13764 -9099)) and (v365==(998 -(199 + 798)))) then v311=(2 + 0) -(1 + 0) ;break;end if ((v365==(0 + 0)) or ((3952 -2027)==(8974 -4726))) then v312=0;v313=nil;v365=1;end end end if ((v311==(3 -2)) or (3156<=((4961 -3212) -(264 + 1472)))) then while true do if ((v312==(1020 -(951 + 69))) or ((5610 -(220 + 615))<=(3714 -(268 + 1215)))) then local v397=0;while true do if (((6717 -(5449 -(1576 + 114)))<=(2186 + (4831 -3191))) and (v397==0)) then v313=v236[v297];return v313[745 -(248 + 496) ][v313[1554 -(1163 + 389) ]];end end end end break;end end end,__newindex=function(v298,v299,v300)local v314=0;local v315;local v316;while true do if ((2314>2056) and (0==v314)) then v315=(0 + 0) -0 ;v316=nil;v314=350 -(345 + 4) ;end if ((((16886 -12633) -2263)<(5793 -(137 + 1001))) and (v314==(107 -(61 + 45)))) then while true do if ((1835>=(413 -135)) and (v315==(1132 -(629 + 503)))) then v316=v236[v299];v316[1 + 0 ][v316[8 -6 ]]=v300;break;end end break;end end end});v233=1191 -(831 + 56 + 302) ;end if (((2800 -(93 + 947))<(2994 + 1922)) and (v233==(0 + 0))) then v234=v86[v93[4 -1 ]];v235=nil;v233=2 -1 ;end if ((((6238 -(573 + 328)) -(1415 + 497))>=1951) and (v233==(555 -((862 -(374 + 448)) + 513)))) then for v301=1,v93[2 + 2 ] do local v302=847 -((1224 -769) + 392) ;local v303;local v304;while true do if ((v302==(1 + 0)) or ((4694 -(6346 -4224))>=(1830 + (9704 -7114)))) then while true do if ((1109==1109) and (v303==0)) then v79=v79 + 1 ;v304=v85[v79];v303=2 -1 ;end if ((2484<3357) and (v303==1)) then if ((v304[(1 + 1) -1 ]==(13 -6)) or ((496 + 480)<=((1370 -(385 + 853)) -38))) then v236[v301-(4 -3) ]={v91,v304[3 + 0 ]};else v236[v301-(361 -(193 + 167)) ]={v34,v304[3 + 0 ]};end v90[ #v90 + (1 -0) ]=v236;break;end end break;end if ((1334<=(3079 + 1849)) and (v302==0)) then v303=1260 -(957 + 253 + (316 -(73 + 193))) ;v304=nil;v302=1 + 0 ;end end end v91[v93[2]]=v30(v234,v235,v35);break;end end end elseif ((v94==(117 -68)) or ((2733 + 1692)<(2294 -(511 + 731)))) then if ((318>(1245 -(174 + 151 + 757))) and v91[v93[2]]) then v79=v79 + (193 -(76 + 22 + 94)) ;else v79=v93[1122 -(494 + 625) ];end else local v237=0 -(1942 -(476 + 1466)) ;local v238;local v239;local v240;local v241;local v242;while true do if ((((7439 -(320 + 764)) -3819)<=4475) and (v237==(1 + 0))) then v240=nil;v241=nil;v237=2;end if ((v237==(1778 -((2739 -(1304 + 149)) + 490))) or ((3726 -(343 + 435))==(1822 -(328 + 238)))) then v242=nil;while true do if (((2078 -(479 + 383))<=(618 + 1671)) and (v238==(2 + 0))) then while true do if (((1980 -(8 + 38))==1934) and ((3 -2)==v239)) then v242=v91[v240 + 2 ];if (((10713 -6308)>(10376 -6961)) and (v242>(0 + (227 -(154 + 73))))) then if ((1257<((5287 -(692 + 475)) + 29)) and (v241>v91[v240 + (1 -0) ])) then v79=v93[7 -4 ];else v91[v240 + 1 + 2 ]=v241;end elseif (((5551 -(1093 + 566))==(2722 + 1170)) and (v241<v91[v240 + ((2 + 0) -1) ])) then v79=v93[3];else v91[v240 + (296 -(64 + 229)) ]=v241;end break;end if ((((3095 -(1570 + 256)) + 3463)==4732) and (v239==0)) then local v389=678 -((728 -(140 + 69)) + 159) ;while true do if ((4939>=(119 + 162)) and (v389==0)) then v240=v93[(1 + 1) -0 ];v241=v91[v240];v389=1;end if ((v389==(130 -(48 + 81))) or ((9101 -6821)>(5008 -((209 -167) + 538)))) then v239=997 -(291 + 705) ;break;end end end end break;end if (((2336 -(379 + 801))<(2246 + (473 -(83 + 198)))) and (v238==1)) then v241=nil;v242=nil;v238=2;end if ((v238==(1754 -(71 + 1683))) or ((2751 -(20 + 284))<((294 + 1199) -(69 + 77)))) then v239=(2435 -600) -(705 + 1130) ;v240=nil;v238=1674 -(1458 + (2086 -(755 + 1116))) ;end end break;end if ((866==(46 + 820)) and (v237==(0 + 0))) then v238=987 -(65 + 750 + 172) ;v239=nil;v237=1 -0 ;end end end v79=v79 + 1 + 0 ;break;end end end end A,B=v28(v11(v83));if  not A[1] then local v95=v33[4][v79] or "?" ;error("Script error at ["   .. v95   .. "]:"   .. A[2] );else return v13(A,2,B);end end;end if (v48==0) then v49=v33[1];v50=v33[2];v48=1;end end end return v30(v29(),{},v17)(...);end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v52=0 + 0 ;local v53;local v54;local v55;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v52==(6 -2)) then v61=nil;while true do if (v53==(812 -(201 + 609))) then local v84=0 + 0 ;while true do if (0==v84) then v58=nil;v59=nil;v84=1;end if (v84~=1) then else v53=3;break;end end end if (v53~=3) then else v60=nil;v61=nil;v53=4;end if (v53==1) then v56=nil;v57=nil;v53=1050 -(203 + 845) ;end if (0==v53) then v54=0 + 0 ;v55=nil;v53=1;end if (v53==(6 -2)) then while true do if (v54==(6 -3)) then v61=nil;while true do local v107=0;local v108;while true do if (v107==(0 + 0)) then v108=1280 -(709 + 571) ;while true do if (v108~=1) then else if (v55==2) then local v114=0 -0 ;local v115;while true do if (v114~=(810 -(598 + 212))) then else v115=949 -(824 + 125) ;while true do if (v115==0) then local v248=0;local v249;while true do if (0==v248) then v249=0 -0 ;while true do if ((0 + 0)~=v249) then else for v366=1 + 0 ,v24() do local v367=0;local v368;local v369;local v370;while true do if (v367==(1258 -(1112 + 145))) then v370=nil;while true do if (v368~=0) then else local v423=1925 -(925 + 1000) ;while true do if ((0 + 0)~=v423) then else v369=0 + 0 ;v370=nil;v423=1;end if (v423==(1 + 0)) then v368=2 -1 ;break;end end end if (1~=v368) then else while true do if (v369~=0) then else v370=v22();if (v21(v370,1963 -(1100 + 862) ,1)~=(0 -0)) then else local v435=0 -0 ;local v436;local v437;local v438;local v439;while true do if (v435~=(1 -0)) then else v438=nil;v439=nil;v435=2;end if (v435~=(905 -(540 + 365))) then else v436=0 + 0 ;v437=nil;v435=1 + 0 ;end if (v435~=(5 -3)) then else while true do if (v436~=1) then else local v440=0 + 0 ;local v441;while true do if (v440~=0) then else v441=0 -0 ;while true do if (v441==0) then v439={v23(),v23(),nil,nil};if (v437==(0 + 0)) then local v447=0;while true do if (v447~=0) then else v439[3]=v23();v439[4]=v23();break;end end elseif (v437==1) then v439[3]=v24();elseif (v437==2) then v439[11 -8 ]=v24() -(2^(53 -37)) ;elseif (v437==(4 -1)) then local v456=0 -0 ;local v457;while true do if (v456==(0 -0)) then v457=1875 -(1800 + 75) ;while true do if (v457==(1871 -(188 + 1683))) then v439[7 -4 ]=v24() -((2 -0)^(422 -(220 + 186))) ;v439[4]=v23();break;end end break;end end end v441=956 -(846 + 109) ;end if (v441==(735 -(180 + 554))) then v436=2;break;end end break;end end end if (v436==(264 -(73 + 188))) then if (v21(v438,1 + 2 ,3)==1) then v439[4]=v61[v439[10 -6 ]];end v56[v366]=v439;break;end if (v436==(4 -2)) then local v443=0;while true do if (v443==(1714 -(1400 + 314))) then local v446=0;while true do if ((1736 -(1367 + 369))~=v446) then else if (v21(v438,2 -1 ,1)==(1 -0)) then v439[7 -5 ]=v61[v439[908 -(610 + 296) ]];end if (v21(v438,2 + 0 ,2)~=1) then else v439[13 -10 ]=v61[v439[3 + 0 ]];end v446=1 + 0 ;end if (v446~=(89 -(46 + 42))) then else v443=497 -(254 + 242) ;break;end end end if (v443~=(2 -1)) then else v436=1 + 2 ;break;end end end if (v436==0) then v437=v21(v370,2,912 -(886 + 23) );v438=v21(v370,393 -(365 + 24) ,961 -(765 + 190) );v436=1;end end break;end end end break;end end break;end end break;end if (v367~=(289 -(245 + 44))) then else v368=0;v369=nil;v367=1;end end end for v371=1,v24() do v57[v371-1 ]=v29();end v249=1;end if ((1 + 0)~=v249) then else v115=1;break;end end break;end end end if (v115==1) then local v250=1918 -(1352 + 566) ;while true do if (v250==(0 + 0)) then local v305=0 + 0 ;while true do if (v305==(0 -0)) then for v373=1,v24() do v58[v373]=v24();end return v59;end end end end end end break;end end end break;end if (v108==0) then if (v55~=0) then else local v116=0;local v117;while true do if (v116==(509 -(179 + 330))) then v117=0;while true do if ((1433 -(472 + 960))~=v117) then else local v251=0;while true do if (v251==(1 + 0)) then v117=1 + 1 ;break;end if (v251~=0) then else local v306=0 -0 ;while true do if (v306~=(1 + 0)) then else v251=503 -(382 + 120) ;break;end if (v306~=0) then else v58={};v59={v56,v57,nil,v58};v306=1;end end end end end if (v117~=2) then else v55=2 -1 ;break;end if (v117==0) then local v252=1148 -(723 + 425) ;local v253;while true do if (v252~=0) then else v253=1071 -(420 + 651) ;while true do if (v253~=(945 -(410 + 535))) then else local v353=0 -0 ;while true do if ((0 -0)~=v353) then else v56={};v57={};v353=2 -1 ;end if (1==v353) then v253=4 -3 ;break;end end end if (v253~=1) then else v117=1;break;end end break;end end end end break;end end end if (v55==1) then local v118=0 -0 ;local v119;while true do if (v118==(0 + 0)) then v119=0 + 0 ;while true do if (v119==(4 -2)) then v55=2 + 0 ;break;end if (1~=v119) then else local v254=0;while true do if (v254==1) then v119=2;break;end if ((0 + 0)~=v254) then else local v307=0 + 0 ;while true do if (v307~=(841 -(373 + 467))) then else v254=419 -(94 + 324) ;break;end if (v307==(0 -0)) then for v375=1,v60 do local v376=0 -0 ;local v377;local v378;local v379;local v380;while true do if (v376~=(0 -0)) then else v377=0 -0 ;v378=nil;v376=1;end if (v376==1) then v379=nil;v380=nil;v376=25 -(18 + 5) ;end if (v376~=2) then else while true do if (v377==(1536 -(199 + 1336))) then v380=nil;while true do if (v378~=(4 -3)) then else if (v379==1) then v380=v22()~=(0 + 0) ;elseif (v379==(134 -(19 + 113))) then v380=v25();elseif (v379==(11 -8)) then v380=v26();end v61[v375]=v380;break;end if (0~=v378) then else local v431=0 + 0 ;while true do if (v431~=(1 -0)) then else v378=2 -1 ;break;end if (v431==(0 -0)) then v379=v22();v380=nil;v431=1;end end end end break;end if (v377==(0 + 0)) then v378=0;v379=nil;v377=1 -0 ;end end break;end end end v59[7 -4 ]=v22();v307=1;end end end end end if (v119==(0 + 0)) then local v255=0 -0 ;local v256;while true do if (v255==(386 -(25 + 361))) then v256=0;while true do if (v256==(1388 -(904 + 483))) then v119=3 -2 ;break;end if (v256==0) then local v355=671 -(653 + 18) ;while true do if (v355~=1) then else v256=2 -1 ;break;end if (v355~=0) then else v60=v24();v61={};v355=1 + 0 ;end end end end break;end end end end break;end end end v108=1;end end break;end end end break;end if (v54==2) then local v98=0;local v99;while true do if (v98==0) then v99=0;while true do if (v99==1) then v54=9 -6 ;break;end if (v99==(0 + 0)) then local v112=0 -0 ;while true do if ((1 -0)==v112) then v99=1 + 0 ;break;end if (v112==0) then v59=nil;v60=nil;v112=1;end end end end break;end end end if (v54==0) then local v100=1499 -(1365 + 134) ;local v101;while true do if (v100==(0 + 0)) then v101=0 -0 ;while true do if (v101~=1) then else v54=1 + 0 ;break;end if (v101~=(1599 -(1417 + 182))) then else local v113=0 + 0 ;while true do if (v113~=0) then else v55=0 -0 ;v56=nil;v113=1;end if (v113==(1941 -(445 + 1495))) then v101=1;break;end end end end break;end end end if (v54~=(1 -0)) then else local v102=1460 -(126 + 1334) ;while true do if (v102==1) then v54=5 -3 ;break;end if (v102==0) then v57=nil;v58=nil;v102=1;end end end end break;end end break;end if (v52~=1) then else v55=nil;v56=nil;v52=29 -(23 + 4) ;end if (v52==2) then v57=nil;v58=nil;v52=3;end if ((0 + 0)==v52) then v53=0 -0 ;v54=nil;v52=1 + 0 ;end if (v52~=(3 + 0)) then else v59=nil;v60=nil;v52=4;end end end v18=5;end if (v18==1) then function v21(v36,v37,v38)if v38 then local v70=(v36/((4 -2)^(v37-1)))%((2 -0)^(((v38-(1288 -(490 + 549 + 248))) -(v37-(684 -(170 + (2355 -(200 + 1642)))))) + 1)) ;return v70-(v70%(3 -2)) ;else local v71=(842 -(819 + (473 -(68 + 384))))^(v37-((1860 -(190 + 992)) -(436 + 241))) ;return (((v36%(v71 + v71))>=v71) and (1 -0)) or 0 ;end end v22=nil;function v22()local v62=v1(v16,v19,v19);v19=v19 + 1 ;return v62;end v23=nil;v18=2;end if (v18==2) then function v23()local v63,v64=v1(v16,v19,v19 + 2 + 0 );v19=v19 + (3 -1) ;return (v64 * 256) + v63 ;end v24=nil;function v24()local v65,v66,v67,v68=v1(v16,v19,v19 + 3 );v19=v19 + (10 -6) ;return (v68 * (3057653 + 13719563)) + (v67 * (206778 -141242)) + (v66 * (723 -467)) + v65 ;end v25=nil;v18=3;end end end vv9(),...);end
